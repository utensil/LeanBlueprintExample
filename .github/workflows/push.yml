on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write

jobs:
  build_project:
    runs-on: ubuntu-latest
    name: Build project
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install elan
        run: curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain leanprover/lean4:4.0.0

      - name: Get mathlib cache
        run: ~/.elan/bin/lake -Kenv=dev exe cache get

      - name: Build project
        run: ~/.elan/bin/lake -Kenv=dev build LeanBlueprintExample

      - name: Get mathlib commit ID
        id: get-mathlib-commit-id
        run: |
          mkdir -p build/doc/Mathlib
          echo "mathlib_docs_commit=$(cd lake-packages/mathlib && git log -n 1 --format=%H)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache mathlib docs
        uses: actions/cache@v3
        with:
          path: build/doc/Mathlib
          key: mathlib-docs-${{ steps.get-mathlib-commit-id.outputs.mathlib_docs_commit }}

      - name: Build documentation
        run: ~/.elan/bin/lake -Kenv=dev build Mathlib:docs LeanBlueprintExample:docs

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies

      - name: Install blueprint apt deps
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz libgraphviz-dev pdf2svg dvisvgm texlive-full

      - name: Install blueprint deps
        run: |
          cd blueprint && pip install -r requirements.txt

      - name: Build blueprint
        run: |
          cd blueprint && inv all

      - name: Copy documentation
        run: |
          mkdir -p _site
          mv build/doc _site/doc
          mv blueprint/web _site/blueprint

      - name: Upload doc & blueprint artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: '_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
