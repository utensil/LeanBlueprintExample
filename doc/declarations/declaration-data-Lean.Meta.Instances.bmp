{"name":"Lean.Meta.Instances","instances":[{"typeNames":["Lean.Meta.InstanceEntry"],"name":"Lean.Meta.instInhabitedInstanceEntry","className":"Inhabited"},{"typeNames":["Lean.Meta.InstanceEntry"],"name":"Lean.Meta.instBEqInstanceEntry","className":"BEq"},{"typeNames":["Lean.Meta.InstanceEntry"],"name":"Lean.Meta.instToFormatInstanceEntry","className":"Std.ToFormat"},{"typeNames":["Lean.Meta.Instances"],"name":"Lean.Meta.instInhabitedInstances","className":"Inhabited"},{"typeNames":["Lean.Meta.DefaultInstances"],"name":"Lean.Meta.instInhabitedDefaultInstances","className":"Inhabited"}],"imports":["Init","Lean.ScopedEnvExtension","Lean.Meta.GlobalInstances","Lean.Meta.DiscrTree","Lean.Meta.CollectMVars"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L279-L280","name":"Lean.Meta.getDefaultInstances","line":279,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getDefaultInstances","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.getDefaultInstances\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getDefaultInstances</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(className : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L276-L277","name":"Lean.Meta.getDefaultInstancesPriorities","line":276,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getDefaultInstancesPriorities","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.getDefaultInstancesPriorities\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getDefaultInstancesPriorities</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.PrioritySet\">Lean.Meta.PrioritySet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L253-L263","name":"Lean.Meta.addDefaultInstance","line":253,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.addDefaultInstance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.addDefaultInstance\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">addDefaultInstance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L247-L251","name":"Lean.Meta.defaultInstanceExtension","line":247,"kind":"opaque","docLink":"./Lean/Meta/Instances.html#Lean.Meta.defaultInstanceExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.defaultInstanceExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">defaultInstanceExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry\">Lean.Meta.DefaultInstanceEntry</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances\">Lean.Meta.DefaultInstances</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L241-L245","name":"Lean.Meta.addDefaultInstanceEntry","line":241,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.addDefaultInstanceEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.addDefaultInstanceEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">addDefaultInstanceEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances\">Lean.Meta.DefaultInstances</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry\">Lean.Meta.DefaultInstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances\">Lean.Meta.DefaultInstances</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L239-L239","name":"Lean.Meta.instInhabitedDefaultInstances","line":239,"kind":"instance","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instInhabitedDefaultInstances","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.instInhabitedDefaultInstances\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedDefaultInstances</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances\">Lean.Meta.DefaultInstances</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L238-L238","name":"Lean.Meta.DefaultInstances.priorities","line":238,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances.priorities","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances.priorities\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DefaultInstances</span>.<span class=\"name\">priorities</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances\">Lean.Meta.DefaultInstances</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Instances.html#Lean.Meta.PrioritySet\">Lean.Meta.PrioritySet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L237-L237","name":"Lean.Meta.DefaultInstances.defaultInstances","line":237,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances.defaultInstances","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances.defaultInstances\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DefaultInstances</span>.<span class=\"name\">defaultInstances</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances\">Lean.Meta.DefaultInstances</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L236-L239","name":"Lean.Meta.DefaultInstances","line":236,"kind":"structure","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DefaultInstances</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L234-L234","name":"Lean.Meta.PrioritySet","line":234,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.PrioritySet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.PrioritySet\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">PrioritySet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L232-L232","name":"Lean.Meta.DefaultInstanceEntry.priority","line":232,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry.priority","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry.priority\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DefaultInstanceEntry</span>.<span class=\"name\">priority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry\">Lean.Meta.DefaultInstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L231-L231","name":"Lean.Meta.DefaultInstanceEntry.instanceName","line":231,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry.instanceName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry.instanceName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DefaultInstanceEntry</span>.<span class=\"name\">instanceName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry\">Lean.Meta.DefaultInstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L230-L230","name":"Lean.Meta.DefaultInstanceEntry.className","line":230,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry.className","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry.className\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DefaultInstanceEntry</span>.<span class=\"name\">className</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry\">Lean.Meta.DefaultInstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L229-L232","name":"Lean.Meta.DefaultInstanceEntry","line":229,"kind":"structure","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DefaultInstanceEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L223-L225","name":"Lean.Meta.getInstanceAttrKind?","line":223,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getInstanceAttrKind?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.getInstanceAttrKind?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getInstanceAttrKind?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L219-L221","name":"Lean.Meta.getInstancePriority?","line":219,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getInstancePriority?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.getInstancePriority?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getInstancePriority?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L216-L217","name":"Lean.Meta.isInstance","line":216,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.isInstance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.isInstance\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">isInstance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L213-L214","name":"Lean.Meta.getErasedInstances","line":213,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getErasedInstances","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.getErasedInstances\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getErasedInstances</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> (<span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L210-L211","name":"Lean.Meta.getGlobalInstancesIndex","line":210,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getGlobalInstancesIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.getGlobalInstancesIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getGlobalInstancesIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> (<span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L190-L195","name":"Lean.Meta.addInstance","line":190,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.addInstance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.addInstance\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">addInstance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrKind : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L139-L143","name":"Lean.Meta.computeSynthOrder.assignMVarsIn","line":139,"kind":"opaque","docLink":"./Lean/Meta/Instances.html#Lean.Meta.computeSynthOrder.assignMVarsIn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.computeSynthOrder.assignMVarsIn\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">computeSynthOrder</span>.<span class=\"name\">assignMVarsIn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(argMVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(argVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L119-L128","name":"Lean.Meta.computeSynthOrder.getSemiOutParamPositionsOf","line":119,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.computeSynthOrder.getSemiOutParamPositionsOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.computeSynthOrder.getSemiOutParamPositionsOf\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">computeSynthOrder</span>.<span class=\"name\">getSemiOutParamPositionsOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(classTy : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L113-L188","name":"Lean.Meta.computeSynthOrder","line":113,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.computeSynthOrder","doc":"Compute the order the arguments of `inst` should by synthesized.\n\nThe synthesization order makes sure that all mvars in non-out-params of the\nsubgoals are assigned before we try to synthesize it.  Otherwise it goes left\nto right.\n\nFor example:\n  - `[Add α] [Zero α] : Foo α` returns `[0, 1]`\n  - `[Mul A] [Mul B] [MulHomClass F A B] : FunLike F A B` returns `[2, 0, 1]`\n    (because A B are out-params and are only filled in once we synthesize 2)\n\n(The type of `inst` must not contain mvars.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.computeSynthOrder\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">computeSynthOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(inst : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L87-L91","name":"Lean.Meta.instanceExtension","line":87,"kind":"opaque","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instanceExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.instanceExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instanceExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension\">Lean.SimpleScopedEnvExtension</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L82-L85","name":"Lean.Meta.Instances.erase","line":82,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances.erase\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Instances</span>.<span class=\"name\">erase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L79-L80","name":"Lean.Meta.Instances.eraseCore","line":79,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances.eraseCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances.eraseCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Instances</span>.<span class=\"name\">eraseCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L74-L77","name":"Lean.Meta.addInstanceEntry","line":74,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.addInstanceEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.addInstanceEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">addInstanceEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L72-L72","name":"Lean.Meta.instInhabitedInstances","line":72,"kind":"instance","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instInhabitedInstances","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.instInhabitedInstances\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedInstances</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L71-L71","name":"Lean.Meta.Instances.erased","line":71,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances.erased","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances.erased\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Instances</span>.<span class=\"name\">erased</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L70-L70","name":"Lean.Meta.Instances.instanceNames","line":70,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances.instanceNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances.instanceNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Instances</span>.<span class=\"name\">instanceNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L69-L69","name":"Lean.Meta.Instances.discrTree","line":69,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances.discrTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances.discrTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Instances</span>.<span class=\"name\">discrTree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceTree\">Lean.Meta.InstanceTree</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L68-L72","name":"Lean.Meta.Instances","line":68,"kind":"structure","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Instances</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L66-L66","name":"Lean.Meta.InstanceTree","line":66,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceTree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L61-L64","name":"Lean.Meta.instToFormatInstanceEntry","line":61,"kind":"instance","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instToFormatInstanceEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.instToFormatInstanceEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instToFormatInstanceEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L58-L59","name":"Lean.Meta.instBEqInstanceEntry","line":58,"kind":"instance","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instBEqInstanceEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.instBEqInstanceEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instBEqInstanceEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L56-L56","name":"Lean.Meta.instInhabitedInstanceEntry","line":56,"kind":"instance","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instInhabitedInstanceEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.instInhabitedInstanceEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedInstanceEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L55-L55","name":"Lean.Meta.InstanceEntry.attrKind","line":55,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.attrKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.attrKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceEntry</span>.<span class=\"name\">attrKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L48-L48","name":"Lean.Meta.InstanceEntry.synthOrder","line":48,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.synthOrder","doc":"The order in which the instance's arguments are to be synthesized. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.synthOrder\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceEntry</span>.<span class=\"name\">synthOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L46-L46","name":"Lean.Meta.InstanceEntry.globalName?","line":46,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.globalName?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.globalName?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceEntry</span>.<span class=\"name\">globalName?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L45-L45","name":"Lean.Meta.InstanceEntry.priority","line":45,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.priority","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.priority\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceEntry</span>.<span class=\"name\">priority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L44-L44","name":"Lean.Meta.InstanceEntry.val","line":44,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceEntry</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L43-L43","name":"Lean.Meta.InstanceEntry.keys","line":43,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.keys","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.keys\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceEntry</span>.<span class=\"name\">keys</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceKey\">Lean.Meta.InstanceKey</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L42-L56","name":"Lean.Meta.InstanceEntry","line":42,"kind":"structure","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L40-L40","name":"Lean.Meta.InstanceKey","line":40,"kind":"def","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L13-L16","name":"Lean.Meta.synthInstance.checkSynthOrder","line":13,"kind":"opaque","docLink":"./Lean/Meta/Instances.html#Lean.Meta.synthInstance.checkSynthOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.synthInstance.checkSynthOrder\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">synthInstance</span>.<span class=\"name\">checkSynthOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L1-L1","name":"Lean.Meta.InstanceEntry.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InstanceEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(keys : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceKey\">Lean.Meta.InstanceKey</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(priority : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(globalName? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(synthOrder : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrKind : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L1-L1","name":"Lean.Meta.Instances.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Instances</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(discrTree : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceTree\">Lean.Meta.InstanceTree</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(instanceNames : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry\">Lean.Meta.InstanceEntry</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(erased : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Instances.html#Lean.Meta.Instances\">Lean.Meta.Instances</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L1-L1","name":"Lean.Meta.DefaultInstances.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DefaultInstances</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(defaultInstances : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(priorities : <a href=\"./Lean/Meta/Instances.html#Lean.Meta.PrioritySet\">Lean.Meta.PrioritySet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances\">Lean.Meta.DefaultInstances</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Instances.lean#L1-L1","name":"Lean.Meta.DefaultInstanceEntry.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DefaultInstanceEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(className : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(instanceName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(priority : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry\">Lean.Meta.DefaultInstanceEntry</a></div></div>"}]}