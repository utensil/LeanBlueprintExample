{"name":"Lean.Compiler.LCNF.AlphaEqv","instances":[],"imports":["Init","Lean.Compiler.LCNF.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L133-L134","name":"Lean.Compiler.LCNF.Code.alphaEqv","line":133,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.Code.alphaEqv","doc":"Return `true` if `c₁` and `c₂` are alpha equivalent.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.Code.alphaEqv\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Code</span>.<span class=\"name\">alphaEqv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c₁ : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₂ : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L106-L124","name":"Lean.Compiler.LCNF.AlphaEqv.eqv","line":106,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqv\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(code₁ : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(code₂ : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L91-L104","name":"Lean.Compiler.LCNF.AlphaEqv.eqvAlts","line":91,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvAlts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(alts₁ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Lean.Compiler.LCNF.Alt</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(alts₂ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Lean.Compiler.LCNF.Alt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L83-L87","name":"Lean.Compiler.LCNF.AlphaEqv.sortAlts","line":83,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.sortAlts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.sortAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">sortAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(alts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Lean.Compiler.LCNF.Alt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Lean.Compiler.LCNF.Alt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L68-L77","name":"Lean.Compiler.LCNF.AlphaEqv.withParams.go","line":68,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withParams.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withParams.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">withParams</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(params₁ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(params₂ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">params₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">params₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L66-L81","name":"Lean.Compiler.LCNF.AlphaEqv.withParams","line":66,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">withParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(params₁ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(params₂ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L63-L64","name":"Lean.Compiler.LCNF.AlphaEqv.withFVar","line":63,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withFVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.withFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">withFVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId₁ : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId₂ : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L54-L61","name":"Lean.Compiler.LCNF.AlphaEqv.eqvLetValue","line":54,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvLetValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e₁ : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">Lean.Compiler.LCNF.LetValue</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₂ : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">Lean.Compiler.LCNF.LetValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L45-L52","name":"Lean.Compiler.LCNF.AlphaEqv.eqvArgs","line":45,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(as₁ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Lean.Compiler.LCNF.Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(as₂ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Lean.Compiler.LCNF.Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L38-L43","name":"Lean.Compiler.LCNF.AlphaEqv.eqvArg","line":38,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a₁ : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Lean.Compiler.LCNF.Arg</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a₂ : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Lean.Compiler.LCNF.Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L29-L36","name":"Lean.Compiler.LCNF.AlphaEqv.eqvTypes","line":29,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvTypes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvTypes\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvTypes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(es₁ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(es₂ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L22-L27","name":"Lean.Compiler.LCNF.AlphaEqv.eqvType","line":22,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvType\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e₁ : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₂ : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L18-L20","name":"Lean.Compiler.LCNF.AlphaEqv.eqvFVar","line":18,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvFVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.eqvFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">eqvFVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId₁ : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId₂ : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\">Lean.Compiler.LCNF.AlphaEqv.EqvM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/AlphaEqv.lean#L16-L16","name":"Lean.Compiler.LCNF.AlphaEqv.EqvM","line":16,"kind":"def","docLink":"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/AlphaEqv.html#Lean.Compiler.LCNF.AlphaEqv.EqvM\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">AlphaEqv</span>.<span class=\"name\">EqvM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}