{"name":"Lean.Structure","instances":[{"typeNames":["Lean.StructureFieldInfo"],"name":"Lean.instInhabitedStructureFieldInfo","className":"Inhabited"},{"typeNames":["Lean.StructureFieldInfo"],"name":"Lean.instReprStructureFieldInfo","className":"Repr"},{"typeNames":["Lean.StructureInfo"],"name":"Lean.instInhabitedStructureInfo","className":"Inhabited"},{"typeNames":["_private.Lean.Structure.0.Lean.StructureState"],"name":"Lean.instInhabitedStructureState","className":"Inhabited"},{"typeNames":["Lean.StructureDescr"],"name":"Lean.instInhabitedStructureDescr","className":"Inhabited"}],"imports":["Init","Lean.Environment","Lean.ProjFns"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L201-L207","name":"Lean.getStructureLikeNumFields","line":201,"kind":"def","docLink":"./Lean/Structure.html#Lean.getStructureLikeNumFields","doc":"Return number of fields for a structure-like type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getStructureLikeNumFields\"><span class=\"name\">Lean</span>.<span class=\"name\">getStructureLikeNumFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L195-L198","name":"Lean.isStructureLike","line":195,"kind":"def","docLink":"./Lean/Structure.html#Lean.isStructureLike","doc":"Return true iff `constName` is the a non-recursive inductive datatype that has only one constructor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.isStructureLike\"><span class=\"name\">Lean</span>.<span class=\"name\">isStructureLike</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L191-L192","name":"Lean.getPathToBaseStructure?","line":191,"kind":"def","docLink":"./Lean/Structure.html#Lean.getPathToBaseStructure?","doc":"If `baseStructName` is an ancestor structure for `structName`, then return a sequence of projection functions\nto go from `structName` to `baseStructName`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getPathToBaseStructure?\"><span class=\"name\">Lean</span>.<span class=\"name\">getPathToBaseStructure?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(baseStructName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L174-L185","name":"Lean.getPathToBaseStructureAux","line":174,"kind":"opaque","docLink":"./Lean/Structure.html#Lean.getPathToBaseStructureAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getPathToBaseStructureAux\"><span class=\"name\">Lean</span>.<span class=\"name\">getPathToBaseStructureAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(baseStructName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(path : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L165-L172","name":"Lean.getDefaultFnForField?","line":165,"kind":"def","docLink":"./Lean/Structure.html#Lean.getDefaultFnForField?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getDefaultFnForField?\"><span class=\"name\">Lean</span>.<span class=\"name\">getDefaultFnForField?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L162-L163","name":"Lean.mkDefaultFnOfProjFn","line":162,"kind":"def","docLink":"./Lean/Structure.html#Lean.mkDefaultFnOfProjFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.mkDefaultFnOfProjFn\"><span class=\"name\">Lean</span>.<span class=\"name\">mkDefaultFnOfProjFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(projFn : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L156-L160","name":"Lean.getProjFnInfoForField?","line":156,"kind":"def","docLink":"./Lean/Structure.html#Lean.getProjFnInfoForField?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getProjFnInfoForField?\"><span class=\"name\">Lean</span>.<span class=\"name\">getProjFnInfoForField?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/ProjFns.html#Lean.ProjectionFunctionInfo\">Lean.ProjectionFunctionInfo</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L150-L154","name":"Lean.getProjFnForField?","line":150,"kind":"def","docLink":"./Lean/Structure.html#Lean.getProjFnForField?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getProjFnForField?\"><span class=\"name\">Lean</span>.<span class=\"name\">getProjFnForField?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L147-L148","name":"Lean.isStructure","line":147,"kind":"def","docLink":"./Lean/Structure.html#Lean.isStructure","doc":"Return true if `constName` is the name of an inductive datatype\ncreated using the `structure` or `class` commands.\n\nWe perform the check by testing whether auxiliary projection functions\nhave been created. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.isStructure\"><span class=\"name\">Lean</span>.<span class=\"name\">isStructure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L138-L139","name":"Lean.getStructureFieldsFlattened","line":138,"kind":"def","docLink":"./Lean/Structure.html#Lean.getStructureFieldsFlattened","doc":"Return field names for the given structure, including \"flattened\" fields from parent\nstructures. To omit `toParent` projections, set `includeSubobjectFields := false`.\n\nFor example, given `Bar` such that\n```lean\nstructure Foo where a : Nat\nstructure Bar extends Foo where b : Nat\n```\nreturn `#[toFoo,a,b]` or `#[a,b]` with subobject fields omitted. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getStructureFieldsFlattened\"><span class=\"name\">Lean</span>.<span class=\"name\">getStructureFieldsFlattened</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeSubobjectFields : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L115-L119","name":"Lean.findField?","line":115,"kind":"opaque","docLink":"./Lean/Structure.html#Lean.findField?","doc":"`findField? env S fname`. If `fname` is defined in a parent `S'` of `S`, return `S'` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.findField?\"><span class=\"name\">Lean</span>.<span class=\"name\">findField?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L109-L112","name":"Lean.getAllParentStructures.visit","line":109,"kind":"opaque","docLink":"./Lean/Structure.html#Lean.getAllParentStructures.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getAllParentStructures.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">getAllParentStructures</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>) <a href=\"./Init/Control/Id.html#Id\">Id</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L106-L112","name":"Lean.getAllParentStructures","line":106,"kind":"def","docLink":"./Lean/Structure.html#Lean.getAllParentStructures","doc":"Return all parent structures "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getAllParentStructures\"><span class=\"name\">Lean</span>.<span class=\"name\">getAllParentStructures</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L98-L103","name":"Lean.getParentStructures","line":98,"kind":"def","docLink":"./Lean/Structure.html#Lean.getParentStructures","doc":"Return immediate parent structures "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getParentStructures\"><span class=\"name\">Lean</span>.<span class=\"name\">getParentStructures</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L91-L95","name":"Lean.isSubobjectField?","line":91,"kind":"def","docLink":"./Lean/Structure.html#Lean.isSubobjectField?","doc":"If `fieldName` represents the relation to a parent structure `S`, return `S` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.isSubobjectField?\"><span class=\"name\">Lean</span>.<span class=\"name\">isSubobjectField?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L84-L88","name":"Lean.getFieldInfo?","line":84,"kind":"def","docLink":"./Lean/Structure.html#Lean.getFieldInfo?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getFieldInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">getFieldInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L78-L82","name":"Lean.getStructureFields","line":78,"kind":"def","docLink":"./Lean/Structure.html#Lean.getStructureFields","doc":"Get direct field names for the given structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getStructureFields\"><span class=\"name\">Lean</span>.<span class=\"name\">getStructureFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L69-L75","name":"Lean.getStructureCtor","line":69,"kind":"def","docLink":"./Lean/Structure.html#Lean.getStructureCtor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getStructureCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">getStructureCtor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">Lean.ConstructorVal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L64-L67","name":"Lean.getStructureInfo?","line":64,"kind":"def","docLink":"./Lean/Structure.html#Lean.getStructureInfo?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.getStructureInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">getStructureInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L57-L62","name":"Lean.registerStructure","line":57,"kind":"def","docLink":"./Lean/Structure.html#Lean.registerStructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.registerStructure\"><span class=\"name\">Lean</span>.<span class=\"name\">registerStructure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Structure.html#Lean.StructureDescr\">Lean.StructureDescr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L55-L55","name":"Lean.instInhabitedStructureDescr","line":55,"kind":"instance","docLink":"./Lean/Structure.html#Lean.instInhabitedStructureDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.instInhabitedStructureDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedStructureDescr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Structure.html#Lean.StructureDescr\">Lean.StructureDescr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L54-L54","name":"Lean.StructureDescr.fields","line":54,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureDescr.fields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureDescr.fields\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureDescr</span>.<span class=\"name\">fields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureDescr\">Lean.StructureDescr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L53-L53","name":"Lean.StructureDescr.structName","line":53,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureDescr.structName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureDescr.structName\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureDescr</span>.<span class=\"name\">structName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureDescr\">Lean.StructureDescr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L52-L55","name":"Lean.StructureDescr","line":52,"kind":"structure","docLink":"./Lean/Structure.html#Lean.StructureDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureDescr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L46-L50","name":"Lean.structureExt","line":46,"kind":"opaque","docLink":"./Lean/Structure.html#Lean.structureExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.structureExt\"><span class=\"name\">Lean</span>.<span class=\"name\">structureExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a> <a href=\"./Lean/Structure.html#_private.Lean.Structure.0.Lean.StructureState\">Lean.StructureState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L44-L44","name":"Lean.instInhabitedStructureState","line":44,"kind":"instance","docLink":"./Lean/Structure.html#Lean.instInhabitedStructureState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.instInhabitedStructureState\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedStructureState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Structure.html#_private.Lean.Structure.0.Lean.StructureState\">Lean.StructureState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L34-L39","name":"Lean.StructureInfo.getProjFn?","line":34,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureInfo.getProjFn?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureInfo.getProjFn?\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureInfo</span>.<span class=\"name\">getProjFn?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(info : <a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L31-L32","name":"Lean.StructureInfo.lt","line":31,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureInfo.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureInfo.lt\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureInfo</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L29-L29","name":"Lean.instInhabitedStructureInfo","line":29,"kind":"instance","docLink":"./Lean/Structure.html#Lean.instInhabitedStructureInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.instInhabitedStructureInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedStructureInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L28-L28","name":"Lean.StructureInfo.fieldInfo","line":28,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureInfo.fieldInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureInfo.fieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureInfo</span>.<span class=\"name\">fieldInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L27-L27","name":"Lean.StructureInfo.fieldNames","line":27,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureInfo.fieldNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureInfo.fieldNames\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureInfo</span>.<span class=\"name\">fieldNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L26-L26","name":"Lean.StructureInfo.structName","line":26,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureInfo.structName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureInfo.structName\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureInfo</span>.<span class=\"name\">structName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L25-L29","name":"Lean.StructureInfo","line":25,"kind":"structure","docLink":"./Lean/Structure.html#Lean.StructureInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L22-L23","name":"Lean.StructureFieldInfo.lt","line":22,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureFieldInfo.lt\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureFieldInfo</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L20-L20","name":"Lean.instReprStructureFieldInfo","line":20,"kind":"instance","docLink":"./Lean/Structure.html#Lean.instReprStructureFieldInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.instReprStructureFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprStructureFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L20-L20","name":"Lean.instInhabitedStructureFieldInfo","line":20,"kind":"instance","docLink":"./Lean/Structure.html#Lean.instInhabitedStructureFieldInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.instInhabitedStructureFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedStructureFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L19-L19","name":"Lean.StructureFieldInfo.autoParam?","line":19,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo.autoParam?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureFieldInfo.autoParam?\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureFieldInfo</span>.<span class=\"name\">autoParam?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L18-L18","name":"Lean.StructureFieldInfo.binderInfo","line":18,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo.binderInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureFieldInfo.binderInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureFieldInfo</span>.<span class=\"name\">binderInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L17-L17","name":"Lean.StructureFieldInfo.subobject?","line":17,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo.subobject?","doc":"It is `some parentStructName` if it is a subobject, and `parentStructName` is the name of the parent structure "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureFieldInfo.subobject?\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureFieldInfo</span>.<span class=\"name\">subobject?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L15-L15","name":"Lean.StructureFieldInfo.projFn","line":15,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo.projFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureFieldInfo.projFn\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureFieldInfo</span>.<span class=\"name\">projFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L14-L14","name":"Lean.StructureFieldInfo.fieldName","line":14,"kind":"def","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo.fieldName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureFieldInfo.fieldName\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureFieldInfo</span>.<span class=\"name\">fieldName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L13-L20","name":"Lean.StructureFieldInfo","line":13,"kind":"structure","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureFieldInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureFieldInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L1-L1","name":"Lean.StructureFieldInfo.mk","line":1,"kind":"ctor","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureFieldInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureFieldInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(projFn : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subobject? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(binderInfo : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(autoParam? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L1-L1","name":"Lean.StructureDescr.mk","line":1,"kind":"ctor","docLink":"./Lean/Structure.html#Lean.StructureDescr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureDescr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureDescr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fields : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Structure.html#Lean.StructureDescr\">Lean.StructureDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Structure.lean#L1-L1","name":"Lean.StructureInfo.mk","line":1,"kind":"ctor","docLink":"./Lean/Structure.html#Lean.StructureInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Structure.html#Lean.StructureInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">StructureInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldInfo : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Structure.html#Lean.StructureFieldInfo\">Lean.StructureFieldInfo</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Structure.html#Lean.StructureInfo\">Lean.StructureInfo</a></div></div>"}]}