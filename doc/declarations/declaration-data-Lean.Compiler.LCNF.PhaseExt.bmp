{"name":"Lean.Compiler.LCNF.PhaseExt","instances":[],"imports":["Init","Lean.Compiler.LCNF.PassManager"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L98-L99","name":"Lean.Compiler.LCNF.forEachMainModuleDecl","line":98,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.forEachMainModuleDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.forEachMainModuleDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">forEachMainModuleDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a> → <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(phase : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Lean.Compiler.LCNF.Phase</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase.base\">Lean.Compiler.LCNF.Phase.base</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L91-L96","name":"Lean.Compiler.LCNF.forEachModuleDecl","line":91,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.forEachModuleDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.forEachModuleDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">forEachModuleDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(moduleName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a> → <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(phase : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Lean.Compiler.LCNF.Phase</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase.base\">Lean.Compiler.LCNF.Phase.base</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L83-L89","name":"Lean.Compiler.LCNF.forEachDecl","line":83,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.forEachDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.forEachDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">forEachDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a> → <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(phase : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Lean.Compiler.LCNF.Phase</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase.base\">Lean.Compiler.LCNF.Phase.base</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L77-L81","name":"Lean.Compiler.LCNF.getExt","line":77,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">getExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(phase : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Lean.Compiler.LCNF.Phase</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.DeclExt\">Lean.Compiler.LCNF.DeclExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L74-L75","name":"Lean.Compiler.LCNF.getDecl?","line":74,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getDecl?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getDecl?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">getDecl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">Lean.Compiler.LCNF.CompilerM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L68-L72","name":"Lean.Compiler.LCNF.getDeclAt?","line":68,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getDeclAt?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getDeclAt?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">getDeclAt?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(phase : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Lean.Compiler.LCNF.Phase</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L62-L66","name":"Lean.Compiler.LCNF.Decl.save","line":62,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.Decl.save","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.Decl.save\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">save</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">Lean.Compiler.LCNF.CompilerM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L59-L60","name":"Lean.Compiler.LCNF.Decl.saveMono","line":59,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.Decl.saveMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.Decl.saveMono\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">saveMono</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L56-L57","name":"Lean.Compiler.LCNF.Decl.saveBase","line":56,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.Decl.saveBase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.Decl.saveBase\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">saveBase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L53-L54","name":"Lean.Compiler.LCNF.saveMonoDeclCore","line":53,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.saveMonoDeclCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.saveMonoDeclCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">saveMonoDeclCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L50-L51","name":"Lean.Compiler.LCNF.saveBaseDeclCore","line":50,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.saveBaseDeclCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.saveBaseDeclCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">saveBaseDeclCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L47-L48","name":"Lean.Compiler.LCNF.getMonoDecl?","line":47,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getMonoDecl?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getMonoDecl?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">getMonoDecl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L44-L45","name":"Lean.Compiler.LCNF.getBaseDecl?","line":44,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getBaseDecl?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getBaseDecl?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">getBaseDecl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L39-L42","name":"Lean.Compiler.LCNF.getDeclCore?","line":39,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getDeclCore?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.getDeclCore?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">getDeclCore?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.DeclExt\">Lean.Compiler.LCNF.DeclExt</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L37-L37","name":"Lean.Compiler.LCNF.monoExt","line":37,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.monoExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.monoExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">monoExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a> <a href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.DeclExtState\">Lean.Compiler.LCNF.DeclExtState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L36-L36","name":"Lean.Compiler.LCNF.baseExt","line":36,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.baseExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.baseExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">baseExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a> <a href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.DeclExtState\">Lean.Compiler.LCNF.DeclExtState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L25-L34","name":"Lean.Compiler.LCNF.mkDeclExt","line":25,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.mkDeclExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.mkDeclExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">mkDeclExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Compiler/LCNF/PhaseExt.html#_auto._@.Lean.Compiler.LCNF.PhaseExt._hyg.96\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.DeclExt\">Lean.Compiler.LCNF.DeclExt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L23-L23","name":"Lean.Compiler.LCNF.DeclExt","line":23,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.DeclExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.DeclExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">DeclExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/PhaseExt.lean#L10-L10","name":"Lean.Compiler.LCNF.DeclExtState","line":10,"kind":"def","docLink":"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.DeclExtState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/PhaseExt.html#Lean.Compiler.LCNF.DeclExtState\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">DeclExtState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}