{"name":"Lean.Server.Rpc.Deriving","instances":[{"typeNames":["Lean.TSyntax","List.cons","Lean.SyntaxNodeKind","Lean.Name.str","Lean.Name.num","Lean.Name.anonymous","OfNat.ofNat","Nat","instOfNatNat","List.nil","Lean.TSyntax","List.cons","Lean.SyntaxNodeKind","Lean.Name.mkStr4","List.nil"],"name":"Lean.Server.RpcEncodable.instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatInstOfNatNatNilMkStr4","className":"Coe"}],"imports":["Init","Lean.Elab.Command","Lean.Elab.Term","Lean.Elab.Deriving.Basic","Lean.Elab.Deriving.Util","Lean.Server.Rpc.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Deriving.lean#L61-L61","name":"Lean.Server.RpcEncodable.instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatInstOfNatNatNilMkStr4","line":61,"kind":"instance","docLink":"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncodable.instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatInstOfNatNatNilMkStr4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncodable.instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatInstOfNatNatNilMkStr4\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatInstOfNatNatNilMkStr4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a>\n  (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a>\n    (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name.str\">Lean.Name.str</a>\n      (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name.str\">Lean.Name.str</a>\n        (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name.str\">Lean.Name.str</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name.str\">Lean.Name.str</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name.num\">Lean.Name.num</a> <span class=\"fn\">`_private.Lean.Server.Rpc.Deriving</span> <span class=\"fn\">0</span></span>) <span class=\"fn\">&quotLean&quot</span></span>) <span class=\"fn\">&quotServer&quot</span></span>)\n        <span class=\"fn\">&quotRpcEncodable&quot</span></span>)\n      <span class=\"fn\">&quotmatchAltTerm&quot</span></span>)</span>)\n  (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Term.matchAlt</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Deriving.lean#L18-L18","name":"Lean.Server.RpcEncodable.isOptField","line":18,"kind":"def","docLink":"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncodable.isOptField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncodable.isOptField\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">isOptField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}