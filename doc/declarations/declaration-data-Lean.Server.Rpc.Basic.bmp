{"name":"Lean.Server.Rpc.Basic","instances":[{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instBEqRpcRef","className":"BEq"},{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instHashableRpcRef","className":"Hashable"},{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instFromJsonRpcRef","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instToJsonRpcRef","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.RpcRef"],"name":"Lean.Lsp.instToStringRpcRef","className":"ToString"},{"typeNames":["Lean.Server.RpcEncodable"],"name":"Lean.Server.instNonemptyRpcEncodable","className":"Nonempty"},{"typeNames":[],"name":"Lean.Server.instRpcEncodable","className":"Lean.Server.RpcEncodable"},{"typeNames":["Option"],"name":"Lean.Server.instRpcEncodableOption","className":"Lean.Server.RpcEncodable"},{"typeNames":["Array"],"name":"Lean.Server.instRpcEncodableArray","className":"Lean.Server.RpcEncodable"},{"typeNames":["Prod"],"name":"Lean.Server.instRpcEncodableProd","className":"Lean.Server.RpcEncodable"},{"typeNames":["Lean.Server.WithRpcRef"],"name":"Lean.Server.instInhabitedWithRpcRef","className":"Inhabited"},{"typeNames":["Lean.Server.WithRpcRef"],"name":"Lean.Server.instRpcEncodableWithRpcRef","className":"Lean.Server.RpcEncodable"}],"imports":["Init","Lean.Data.Json"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L116-L124","name":"Lean.Server.instRpcEncodableWithRpcRef.rpcDecode","line":116,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRef.rpcDecode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRef.rpcDecode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableWithRpcRef</span>.<span class=\"name\">rpcDecode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a></span>) (<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">Lean.Server.WithRpcRef</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L115-L115","name":"Lean.Server.instRpcEncodableWithRpcRef.rpcEncode","line":115,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRef.rpcEncode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRef.rpcEncode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableWithRpcRef</span>.<span class=\"name\">rpcEncode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">Lean.Server.WithRpcRef</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L111-L124","name":"Lean.Server.instRpcEncodableWithRpcRef","line":111,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableWithRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableWithRpcRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> (<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">Lean.Server.WithRpcRef</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L109-L109","name":"Lean.Server.instInhabitedWithRpcRef","line":109,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instInhabitedWithRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instInhabitedWithRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instInhabitedWithRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./foundational_types.html\">Type</a> u_1} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a</span></span>] → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">Lean.Server.WithRpcRef</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L108-L108","name":"Lean.Server.WithRpcRef.val","line":108,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WithRpcRef</span>.<span class=\"name\">val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">Lean.Server.WithRpcRef</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L107-L107","name":"Lean.Server.WithRpcRef.mk","line":107,"kind":"ctor","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WithRpcRef</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(val : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\">Lean.Server.WithRpcRef</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L107-L109","name":"Lean.Server.WithRpcRef","line":107,"kind":"structure","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef","doc":"Marks fields to encode as opaque references in LSP packets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">WithRpcRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L100-L104","name":"Lean.Server.instRpcEncodableProd","line":100,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableProd\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> (<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L96-L98","name":"Lean.Server.instRpcEncodableArray","line":96,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableArray\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L90-L92","name":"Lean.Server.instRpcEncodableOption","line":90,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodableOption\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodableOption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L86-L88","name":"Lean.Server.instRpcEncodable","line":86,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodable\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instRpcEncodable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L83-L84","name":"Lean.Server.instNonemptyRpcEncodable","line":83,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instNonemptyRpcEncodable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.instNonemptyRpcEncodable\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instNonemptyRpcEncodable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> (<span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L80-L80","name":"Lean.Server.RpcEncodable.rpcDecode","line":80,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcDecode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcDecode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">rpcDecode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a> → <span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a></span>) <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L79-L79","name":"Lean.Server.RpcEncodable.rpcEncode","line":79,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcEncode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.rpcEncode\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">rpcEncode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L78-L78","name":"Lean.Server.RpcEncodable.mk","line":78,"kind":"ctor","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(rpcEncode : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rpcDecode : <span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a> → <span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a></span>) <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L78-L80","name":"Lean.Server.RpcEncodable","line":78,"kind":"class","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable","doc":"`RpcEncodable α` means that `α` can be serialized in the RPC system of the Lean server.\nThis is required when `α` contains fields which should be serialized as an RPC reference\ninstead of being sent in full.\nThe type wrapper `WithRpcRef` is used for these fields which should be sent as\na reference.\n\n- Any type with `FromJson` and `ToJson` instance is automatically `RpcEncodable`.\n- If a type has an `Dynamic` instance, then `WithRpcRef` can be used for its references.\n- `deriving RpcEncodable` acts like `FromJson`/`ToJson` but marshalls any `WithRpcRef` fields\n  as `Lsp.RpcRef`s.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L57-L63","name":"Lean.Server.rpcReleaseRef","line":57,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcReleaseRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcReleaseRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">rpcReleaseRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L54-L55","name":"Lean.Server.rpcGetRef","line":54,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcGetRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcGetRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">rpcGetRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L46-L52","name":"Lean.Server.rpcStoreRef","line":46,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcStoreRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.rpcStoreRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">rpcStoreRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(any : <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L44-L44","name":"Lean.Server.RpcObjectStore.nextRef","line":44,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.nextRef","doc":"Value to use for the next `RpcRef`. It is monotonically increasing to avoid any possible\nbugs resulting from its reuse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.nextRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">nextRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L41-L41","name":"Lean.Server.RpcObjectStore.aliveRefs","line":41,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.aliveRefs","doc":"Objects that are being kept alive for the RPC client, together with their type names,\nmapped to by their RPC reference.\n\nNote that we may currently have multiple references to the same object. It is only disposed\nof once all of those are gone. This simplifies the client a bit as it can drop every reference\nreceived separately. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.aliveRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">aliveRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">Lean.PersistentHashMap</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L34-L44","name":"Lean.Server.RpcObjectStore","line":34,"kind":"structure","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L27-L28","name":"Lean.Lsp.instToStringRpcRef","line":27,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToStringRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToStringRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToStringRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L25-L25","name":"Lean.Lsp.instToJsonRpcRef","line":25,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToJsonRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instToJsonRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L25-L25","name":"Lean.Lsp.instFromJsonRpcRef","line":25,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instFromJsonRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instFromJsonRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L25-L25","name":"Lean.Lsp.instHashableRpcRef","line":25,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instHashableRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instHashableRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instHashableRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L25-L25","name":"Lean.Lsp.instBEqRpcRef","line":25,"kind":"instance","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instBEqRpcRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.instBEqRpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instBEqRpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L24-L24","name":"Lean.Lsp.RpcRef.p","line":24,"kind":"def","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.p\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RpcRef</span>.<span class=\"name\">p</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L21-L25","name":"Lean.Lsp.RpcRef","line":21,"kind":"structure","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef","doc":"An object which RPC clients can refer to without marshalling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RpcRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L1-L1","name":"Lean.Lsp.RpcRef.mk","line":1,"kind":"ctor","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RpcRef</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Server/Rpc/Basic.lean#L1-L1","name":"Lean.Server.RpcObjectStore.mk","line":1,"kind":"ctor","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcObjectStore</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(aliveRefs : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">Lean.PersistentHashMap</a> <a href=\"./Lean/Server/Rpc/Basic.html#Lean.Lsp.RpcRef\">Lean.Lsp.RpcRef</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nextRef : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcObjectStore\">Lean.Server.RpcObjectStore</a></div></div>"}]}