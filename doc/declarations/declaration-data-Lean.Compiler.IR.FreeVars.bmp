{"name":"Lean.Compiler.IR.FreeVars","instances":[{"typeNames":["Lean.IR.MaxIndex.Collector"],"name":"Lean.IR.MaxIndex.instAndThenCollector","className":"AndThen"},{"typeNames":["Lean.IR.FreeIndices.Collector"],"name":"Lean.IR.FreeIndices.instAndThenCollector","className":"AndThen"}],"imports":["Init","Lean.Compiler.IR.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L230-L230","name":"Lean.IR.FnBody.hasFreeVar","line":230,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.hasFreeVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.hasFreeVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">hasFreeVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">Lean.IR.VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L229-L229","name":"Lean.IR.Expr.hasFreeVar","line":229,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Expr.hasFreeVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Expr.hasFreeVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Expr</span>.<span class=\"name\">hasFreeVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Lean.IR.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">Lean.IR.VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L228-L228","name":"Lean.IR.Arg.hasFreeVar","line":228,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Arg.hasFreeVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Arg.hasFreeVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Arg</span>.<span class=\"name\">hasFreeVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(arg : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Lean.IR.Arg</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">Lean.IR.VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L210-L224","name":"Lean.IR.HasIndex.visitFnBody","line":210,"kind":"opaque","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Lean.IR.Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L195-L208","name":"Lean.IR.HasIndex.visitExpr","line":195,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Lean.IR.Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Lean.IR.Expr</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L192-L193","name":"Lean.IR.HasIndex.visitParams","line":192,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Lean.IR.Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Lean.IR.Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L189-L190","name":"Lean.IR.HasIndex.visitArgs","line":189,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Lean.IR.Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Lean.IR.Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L185-L187","name":"Lean.IR.HasIndex.visitArg","line":185,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Lean.IR.Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Lean.IR.Arg</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L183-L183","name":"Lean.IR.HasIndex.visitJP","line":183,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitJP","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitJP\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitJP</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Lean.IR.Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">Lean.IR.JoinPointId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L182-L182","name":"Lean.IR.HasIndex.visitVar","line":182,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">HasIndex</span>.<span class=\"name\">visitVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Lean.IR.Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">Lean.IR.VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L174-L175","name":"Lean.IR.FnBody.freeIndices","line":174,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.freeIndices","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.freeIndices\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">freeIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">Lean.IR.IndexSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L171-L172","name":"Lean.IR.FnBody.collectFreeIndices","line":171,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.collectFreeIndices","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.collectFreeIndices\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">collectFreeIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vs : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">Lean.IR.IndexSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">Lean.IR.IndexSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L153-L167","name":"Lean.IR.FreeIndices.collectFnBody","line":153,"kind":"opaque","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.collectFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.collectFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">collectFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a> → <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.Collector\">Lean.IR.FreeIndices.Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L122-L123","name":"Lean.IR.FreeIndices.instAndThenCollector","line":122,"kind":"instance","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.instAndThenCollector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.instAndThenCollector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">instAndThenCollector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndThen\">AndThen</a> <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.Collector\">Lean.IR.FreeIndices.Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L113-L114","name":"Lean.IR.FreeIndices.insertParams","line":113,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.insertParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.insertParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">insertParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">Lean.IR.IndexSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Lean.IR.Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet\">Lean.IR.IndexSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L90-L90","name":"Lean.IR.FreeIndices.Collector","line":90,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.Collector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.Collector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FreeIndices</span>.<span class=\"name\">Collector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L83-L84","name":"Lean.IR.Decl.maxIndex","line":83,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Decl.maxIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Decl.maxIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">maxIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Lean.IR.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Lean.IR.Index</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L80-L81","name":"Lean.IR.FnBody.maxIndex","line":80,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.maxIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.maxIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">maxIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Lean.IR.Index</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L74-L76","name":"Lean.IR.MaxIndex.collectDecl","line":74,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">collectDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Lean.IR.Decl</a> → <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector\">Lean.IR.MaxIndex.Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L58-L72","name":"Lean.IR.MaxIndex.collectFnBody","line":58,"kind":"opaque","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">collectFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a> → <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector\">Lean.IR.MaxIndex.Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L26-L27","name":"Lean.IR.MaxIndex.instAndThenCollector","line":26,"kind":"instance","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.instAndThenCollector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.instAndThenCollector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">instAndThenCollector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndThen\">AndThen</a> <a href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector\">Lean.IR.MaxIndex.Collector</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/FreeVars.lean#L19-L19","name":"Lean.IR.MaxIndex.Collector","line":19,"kind":"def","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">MaxIndex</span>.<span class=\"name\">Collector</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}