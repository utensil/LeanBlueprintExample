{"name":"Lean.Elab.Extra","instances":[],"imports":["Init","Lean.Elab.App","Lean.Elab.BuiltinNotation"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L487-L502","name":"Lean.Elab.Term.Op.elabDefaultOrNonempty","line":487,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabDefaultOrNonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabDefaultOrNonempty\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">Op</span>.<span class=\"name\">elabDefaultOrNonempty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L484-L484","name":"Lean.Elab.Term.Op.elabBinRelNoProp","line":484,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRelNoProp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRelNoProp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">Op</span>.<span class=\"name\">elabBinRelNoProp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L482-L482","name":"Lean.Elab.Term.Op.elabBinRel","line":482,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">Op</span>.<span class=\"name\">elabBinRel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L475-L480","name":"Lean.Elab.Term.Op.elabBinRelCore.toBoolIfNecessary","line":475,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRelCore.toBoolIfNecessary","doc":"If `noProp == true` and `e` has type `Prop`, then coerce it to `Bool`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRelCore.toBoolIfNecessary\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">Op</span>.<span class=\"name\">elabBinRelCore</span>.<span class=\"name\">toBoolIfNecessary</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(noProp : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L416-L480","name":"Lean.Elab.Term.Op.elabBinRelCore","line":416,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRelCore","doc":"Elaboration functionf for `binrel%` and `binrel_no_prop%` notations.\nWe use the infrastructure for `binop%` to make sure we propagate information between the left and right hand sides\nof a binary relation.\n\nRecall that the `binrel_no_prop%` notation is used for relations such as `==` which do not support `Prop`, but\nwe still want to be able to write `(5 > 2) == (2 > 1)`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRelCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">Op</span>.<span class=\"name\">elabBinRelCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(noProp : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expectedType? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L406-L406","name":"Lean.Elab.Term.Op.elabUnOp","line":406,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabUnOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabUnOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">Op</span>.<span class=\"name\">elabUnOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L403-L403","name":"Lean.Elab.Term.Op.elabBinOpLazy","line":403,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinOpLazy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinOpLazy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">Op</span>.<span class=\"name\">elabBinOpLazy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L400-L400","name":"Lean.Elab.Term.Op.elabBinOp","line":400,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">Op</span>.<span class=\"name\">elabBinOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L396-L397","name":"Lean.Elab.Term.Op.elabOp","line":396,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">Op</span>.<span class=\"name\">elabOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L51-L77","name":"Lean.Elab.Term.elabForIn'","line":51,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.elabForIn'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.elabForIn'\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabForIn'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Extra.lean#L25-L49","name":"Lean.Elab.Term.elabForIn","line":25,"kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.elabForIn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Extra.html#Lean.Elab.Term.elabForIn\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabForIn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"}]}