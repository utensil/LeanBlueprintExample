{"name":"Lean.Compiler.LCNF.Level","instances":[],"imports":["Init","Lean.Util.CollectLevelParams","Lean.Compiler.LCNF.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L150-L152","name":"Lean.Compiler.LCNF.Decl.setLevelParams","line":150,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.Decl.setLevelParams","doc":"Collect universe level parameters collecting in the type, parameters, and value, and then\nset `decl.levelParams` with the resulting value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.Decl.setLevelParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">setLevelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L132-L138","name":"Lean.Compiler.LCNF.CollectLevelParams.visitCode","line":132,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitCode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitCode\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CollectLevelParams</span>.<span class=\"name\">visitCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a> â†’ <a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor\">Lean.CollectLevelParams.Visitor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L129-L130","name":"Lean.Compiler.LCNF.CollectLevelParams.visitAlts","line":129,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitAlts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CollectLevelParams</span>.<span class=\"name\">visitAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(alts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Lean.Compiler.LCNF.Alt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor\">Lean.CollectLevelParams.Visitor</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L124-L127","name":"Lean.Compiler.LCNF.CollectLevelParams.visitAlt","line":124,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitAlt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitAlt\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CollectLevelParams</span>.<span class=\"name\">visitAlt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(alt : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Lean.Compiler.LCNF.Alt</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor\">Lean.CollectLevelParams.Visitor</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L120-L121","name":"Lean.Compiler.LCNF.CollectLevelParams.visitParams","line":120,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CollectLevelParams</span>.<span class=\"name\">visitParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor\">Lean.CollectLevelParams.Visitor</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L117-L118","name":"Lean.Compiler.LCNF.CollectLevelParams.visitParam","line":117,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CollectLevelParams</span>.<span class=\"name\">visitParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor\">Lean.CollectLevelParams.Visitor</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L111-L115","name":"Lean.Compiler.LCNF.CollectLevelParams.visitLetValue","line":111,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitLetValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CollectLevelParams</span>.<span class=\"name\">visitLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">Lean.Compiler.LCNF.LetValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor\">Lean.CollectLevelParams.Visitor</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L108-L109","name":"Lean.Compiler.LCNF.CollectLevelParams.visitArgs","line":108,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CollectLevelParams</span>.<span class=\"name\">visitArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Lean.Compiler.LCNF.Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor\">Lean.CollectLevelParams.Visitor</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L103-L106","name":"Lean.Compiler.LCNF.CollectLevelParams.visitArg","line":103,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CollectLevelParams</span>.<span class=\"name\">visitArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(arg : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Lean.Compiler.LCNF.Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor\">Lean.CollectLevelParams.Visitor</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L100-L101","name":"Lean.Compiler.LCNF.CollectLevelParams.visitType","line":100,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.CollectLevelParams.visitType\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CollectLevelParams</span>.<span class=\"name\">visitType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor\">Lean.CollectLevelParams.Visitor</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L83-L85","name":"Lean.Compiler.LCNF.normLevelParams","line":83,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.normLevelParams","doc":"Normalize universe level parameter names in the given expression.\nThe function also returns the list of universe level parameter names that have been normalized.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.normLevelParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">normLevelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L62-L75","name":"Lean.Compiler.LCNF.NormLevelParam.normExpr","line":62,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.normExpr","doc":"Normalize universe level parameter names in the given expression.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.normExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">NormLevelParam</span>.<span class=\"name\">normExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.M\">Lean.Compiler.LCNF.NormLevelParam.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L42-L57","name":"Lean.Compiler.LCNF.NormLevelParam.normLevel","line":42,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.normLevel","doc":"Normalize universe level parameter names in the given universe level.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.normLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">NormLevelParam</span>.<span class=\"name\">normLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(u : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.M\">Lean.Compiler.LCNF.NormLevelParam.M</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L37-L37","name":"Lean.Compiler.LCNF.NormLevelParam.M","line":37,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.M","doc":"Monad for the universe leve normalizer "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">NormLevelParam</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Î± : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L34-L34","name":"Lean.Compiler.LCNF.NormLevelParam.State.paramNames","line":34,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State.paramNames","doc":"Parameters that have been normalized. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State.paramNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">NormLevelParam</span>.<span class=\"name\">State</span>.<span class=\"name\">paramNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State\">Lean.Compiler.LCNF.NormLevelParam.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L32-L32","name":"Lean.Compiler.LCNF.NormLevelParam.State.map","line":32,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State.map","doc":"Mapping from existing universe parameter names to the new ones. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State.map\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">NormLevelParam</span>.<span class=\"name\">State</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State\">Lean.Compiler.LCNF.NormLevelParam.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L30-L30","name":"Lean.Compiler.LCNF.NormLevelParam.State.nextIdx","line":30,"kind":"def","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State.nextIdx","doc":"Counter for generating new (normalized) universe parameter names. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State.nextIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">NormLevelParam</span>.<span class=\"name\">State</span>.<span class=\"name\">nextIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State\">Lean.Compiler.LCNF.NormLevelParam.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L28-L34","name":"Lean.Compiler.LCNF.NormLevelParam.State","line":28,"kind":"structure","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State","doc":"State for the universe level normalizer monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">NormLevelParam</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/Level.lean#L1-L1","name":"Lean.Compiler.LCNF.NormLevelParam.State.mk","line":1,"kind":"ctor","docLink":"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">NormLevelParam</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(nextIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(paramNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/Level.html#Lean.Compiler.LCNF.NormLevelParam.State\">Lean.Compiler.LCNF.NormLevelParam.State</a></div></div>"}]}