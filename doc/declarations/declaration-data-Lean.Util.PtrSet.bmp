{"name":"Lean.Util.PtrSet","instances":[{"typeNames":["Lean.Ptr"],"name":"Lean.instHashablePtr","className":"Hashable"},{"typeNames":["Lean.Ptr"],"name":"Lean.instBEqPtr","className":"BEq"}],"imports":["Init","Lean.Data.HashSet"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Util/PtrSet.lean#L31-L32","name":"Lean.PtrSet.contains","line":31,"kind":"def","docLink":"./Lean/Util/PtrSet.html#Lean.PtrSet.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PtrSet.html#Lean.PtrSet.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">PtrSet</span>.<span class=\"name\">contains</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.PtrSet\">Lean.PtrSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Util/PtrSet.lean#L28-L29","name":"Lean.PtrSet.insert","line":28,"kind":"def","docLink":"./Lean/Util/PtrSet.html#Lean.PtrSet.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PtrSet.html#Lean.PtrSet.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">PtrSet</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.PtrSet\">Lean.PtrSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.PtrSet\">Lean.PtrSet</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Util/PtrSet.lean#L25-L26","name":"Lean.mkPtrSet","line":25,"kind":"def","docLink":"./Lean/Util/PtrSet.html#Lean.mkPtrSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PtrSet.html#Lean.mkPtrSet\"><span class=\"name\">Lean</span>.<span class=\"name\">mkPtrSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(capacity : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">64</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.PtrSet\">Lean.PtrSet</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Util/PtrSet.lean#L22-L23","name":"Lean.PtrSet","line":22,"kind":"def","docLink":"./Lean/Util/PtrSet.html#Lean.PtrSet","doc":"Set of pointers. It is a low-level auxiliary datastructure used for traversing DAGs.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PtrSet.html#Lean.PtrSet\"><span class=\"name\">Lean</span>.<span class=\"name\">PtrSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Util/PtrSet.lean#L16-L17","name":"Lean.instBEqPtr","line":16,"kind":"instance","docLink":"./Lean/Util/PtrSet.html#Lean.instBEqPtr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PtrSet.html#Lean.instBEqPtr\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqPtr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> (<span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.Ptr\">Lean.Ptr</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Util/PtrSet.lean#L13-L14","name":"Lean.instHashablePtr","line":13,"kind":"instance","docLink":"./Lean/Util/PtrSet.html#Lean.instHashablePtr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PtrSet.html#Lean.instHashablePtr\"><span class=\"name\">Lean</span>.<span class=\"name\">instHashablePtr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> (<span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.Ptr\">Lean.Ptr</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Util/PtrSet.lean#L11-L11","name":"Lean.Ptr.value","line":11,"kind":"def","docLink":"./Lean/Util/PtrSet.html#Lean.Ptr.value","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PtrSet.html#Lean.Ptr.value\"><span class=\"name\">Lean</span>.<span class=\"name\">Ptr</span>.<span class=\"name\">value</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.Ptr\">Lean.Ptr</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Util/PtrSet.lean#L10-L10","name":"Lean.Ptr.mk","line":10,"kind":"ctor","docLink":"./Lean/Util/PtrSet.html#Lean.Ptr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PtrSet.html#Lean.Ptr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Ptr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(value : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/PtrSet.html#Lean.Ptr\">Lean.Ptr</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Util/PtrSet.lean#L10-L11","name":"Lean.Ptr","line":10,"kind":"structure","docLink":"./Lean/Util/PtrSet.html#Lean.Ptr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/PtrSet.html#Lean.Ptr\"><span class=\"name\">Lean</span>.<span class=\"name\">Ptr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}