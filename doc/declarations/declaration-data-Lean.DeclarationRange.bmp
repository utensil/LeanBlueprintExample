{"name":"Lean.DeclarationRange","instances":[{"typeNames":["Lean.DeclarationRange"],"name":"Lean.instInhabitedDeclarationRange","className":"Inhabited"},{"typeNames":["Eq","Lean.DeclarationRange"],"name":"Lean.instDecidableEqDeclarationRange","className":"Decidable"},{"typeNames":["Lean.DeclarationRange"],"name":"Lean.instReprDeclarationRange","className":"Repr"},{"typeNames":["Lean.DeclarationRange"],"name":"Lean.instToExprDeclarationRange","className":"Lean.ToExpr"},{"typeNames":["Lean.DeclarationRanges"],"name":"Lean.instInhabitedDeclarationRanges","className":"Inhabited"},{"typeNames":["Lean.DeclarationRanges"],"name":"Lean.instReprDeclarationRanges","className":"Repr"},{"typeNames":["Lean.DeclarationRanges"],"name":"Lean.instToExprDeclarationRanges","className":"Lean.ToExpr"}],"imports":["Init","Lean.MonadEnv","Lean.AuxRecursor","Lean.ToExpr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L50-L58","name":"Lean.findDeclarationRanges?","line":50,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.findDeclarationRanges?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.findDeclarationRanges?\"><span class=\"name\">Lean</span>.<span class=\"name\">findDeclarationRanges?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L47-L48","name":"Lean.findDeclarationRangesCore?","line":47,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.findDeclarationRangesCore?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.findDeclarationRangesCore?\"><span class=\"name\">Lean</span>.<span class=\"name\">findDeclarationRangesCore?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L44-L45","name":"Lean.addDeclarationRanges","line":44,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.addDeclarationRanges","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.addDeclarationRanges\"><span class=\"name\">Lean</span>.<span class=\"name\">addDeclarationRanges</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declRanges : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L41-L42","name":"Lean.addBuiltinDeclarationRanges","line":41,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.addBuiltinDeclarationRanges","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.addBuiltinDeclarationRanges\"><span class=\"name\">Lean</span>.<span class=\"name\">addBuiltinDeclarationRanges</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declRanges : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L39-L39","name":"Lean.declRangeExt","line":39,"kind":"opaque","docLink":"./Lean/DeclarationRange.html#Lean.declRangeExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.declRangeExt\"><span class=\"name\">Lean</span>.<span class=\"name\">declRangeExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L38-L38","name":"Lean.builtinDeclRanges","line":38,"kind":"opaque","docLink":"./Lean/DeclarationRange.html#Lean.builtinDeclRanges","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.builtinDeclRanges\"><span class=\"name\">Lean</span>.<span class=\"name\">builtinDeclRanges</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L34-L36","name":"Lean.instToExprDeclarationRanges","line":34,"kind":"instance","docLink":"./Lean/DeclarationRange.html#Lean.instToExprDeclarationRanges","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.instToExprDeclarationRanges\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprDeclarationRanges</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L32-L32","name":"Lean.instReprDeclarationRanges","line":32,"kind":"instance","docLink":"./Lean/DeclarationRange.html#Lean.instReprDeclarationRanges","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.instReprDeclarationRanges\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprDeclarationRanges</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L32-L32","name":"Lean.instInhabitedDeclarationRanges","line":32,"kind":"instance","docLink":"./Lean/DeclarationRange.html#Lean.instInhabitedDeclarationRanges","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.instInhabitedDeclarationRanges\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedDeclarationRanges</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L31-L31","name":"Lean.DeclarationRanges.selectionRange","line":31,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRanges.selectionRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges.selectionRange\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRanges</span>.<span class=\"name\">selectionRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L30-L30","name":"Lean.DeclarationRanges.range","line":30,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRanges.range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges.range\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRanges</span>.<span class=\"name\">range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L29-L32","name":"Lean.DeclarationRanges","line":29,"kind":"structure","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRanges","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRanges</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L25-L27","name":"Lean.instToExprDeclarationRange","line":25,"kind":"instance","docLink":"./Lean/DeclarationRange.html#Lean.instToExprDeclarationRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.instToExprDeclarationRange\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprDeclarationRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L23-L23","name":"Lean.instReprDeclarationRange","line":23,"kind":"instance","docLink":"./Lean/DeclarationRange.html#Lean.instReprDeclarationRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.instReprDeclarationRange\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprDeclarationRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L23-L23","name":"Lean.instDecidableEqDeclarationRange","line":23,"kind":"instance","docLink":"./Lean/DeclarationRange.html#Lean.instDecidableEqDeclarationRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.instDecidableEqDeclarationRange\"><span class=\"name\">Lean</span>.<span class=\"name\">instDecidableEqDeclarationRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L23-L23","name":"Lean.instInhabitedDeclarationRange","line":23,"kind":"instance","docLink":"./Lean/DeclarationRange.html#Lean.instInhabitedDeclarationRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.instInhabitedDeclarationRange\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedDeclarationRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L22-L22","name":"Lean.DeclarationRange.endCharUtf16","line":22,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRange.endCharUtf16","doc":"See `charUtf16`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange.endCharUtf16\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRange</span>.<span class=\"name\">endCharUtf16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L20-L20","name":"Lean.DeclarationRange.endPos","line":20,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRange.endPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange.endPos\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRange</span>.<span class=\"name\">endPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L19-L19","name":"Lean.DeclarationRange.charUtf16","line":19,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRange.charUtf16","doc":"A precomputed UTF-16 `character` field as in `Lean.Lsp.Position`. We need to store this\nbecause LSP clients want us to report the range in terms of UTF-16, but converting a Unicode\ncodepoint stored in `Lean.Position` to UTF-16 requires loading and mapping the target source\nfile, which is IO-heavy. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange.charUtf16\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRange</span>.<span class=\"name\">charUtf16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L14-L14","name":"Lean.DeclarationRange.pos","line":14,"kind":"def","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRange.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRange</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L13-L23","name":"Lean.DeclarationRange","line":13,"kind":"structure","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRange","doc":"Store position information for declarations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L1-L1","name":"Lean.DeclarationRanges.mk","line":1,"kind":"ctor","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRanges.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRanges</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(range : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(selectionRange : <a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRanges\">Lean.DeclarationRanges</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/DeclarationRange.lean#L1-L1","name":"Lean.DeclarationRange.mk","line":1,"kind":"ctor","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRange.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">DeclarationRange</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(charUtf16 : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(endPos : <a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(endCharUtf16 : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/DeclarationRange.html#Lean.DeclarationRange\">Lean.DeclarationRange</a></div></div>"}]}