{"name":"Lake.Build.Store","instances":[],"imports":["Init","Lake.Build.Data","Lake.Util.StoreInsts"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Store.lean#L86-L88","name":"Lake.BuildStore.collectSharedExternLibs","line":86,"kind":"def","docLink":"./Lake/Build/Store.html#Lake.BuildStore.collectSharedExternLibs","doc":"Derive an array of built external shared libraries from the store. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Store.html#Lake.BuildStore.collectSharedExternLibs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildStore</span>.<span class=\"name\">collectSharedExternLibs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">Lake.BuildStore</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">Lake.FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.TargetData\">Lake.TargetData</a> <span class=\"fn\">`externLib.shared</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Store.lean#L73-L83","name":"Lake.BuildStore.collectTargetFacetArray","line":73,"kind":"def","docLink":"./Lake/Build/Store.html#Lake.BuildStore.collectTargetFacetArray","doc":"Derive an array of built target facets from the store. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Store.html#Lake.BuildStore.collectTargetFacetArray\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildStore</span>.<span class=\"name\">collectTargetFacetArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">Lake.BuildStore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">Lake.FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.TargetData\">Lake.TargetData</a> <span class=\"fn\">facet</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Store.lean#L60-L70","name":"Lake.BuildStore.collectPackageFacetArray","line":60,"kind":"def","docLink":"./Lake/Build/Store.html#Lake.BuildStore.collectPackageFacetArray","doc":"Derive an array of built package facets from the store. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Store.html#Lake.BuildStore.collectPackageFacetArray\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildStore</span>.<span class=\"name\">collectPackageFacetArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">Lake.BuildStore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">Lake.FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.PackageData\">Lake.PackageData</a> <span class=\"fn\">facet</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Store.lean#L47-L57","name":"Lake.BuildStore.collectModuleFacetMap","line":47,"kind":"def","docLink":"./Lake/Build/Store.html#Lake.BuildStore.collectModuleFacetMap","doc":"Derive a map of module names to built facets from the store. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Store.html#Lake.BuildStore.collectModuleFacetMap\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildStore</span>.<span class=\"name\">collectModuleFacetMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">Lake.BuildStore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">Lake.FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.ModuleData\">Lake.ModuleData</a> <span class=\"fn\">facet</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Store.lean#L34-L44","name":"Lake.BuildStore.collectModuleFacetArray","line":34,"kind":"def","docLink":"./Lake/Build/Store.html#Lake.BuildStore.collectModuleFacetArray","doc":"Derive an array of built module facets from the store. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Store.html#Lake.BuildStore.collectModuleFacetArray\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildStore</span>.<span class=\"name\">collectModuleFacetArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">Lake.BuildStore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">Lake.FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.ModuleData\">Lake.ModuleData</a> <span class=\"fn\">facet</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Store.lean#L26-L26","name":"Lake.BuildStore.empty","line":26,"kind":"def","docLink":"./Lake/Build/Store.html#Lake.BuildStore.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Store.html#Lake.BuildStore.empty\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildStore</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Store.html#Lake.BuildStore\">Lake.BuildStore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Store.lean#L23-L24","name":"Lake.BuildStore","line":23,"kind":"def","docLink":"./Lake/Build/Store.html#Lake.BuildStore","doc":"The type of the Lake build store. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Store.html#Lake.BuildStore\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildStore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Store.lean#L20-L20","name":"Lake.MonadBuildStore","line":20,"kind":"def","docLink":"./Lake/Build/Store.html#Lake.MonadBuildStore","doc":"A monad equipped with a Lake build store. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Store.html#Lake.MonadBuildStore\"><span class=\"name\">Lake</span>.<span class=\"name\">MonadBuildStore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}