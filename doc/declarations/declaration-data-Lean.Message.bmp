{"name":"Lean.Message","instances":[{"typeNames":["Lean.MessageSeverity"],"name":"Lean.instInhabitedMessageSeverity","className":"Inhabited"},{"typeNames":["Lean.MessageSeverity"],"name":"Lean.instBEqMessageSeverity","className":"BEq"},{"typeNames":["Lean.MessageData"],"name":"Lean.instInhabitedMessageData","className":"Inhabited"},{"typeNames":["Lean.MessageData"],"name":"Lean.MessageData.instAppendMessageData","className":"Append"},{"typeNames":["String","Lean.MessageData"],"name":"Lean.MessageData.instCoeStringMessageData","className":"Coe"},{"typeNames":["Std.Format","Lean.MessageData"],"name":"Lean.MessageData.instCoeFormatMessageData","className":"Coe"},{"typeNames":["Lean.Level","Lean.MessageData"],"name":"Lean.MessageData.instCoeLevelMessageData","className":"Coe"},{"typeNames":["Lean.Expr","Lean.MessageData"],"name":"Lean.MessageData.instCoeExprMessageData","className":"Coe"},{"typeNames":["Lean.Name","Lean.MessageData"],"name":"Lean.MessageData.instCoeNameMessageData","className":"Coe"},{"typeNames":["Lean.Syntax","Lean.MessageData"],"name":"Lean.MessageData.instCoeSyntaxMessageData","className":"Coe"},{"typeNames":["Lean.MVarId","Lean.MessageData"],"name":"Lean.MessageData.instCoeMVarIdMessageData","className":"Coe"},{"typeNames":["Option","Lean.Expr","Lean.MessageData"],"name":"Lean.MessageData.instCoeOptionExprMessageData","className":"Coe"},{"typeNames":["Array","Lean.Expr","Lean.MessageData"],"name":"Lean.MessageData.instCoeArrayExprMessageData","className":"Coe"},{"typeNames":["List","Lean.MessageData","Lean.MessageData"],"name":"Lean.MessageData.instCoeListMessageData","className":"Coe"},{"typeNames":["List","Lean.Expr","Lean.MessageData"],"name":"Lean.MessageData.instCoeListExprMessageData","className":"Coe"},{"typeNames":["Lean.Message"],"name":"Lean.instInhabitedMessage","className":"Inhabited"},{"typeNames":["Lean.MessageLog"],"name":"Lean.instInhabitedMessageLog","className":"Inhabited"},{"typeNames":["Lean.MessageLog"],"name":"Lean.MessageLog.instAppendMessageLog","className":"Append"},{"typeNames":[],"name":"Lean.instAddMessageContext","className":"Lean.AddMessageContext"},{"typeNames":[],"name":"Lean.instToMessageData","className":"Lean.ToMessageData"},{"typeNames":["Lean.Expr"],"name":"Lean.instToMessageDataExpr","className":"Lean.ToMessageData"},{"typeNames":["Lean.Level"],"name":"Lean.instToMessageDataLevel","className":"Lean.ToMessageData"},{"typeNames":["Lean.Name"],"name":"Lean.instToMessageDataName","className":"Lean.ToMessageData"},{"typeNames":["String"],"name":"Lean.instToMessageDataString","className":"Lean.ToMessageData"},{"typeNames":["Lean.Syntax"],"name":"Lean.instToMessageDataSyntax","className":"Lean.ToMessageData"},{"typeNames":["Lean.TSyntax"],"name":"Lean.instToMessageDataTSyntax","className":"Lean.ToMessageData"},{"typeNames":["Std.Format"],"name":"Lean.instToMessageDataFormat","className":"Lean.ToMessageData"},{"typeNames":["Lean.MVarId"],"name":"Lean.instToMessageDataMVarId","className":"Lean.ToMessageData"},{"typeNames":["Lean.MessageData"],"name":"Lean.instToMessageDataMessageData","className":"Lean.ToMessageData"},{"typeNames":["List"],"name":"Lean.instToMessageDataList","className":"Lean.ToMessageData"},{"typeNames":["Array"],"name":"Lean.instToMessageDataArray","className":"Lean.ToMessageData"},{"typeNames":["Subarray"],"name":"Lean.instToMessageDataSubarray","className":"Lean.ToMessageData"},{"typeNames":["Option"],"name":"Lean.instToMessageDataOption","className":"Lean.ToMessageData"},{"typeNames":["Option","Lean.Expr"],"name":"Lean.instToMessageDataOptionExpr","className":"Lean.ToMessageData"}],"imports":["Init","Lean.Data.Position","Lean.Data.OpenDecl","Lean.MetavarContext","Lean.Environment","Lean.Util.PPExt","Lean.Util.Sorry"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L346-L370","name":"Lean.KernelException.toMessageData","line":346,"kind":"def","docLink":"./Lean/Message.html#Lean.KernelException.toMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.KernelException.toMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">toMessageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L338-L339","name":"Lean.toMessageList","line":338,"kind":"def","docLink":"./Lean/Message.html#Lean.toMessageList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.toMessageList\"><span class=\"name\">Lean</span>.<span class=\"name\">toMessageList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L333-L333","name":"Lean.termM!_","line":333,"kind":"def","docLink":"./Lean/Message.html#Lean.termM!_","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.termM!_\"><span class=\"name\">Lean</span>.<span class=\"name\">termM!_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L331-L331","name":"Lean.instToMessageDataOptionExpr","line":331,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataOptionExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataOptionExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataOptionExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L330-L330","name":"Lean.instToMessageDataOption","line":330,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataOption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataOption\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataOption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L329-L329","name":"Lean.instToMessageDataSubarray","line":329,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataSubarray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataSubarray\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataSubarray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> (<span class=\"fn\"><a href=\"./Init/Data/Array/Subarray.html#Subarray\">Subarray</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L328-L328","name":"Lean.instToMessageDataArray","line":328,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataArray\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L327-L327","name":"Lean.instToMessageDataList","line":327,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataList\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L326-L326","name":"Lean.instToMessageDataMessageData","line":326,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L325-L325","name":"Lean.instToMessageDataMVarId","line":325,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataMVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataMVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataMVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L324-L324","name":"Lean.instToMessageDataFormat","line":324,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataFormat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataFormat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L323-L323","name":"Lean.instToMessageDataTSyntax","line":323,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataTSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataTSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataTSyntax</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKinds\">Lean.SyntaxNodeKinds</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">k</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L322-L322","name":"Lean.instToMessageDataSyntax","line":322,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataSyntax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L321-L321","name":"Lean.instToMessageDataString","line":321,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataString\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L320-L320","name":"Lean.instToMessageDataName","line":320,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataName\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L319-L319","name":"Lean.instToMessageDataLevel","line":319,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataLevel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L318-L318","name":"Lean.instToMessageDataExpr","line":318,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageDataExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageDataExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageDataExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L317-L317","name":"Lean.instToMessageData","line":317,"kind":"instance","docLink":"./Lean/Message.html#Lean.instToMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instToMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">instToMessageData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L312-L315","name":"Lean.stringToMessageData","line":312,"kind":"def","docLink":"./Lean/Message.html#Lean.stringToMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.stringToMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">stringToMessageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(str : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L308-L308","name":"Lean.ToMessageData.toMessageData","line":308,"kind":"def","docLink":"./Lean/Message.html#Lean.ToMessageData.toMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.ToMessageData.toMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">ToMessageData</span>.<span class=\"name\">toMessageData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L307-L307","name":"Lean.ToMessageData.mk","line":307,"kind":"ctor","docLink":"./Lean/Message.html#Lean.ToMessageData.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.ToMessageData.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ToMessageData</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toMessageData : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L307-L308","name":"Lean.ToMessageData","line":307,"kind":"class","docLink":"./Lean/Message.html#Lean.ToMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.ToMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">ToMessageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L300-L305","name":"Lean.addMessageContextFull","line":300,"kind":"def","docLink":"./Lean/Message.html#Lean.addMessageContextFull","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.addMessageContextFull\"><span class=\"name\">Lean</span>.<span class=\"name\">addMessageContextFull</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/MetavarContext.html#Lean.MonadMCtx\">Lean.MonadMCtx</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.MonadLCtx\">Lean.MonadLCtx</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.MonadOptions\">Lean.MonadOptions</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(msgData : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L295-L298","name":"Lean.addMessageContextPartial","line":295,"kind":"def","docLink":"./Lean/Message.html#Lean.addMessageContextPartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.addMessageContextPartial\"><span class=\"name\">Lean</span>.<span class=\"name\">addMessageContextPartial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.MonadOptions\">Lean.MonadOptions</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(msgData : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L292-L293","name":"Lean.instAddMessageContext","line":292,"kind":"instance","docLink":"./Lean/Message.html#Lean.instAddMessageContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instAddMessageContext\"><span class=\"name\">Lean</span>.<span class=\"name\">instAddMessageContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.AddMessageContext\">Lean.AddMessageContext</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.AddMessageContext\">Lean.AddMessageContext</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L288-L288","name":"Lean.AddMessageContext.addMessageContext","line":288,"kind":"def","docLink":"./Lean/Message.html#Lean.AddMessageContext.addMessageContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.AddMessageContext.addMessageContext\"><span class=\"name\">Lean</span>.<span class=\"name\">AddMessageContext</span>.<span class=\"name\">addMessageContext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.AddMessageContext\">Lean.AddMessageContext</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L287-L287","name":"Lean.AddMessageContext.mk","line":287,"kind":"ctor","docLink":"./Lean/Message.html#Lean.AddMessageContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.AddMessageContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">AddMessageContext</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(addMessageContext : <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.AddMessageContext\">Lean.AddMessageContext</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L287-L288","name":"Lean.AddMessageContext","line":287,"kind":"class","docLink":"./Lean/Message.html#Lean.AddMessageContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.AddMessageContext\"><span class=\"name\">Lean</span>.<span class=\"name\">AddMessageContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L284-L285","name":"Lean.indentExpr","line":284,"kind":"def","docLink":"./Lean/Message.html#Lean.indentExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.indentExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">indentExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L281-L282","name":"Lean.indentD","line":281,"kind":"def","docLink":"./Lean/Message.html#Lean.indentD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.indentD\"><span class=\"name\">Lean</span>.<span class=\"name\">indentD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L278-L279","name":"Lean.MessageData.nestD","line":278,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.nestD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.nestD\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">nestD</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L273-L274","name":"Lean.MessageLog.toList","line":273,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.toList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.toList\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">toList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(log : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L270-L271","name":"Lean.MessageLog.forM","line":270,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.forM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.forM\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">forM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(log : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L267-L268","name":"Lean.MessageLog.getInfoMessages","line":267,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.getInfoMessages","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.getInfoMessages\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">getInfoMessages</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(log : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L264-L265","name":"Lean.MessageLog.errorsToWarnings","line":264,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.errorsToWarnings","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.errorsToWarnings\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">errorsToWarnings</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(log : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L259-L262","name":"Lean.MessageLog.hasErrors","line":259,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.hasErrors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.hasErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">hasErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(log : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L256-L257","name":"Lean.MessageLog.instAppendMessageLog","line":256,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageLog.instAppendMessageLog","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.instAppendMessageLog\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">instAppendMessageLog</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Append\">Append</a> <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L253-L254","name":"Lean.MessageLog.append","line":253,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.append\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">append</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(l₁ : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l₂ : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L250-L251","name":"Lean.MessageLog.add","line":250,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.add\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(log : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L247-L248","name":"Lean.MessageLog.isEmpty","line":247,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(log : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L245-L245","name":"Lean.MessageLog.empty","line":245,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L242-L242","name":"Lean.instInhabitedMessageLog","line":242,"kind":"instance","docLink":"./Lean/Message.html#Lean.instInhabitedMessageLog","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instInhabitedMessageLog\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedMessageLog</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L241-L241","name":"Lean.MessageLog.msgs","line":241,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageLog.msgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.msgs\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">msgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray\">Lean.PersistentArray</a> <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L240-L242","name":"Lean.MessageLog","line":240,"kind":"structure","docLink":"./Lean/Message.html#Lean.MessageLog","doc":"A persistent array of messages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L224-L235","name":"Lean.Message.toString","line":224,"kind":"def","docLink":"./Lean/Message.html#Lean.Message.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeEndPos : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L220-L220","name":"Lean.instInhabitedMessage","line":220,"kind":"instance","docLink":"./Lean/Message.html#Lean.instInhabitedMessage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instInhabitedMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedMessage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L219-L219","name":"Lean.Message.data","line":219,"kind":"def","docLink":"./Lean/Message.html#Lean.Message.data","doc":"The content of the message. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message.data\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span>.<span class=\"name\">data</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L217-L217","name":"Lean.Message.caption","line":217,"kind":"def","docLink":"./Lean/Message.html#Lean.Message.caption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message.caption\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span>.<span class=\"name\">caption</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L216-L216","name":"Lean.Message.severity","line":216,"kind":"def","docLink":"./Lean/Message.html#Lean.Message.severity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message.severity\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span>.<span class=\"name\">severity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageSeverity\">Lean.MessageSeverity</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L215-L215","name":"Lean.Message.keepFullRange","line":215,"kind":"def","docLink":"./Lean/Message.html#Lean.Message.keepFullRange","doc":"If `true`, report range as given; see `msgToInteractiveDiagnostic`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message.keepFullRange\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span>.<span class=\"name\">keepFullRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L213-L213","name":"Lean.Message.endPos","line":213,"kind":"def","docLink":"./Lean/Message.html#Lean.Message.endPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message.endPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span>.<span class=\"name\">endPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L212-L212","name":"Lean.Message.pos","line":212,"kind":"def","docLink":"./Lean/Message.html#Lean.Message.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L211-L211","name":"Lean.Message.fileName","line":211,"kind":"def","docLink":"./Lean/Message.html#Lean.Message.fileName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message.fileName\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span>.<span class=\"name\">fileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L210-L220","name":"Lean.Message","line":210,"kind":"structure","docLink":"./Lean/Message.html#Lean.Message","doc":"A `Message` is a richly formatted piece of information emitted by Lean.\nThey are rendered by client editors in the infoview and in diagnostic windows. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L204-L204","name":"Lean.MessageData.instCoeListExprMessageData","line":204,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeListExprMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeListExprMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeListExprMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>) <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L203-L203","name":"Lean.MessageData.instCoeListMessageData","line":203,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeListMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeListMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeListMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>) <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L200-L201","name":"Lean.MessageData.ofArray","line":200,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.ofArray","doc":"See `MessageData.ofList`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.ofArray\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">ofArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L195-L197","name":"Lean.MessageData.ofList","line":195,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.ofList","doc":"Write the given list of messages as a list, separating each item with `,\\n` and surrounding with square brackets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.ofList\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">ofList</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L189-L192","name":"Lean.MessageData.joinSep","line":189,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.joinSep","doc":"Append the given list of messages with the given separarator. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.joinSep\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">joinSep</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span> → <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L187-L187","name":"Lean.MessageData.sbracket","line":187,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.sbracket","doc":"Wrap the given message in square brackets `[]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.sbracket\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">sbracket</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L185-L185","name":"Lean.MessageData.paren","line":185,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.paren","doc":"Wrap the given message in parentheses `()`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.paren\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">paren</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L183-L183","name":"Lean.MessageData.bracket","line":183,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.bracket","doc":"Wrap the given message in `l` and `r`. See also `Format.bracket`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.bracket\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">bracket</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L180-L180","name":"Lean.MessageData.instCoeArrayExprMessageData","line":180,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeArrayExprMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeArrayExprMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeArrayExprMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>) <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L172-L178","name":"Lean.MessageData.arrayExpr.toMessageData","line":172,"kind":"opaque","docLink":"./Lean/Message.html#Lean.MessageData.arrayExpr.toMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.arrayExpr.toMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">arrayExpr</span>.<span class=\"name\">toMessageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(es : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L170-L170","name":"Lean.MessageData.instCoeOptionExprMessageData","line":170,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeOptionExprMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeOptionExprMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeOptionExprMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>) <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L169-L169","name":"Lean.MessageData.instCoeMVarIdMessageData","line":169,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeMVarIdMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeMVarIdMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeMVarIdMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L168-L168","name":"Lean.MessageData.instCoeSyntaxMessageData","line":168,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeSyntaxMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeSyntaxMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeSyntaxMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L167-L167","name":"Lean.MessageData.instCoeNameMessageData","line":167,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeNameMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeNameMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeNameMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L166-L166","name":"Lean.MessageData.instCoeExprMessageData","line":166,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeExprMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeExprMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeExprMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L165-L165","name":"Lean.MessageData.instCoeLevelMessageData","line":165,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeLevelMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeLevelMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeLevelMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L164-L164","name":"Lean.MessageData.instCoeFormatMessageData","line":164,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeFormatMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeFormatMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeFormatMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L163-L163","name":"Lean.MessageData.instCoeStringMessageData","line":163,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instCoeStringMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instCoeStringMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instCoeStringMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L161-L161","name":"Lean.MessageData.instAppendMessageData","line":161,"kind":"instance","docLink":"./Lean/Message.html#Lean.MessageData.instAppendMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.instAppendMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">instAppendMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Append\">Append</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L158-L159","name":"Lean.MessageData.toString","line":158,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msgData : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L155-L156","name":"Lean.MessageData.format","line":155,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.format","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.format\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">format</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msgData : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L139-L153","name":"Lean.MessageData.formatAux","line":139,"kind":"opaque","docLink":"./Lean/Message.html#Lean.MessageData.formatAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.formatAux\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">formatAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.NamingContext\">Lean.NamingContext</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageDataContext\">Lean.MessageDataContext</a></span> → <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L128-L137","name":"Lean.MessageData.hasSyntheticSorry.visit","line":128,"kind":"opaque","docLink":"./Lean/Message.html#Lean.MessageData.hasSyntheticSorry.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.hasSyntheticSorry.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">hasSyntheticSorry</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mctx? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L125-L137","name":"Lean.MessageData.hasSyntheticSorry","line":125,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.hasSyntheticSorry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.hasSyntheticSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">hasSyntheticSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L123-L123","name":"Lean.MessageData.ofName","line":123,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.ofName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.ofName\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">ofName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L122-L122","name":"Lean.MessageData.ofLevel","line":122,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.ofLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.ofLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">ofLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L114-L120","name":"Lean.MessageData.ofExpr","line":114,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.ofExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.ofExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">ofExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L105-L112","name":"Lean.MessageData.ofSyntax","line":105,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.ofSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.ofSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">ofSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L100-L103","name":"Lean.MessageData.mkPPContext","line":100,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.mkPPContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.mkPPContext\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">mkPPContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(nCtx : <a href=\"./Lean/Message.html#Lean.NamingContext\">Lean.NamingContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Message.html#Lean.MessageDataContext\">Lean.MessageDataContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">Lean.PPContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L97-L98","name":"Lean.MessageData.nil","line":97,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.nil","doc":"An empty message. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.nil\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">nil</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L86-L94","name":"Lean.MessageData.hasTag","line":86,"kind":"opaque","docLink":"./Lean/Message.html#Lean.MessageData.hasTag","doc":"Returns true when the message contains a `MessageData.tagged tag ..` constructor where `p tag` is true. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.hasTag\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">hasTag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L74-L82","name":"Lean.MessageData.isEmpty","line":74,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageData.isEmpty","doc":"Determines whether the message contains any content. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L69-L69","name":"Lean.instInhabitedMessageData","line":69,"kind":"instance","docLink":"./Lean/Message.html#Lean.instInhabitedMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instInhabitedMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L67-L68","name":"Lean.MessageData.trace","line":67,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.trace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.trace\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">trace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cls : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(children : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(collapsed : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L64-L66","name":"Lean.MessageData.tagged","line":64,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.tagged","doc":"Tagged sections. `Name` should be viewed as a \"kind\", and is used by `MessageData` inspector functions.\nExample: an inspector that tries to find \"definitional equality failures\" may look for the tag \"DefEqFailure\". "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.tagged\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">tagged</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L62-L63","name":"Lean.MessageData.compose","line":62,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.compose","doc":"Lifted `Format.compose` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.compose\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">compose</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L60-L61","name":"Lean.MessageData.group","line":60,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.group","doc":"Lifted `Format.group` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.group\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">group</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L58-L59","name":"Lean.MessageData.nest","line":58,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.nest","doc":"Lifted `Format.nest` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.nest\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">nest</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L57-L57","name":"Lean.MessageData.withNamingContext","line":57,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.withNamingContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.withNamingContext\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">withNamingContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.NamingContext\">Lean.NamingContext</a> → <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L55-L56","name":"Lean.MessageData.withContext","line":55,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.withContext","doc":"`withContext ctx d` specifies the pretty printing context `(env, mctx, lctx, opts)` for the nested expressions in `d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.withContext\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">withContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageDataContext\">Lean.MessageDataContext</a> → <span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L54-L54","name":"Lean.MessageData.ofGoal","line":54,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.ofGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.ofGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">ofGoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L52-L53","name":"Lean.MessageData.ofPPFormat","line":52,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.ofPPFormat","doc":"Lazily formatted text. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.ofPPFormat\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">ofPPFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.PPFormat\">Lean.PPFormat</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L50-L51","name":"Lean.MessageData.ofFormat","line":50,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageData.ofFormat","doc":"Eagerly formatted text. We inspect this in various hacks, so it is not immediately subsumed by `ofPPFormat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData.ofFormat\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span>.<span class=\"name\">ofFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L49-L69","name":"Lean.MessageData","line":49,"kind":"inductive","docLink":"./Lean/Message.html#Lean.MessageData","doc":"Structured message data. We use it for reporting errors, trace messages, etc. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L46-L46","name":"Lean.PPFormat.hasSyntheticSorry","line":46,"kind":"def","docLink":"./Lean/Message.html#Lean.PPFormat.hasSyntheticSorry","doc":"Searches for synthetic sorries in original input. Used to filter out certain messages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.PPFormat.hasSyntheticSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFormat</span>.<span class=\"name\">hasSyntheticSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.PPFormat\">Lean.PPFormat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L44-L44","name":"Lean.PPFormat.pp","line":44,"kind":"def","docLink":"./Lean/Message.html#Lean.PPFormat.pp","doc":"Pretty-prints text using surrounding context, if any. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.PPFormat.pp\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFormat</span>.<span class=\"name\">pp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.PPFormat\">Lean.PPFormat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">Lean.PPContext</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">Lean.FormatWithInfos</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L42-L46","name":"Lean.PPFormat","line":42,"kind":"structure","docLink":"./Lean/Message.html#Lean.PPFormat","doc":"Lazily formatted text to be used in `MessageData`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.PPFormat\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L39-L39","name":"Lean.NamingContext.openDecls","line":39,"kind":"def","docLink":"./Lean/Message.html#Lean.NamingContext.openDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.NamingContext.openDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">NamingContext</span>.<span class=\"name\">openDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.NamingContext\">Lean.NamingContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">Lean.OpenDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L38-L38","name":"Lean.NamingContext.currNamespace","line":38,"kind":"def","docLink":"./Lean/Message.html#Lean.NamingContext.currNamespace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.NamingContext.currNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">NamingContext</span>.<span class=\"name\">currNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.NamingContext\">Lean.NamingContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L37-L39","name":"Lean.NamingContext","line":37,"kind":"structure","docLink":"./Lean/Message.html#Lean.NamingContext","doc":"A naming context is the information needed to shorten names in pretty printing.\n\nIt gives the current namespace and the list of open declarations.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.NamingContext\"><span class=\"name\">Lean</span>.<span class=\"name\">NamingContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L31-L31","name":"Lean.MessageDataContext.opts","line":31,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageDataContext.opts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageDataContext.opts\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageDataContext</span>.<span class=\"name\">opts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.MessageDataContext\">Lean.MessageDataContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L30-L30","name":"Lean.MessageDataContext.lctx","line":30,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageDataContext.lctx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageDataContext.lctx\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageDataContext</span>.<span class=\"name\">lctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.MessageDataContext\">Lean.MessageDataContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L29-L29","name":"Lean.MessageDataContext.mctx","line":29,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageDataContext.mctx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageDataContext.mctx\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageDataContext</span>.<span class=\"name\">mctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.MessageDataContext\">Lean.MessageDataContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L28-L28","name":"Lean.MessageDataContext.env","line":28,"kind":"def","docLink":"./Lean/Message.html#Lean.MessageDataContext.env","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageDataContext.env\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageDataContext</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Message.html#Lean.MessageDataContext\">Lean.MessageDataContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L27-L31","name":"Lean.MessageDataContext","line":27,"kind":"structure","docLink":"./Lean/Message.html#Lean.MessageDataContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageDataContext\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageDataContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L25-L25","name":"Lean.instBEqMessageSeverity","line":25,"kind":"instance","docLink":"./Lean/Message.html#Lean.instBEqMessageSeverity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instBEqMessageSeverity\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqMessageSeverity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Message.html#Lean.MessageSeverity\">Lean.MessageSeverity</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L25-L25","name":"Lean.instInhabitedMessageSeverity","line":25,"kind":"instance","docLink":"./Lean/Message.html#Lean.instInhabitedMessageSeverity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.instInhabitedMessageSeverity\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedMessageSeverity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Message.html#Lean.MessageSeverity\">Lean.MessageSeverity</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L24-L24","name":"Lean.MessageSeverity.error","line":24,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageSeverity.error","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageSeverity.error\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageSeverity</span>.<span class=\"name\">error</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageSeverity\">Lean.MessageSeverity</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L24-L24","name":"Lean.MessageSeverity.warning","line":24,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageSeverity.warning","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageSeverity.warning\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageSeverity</span>.<span class=\"name\">warning</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageSeverity\">Lean.MessageSeverity</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L24-L24","name":"Lean.MessageSeverity.information","line":24,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageSeverity.information","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageSeverity.information\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageSeverity</span>.<span class=\"name\">information</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageSeverity\">Lean.MessageSeverity</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L23-L25","name":"Lean.MessageSeverity","line":23,"kind":"inductive","docLink":"./Lean/Message.html#Lean.MessageSeverity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageSeverity\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageSeverity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L17-L21","name":"Lean.mkErrorStringWithPos","line":17,"kind":"def","docLink":"./Lean/Message.html#Lean.mkErrorStringWithPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.mkErrorStringWithPos\"><span class=\"name\">Lean</span>.<span class=\"name\">mkErrorStringWithPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fileName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(endPos : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a></span>) <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L1-L1","name":"Lean.Message.mk","line":1,"kind":"ctor","docLink":"./Lean/Message.html#Lean.Message.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.Message.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Message</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fileName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(endPos : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Position.html#Lean.Position\">Lean.Position</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(keepFullRange : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(severity : <a href=\"./Lean/Message.html#Lean.MessageSeverity\">Lean.MessageSeverity</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(caption : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L1-L1","name":"Lean.NamingContext.mk","line":1,"kind":"ctor","docLink":"./Lean/Message.html#Lean.NamingContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.NamingContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">NamingContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(currNamespace : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(openDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">Lean.OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.NamingContext\">Lean.NamingContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L1-L1","name":"Lean.MessageDataContext.mk","line":1,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageDataContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageDataContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageDataContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mctx : <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageDataContext\">Lean.MessageDataContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L1-L1","name":"Lean.MessageLog.mk","line":1,"kind":"ctor","docLink":"./Lean/Message.html#Lean.MessageLog.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.MessageLog.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">MessageLog</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msgs : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray\">Lean.PersistentArray</a> <a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Message.lean#L1-L1","name":"Lean.PPFormat.mk","line":1,"kind":"ctor","docLink":"./Lean/Message.html#Lean.PPFormat.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Message.html#Lean.PPFormat.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PPFormat</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pp : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Util/PPExt.html#Lean.PPContext\">Lean.PPContext</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Util/PPExt.html#Lean.FormatWithInfos\">Lean.FormatWithInfos</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hasSyntheticSorry : <span class=\"fn\"><a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.PPFormat\">Lean.PPFormat</a></div></div>"}]}