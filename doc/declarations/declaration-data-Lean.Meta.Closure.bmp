{"name":"Lean.Meta.Closure","instances":[{"typeNames":["Lean.Meta.Closure.ToProcessElement"],"name":"Lean.Meta.Closure.instInhabitedToProcessElement","className":"Inhabited"}],"imports":["Init","Lean.MetavarContext","Lean.Environment","Lean.Util.FoldConsts","Lean.Meta.Basic","Lean.Meta.Check"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L399-L402","name":"Lean.Meta.mkAuxTheoremFor","line":399,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.mkAuxTheoremFor","doc":"Similar to `mkAuxTheorem`, but infers the type of `value`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.mkAuxTheoremFor\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">mkAuxTheoremFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(zeta : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L372-L394","name":"Lean.Meta.mkAuxTheorem","line":372,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.mkAuxTheorem","doc":"Create an auxiliary theorem with the given name, type and value. It is similar to `mkAuxDefinition`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.mkAuxTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">mkAuxTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(zeta : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L364-L367","name":"Lean.Meta.mkAuxDefinitionFor","line":364,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.mkAuxDefinitionFor","doc":"Similar to `mkAuxDefinition`, but infers the type of `value`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.mkAuxDefinitionFor\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">mkAuxDefinitionFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(zeta : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L347-L361","name":"Lean.Meta.mkAuxDefinition","line":347,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.mkAuxDefinition","doc":"Create an auxiliary definition with the given name, type and value.\nThe parameters `type` and `value` may contain free and meta variables.\nA \"closure\" is computed, and a term of the form `name.{u_1 ... u_n} t_1 ... t_m` is\nreturned where `u_i`s are universe parameters and metavariables `type` and `value` depend on,\nand `t_j`s are free and meta variables `type` and `value` depend on. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.mkAuxDefinition\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">mkAuxDefinition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(zeta : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(compile : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L325-L337","name":"Lean.Meta.Closure.mkValueTypeClosure","line":325,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkValueTypeClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkValueTypeClosure\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">mkValueTypeClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(zeta : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult\">Lean.Meta.Closure.MkValueTypeClosureResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L317-L323","name":"Lean.Meta.Closure.mkValueTypeClosureAux","line":317,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkValueTypeClosureAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkValueTypeClosureAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">mkValueTypeClosureAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> (<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L315-L315","name":"Lean.Meta.Closure.MkValueTypeClosureResult.exprArgs","line":315,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.exprArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.exprArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">MkValueTypeClosureResult</span>.<span class=\"name\">exprArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult\">Lean.Meta.Closure.MkValueTypeClosureResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L314-L314","name":"Lean.Meta.Closure.MkValueTypeClosureResult.levelArgs","line":314,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.levelArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.levelArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">MkValueTypeClosureResult</span>.<span class=\"name\">levelArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult\">Lean.Meta.Closure.MkValueTypeClosureResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L313-L313","name":"Lean.Meta.Closure.MkValueTypeClosureResult.value","line":313,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.value","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.value\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">MkValueTypeClosureResult</span>.<span class=\"name\">value</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult\">Lean.Meta.Closure.MkValueTypeClosureResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L312-L312","name":"Lean.Meta.Closure.MkValueTypeClosureResult.type","line":312,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.type\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">MkValueTypeClosureResult</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult\">Lean.Meta.Closure.MkValueTypeClosureResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L311-L311","name":"Lean.Meta.Closure.MkValueTypeClosureResult.levelParams","line":311,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.levelParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.levelParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">MkValueTypeClosureResult</span>.<span class=\"name\">levelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult\">Lean.Meta.Closure.MkValueTypeClosureResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L310-L315","name":"Lean.Meta.Closure.MkValueTypeClosureResult","line":310,"kind":"structure","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">MkValueTypeClosureResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L307-L308","name":"Lean.Meta.Closure.mkForall","line":307,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkForall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkForall\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">mkForall</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L304-L305","name":"Lean.Meta.Closure.mkLambda","line":304,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkLambda","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkLambda\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">mkLambda</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L284-L302","name":"Lean.Meta.Closure.mkBinding","line":284,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkBinding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkBinding\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">mkBinding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(isLambda : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L252-L282","name":"Lean.Meta.Closure.process","line":252,"kind":"opaque","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.process","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.process\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">process</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L248-L250","name":"Lean.Meta.Closure.pushLocalDecl","line":248,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pushLocalDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.pushLocalDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">pushLocalDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(newFVarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bi : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo.default\">Lean.BinderInfo.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L245-L246","name":"Lean.Meta.Closure.pushFVarArg","line":245,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pushFVarArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.pushFVarArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">pushFVarArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L233-L243","name":"Lean.Meta.Closure.pickNextToProcess?","line":233,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pickNextToProcess?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.pickNextToProcess?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">pickNextToProcess?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L222-L231","name":"Lean.Meta.Closure.pickNextToProcessAux","line":222,"kind":"opaque","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pickNextToProcessAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.pickNextToProcessAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">pickNextToProcessAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toProcess : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(elem : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L218-L220","name":"Lean.Meta.Closure.collectExpr","line":218,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">collectExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L187-L216","name":"Lean.Meta.Closure.collectExprAux","line":187,"kind":"opaque","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectExprAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectExprAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">collectExprAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L184-L185","name":"Lean.Meta.Closure.pushToProcess","line":184,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pushToProcess","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.pushToProcess\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">pushToProcess</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(elem : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L178-L182","name":"Lean.Meta.Closure.mkNextUserName","line":178,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkNextUserName","doc":"Remark: This method does not guarantee unique user names.\nThe correctness of the procedure does not rely on unique user names.\nRecall that the pretty printer takes care of unintended collisions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkNextUserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">mkNextUserName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L165-L172","name":"Lean.Meta.Closure.preprocess","line":165,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.preprocess","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.preprocess\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">preprocess</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L161-L163","name":"Lean.Meta.Closure.collectLevel","line":161,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">collectLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(u : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L153-L159","name":"Lean.Meta.Closure.collectLevelAux","line":153,"kind":"opaque","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectLevelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectLevelAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">collectLevelAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a> â†’ <span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L147-L151","name":"Lean.Meta.Closure.mkNewLevelParam","line":147,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkNewLevelParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkNewLevelParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">mkNewLevelParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(u : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L135-L145","name":"Lean.Meta.Closure.visitExpr","line":135,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.visitExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.visitExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">visitExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> â†’ <span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L123-L133","name":"Lean.Meta.Closure.visitLevel","line":123,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.visitLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.visitLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">visitLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a> â†’ <span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\">Lean.Meta.Closure.ClosureM</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L121-L121","name":"Lean.Meta.Closure.ClosureM","line":121,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">ClosureM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Î± : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L119-L119","name":"Lean.Meta.Closure.State.toProcess","line":119,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.toProcess","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.toProcess\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">toProcess</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L118-L118","name":"Lean.Meta.Closure.State.exprFVarArgs","line":118,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.exprFVarArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.exprFVarArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">exprFVarArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L117-L117","name":"Lean.Meta.Closure.State.exprMVarArgs","line":117,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.exprMVarArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.exprMVarArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">exprMVarArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L116-L116","name":"Lean.Meta.Closure.State.nextExprIdx","line":116,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.nextExprIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.nextExprIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">nextExprIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L115-L115","name":"Lean.Meta.Closure.State.newLetDecls","line":115,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.newLetDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.newLetDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">newLetDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L114-L114","name":"Lean.Meta.Closure.State.newLocalDeclsForMVars","line":114,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.newLocalDeclsForMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.newLocalDeclsForMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">newLocalDeclsForMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L113-L113","name":"Lean.Meta.Closure.State.newLocalDecls","line":113,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.newLocalDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.newLocalDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">newLocalDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L112-L112","name":"Lean.Meta.Closure.State.levelArgs","line":112,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.levelArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.levelArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">levelArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L111-L111","name":"Lean.Meta.Closure.State.nextLevelIdx","line":111,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.nextLevelIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.nextLevelIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">nextLevelIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L110-L110","name":"Lean.Meta.Closure.State.levelParams","line":110,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.levelParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.levelParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">levelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L109-L109","name":"Lean.Meta.Closure.State.visitedExpr","line":109,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.visitedExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.visitedExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">visitedExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.ExprStructMap\">Lean.ExprStructMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L108-L108","name":"Lean.Meta.Closure.State.visitedLevel","line":108,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.visitedLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.visitedLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">visitedLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Level.html#Lean.LevelMap\">Lean.LevelMap</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L107-L119","name":"Lean.Meta.Closure.State","line":107,"kind":"structure","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L105-L105","name":"Lean.Meta.Closure.Context.zeta","line":105,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.Context.zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.Context.zeta\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">Context</span>.<span class=\"name\">zeta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.Context\">Lean.Meta.Closure.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L104-L105","name":"Lean.Meta.Closure.Context","line":104,"kind":"structure","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L102-L102","name":"Lean.Meta.Closure.instInhabitedToProcessElement","line":102,"kind":"instance","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.instInhabitedToProcessElement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.instInhabitedToProcessElement\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">instInhabitedToProcessElement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L101-L101","name":"Lean.Meta.Closure.ToProcessElement.newFVarId","line":101,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement.newFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement.newFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">ToProcessElement</span>.<span class=\"name\">newFVarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L100-L100","name":"Lean.Meta.Closure.ToProcessElement.fvarId","line":100,"kind":"def","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement.fvarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement.fvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">ToProcessElement</span>.<span class=\"name\">fvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L99-L102","name":"Lean.Meta.Closure.ToProcessElement","line":99,"kind":"structure","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">ToProcessElement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L1-L1","name":"Lean.Meta.Closure.ToProcessElement.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">ToProcessElement</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newFVarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L1-L1","name":"Lean.Meta.Closure.MkValueTypeClosureResult.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">MkValueTypeClosureResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(levelParams : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(levelArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exprArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult\">Lean.Meta.Closure.MkValueTypeClosureResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L1-L1","name":"Lean.Meta.Closure.Context.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(zeta : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.Context\">Lean.Meta.Closure.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Closure.lean#L1-L1","name":"Lean.Meta.Closure.State.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Closure</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(visitedLevel : <span class=\"fn\"><a href=\"./Lean/Level.html#Lean.LevelMap\">Lean.LevelMap</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(visitedExpr : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.ExprStructMap\">Lean.ExprStructMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(levelParams : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nextLevelIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(levelArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newLocalDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newLocalDeclsForMVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newLetDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nextExprIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exprMVarArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exprFVarArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toProcess : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement\">Lean.Meta.Closure.ToProcessElement</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Closure.html#Lean.Meta.Closure.State\">Lean.Meta.Closure.State</a></div></div>"}]}