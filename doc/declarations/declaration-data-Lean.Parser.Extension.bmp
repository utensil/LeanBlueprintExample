{"name":"Lean.Parser.Extension","instances":[{"typeNames":["Lean.Parser.ParserExtension.OLeanEntry"],"name":"Lean.Parser.ParserExtension.instInhabitedOLeanEntry","className":"Inhabited"},{"typeNames":["Lean.Parser.ParserExtension.Entry"],"name":"Lean.Parser.ParserExtension.instInhabitedEntry","className":"Inhabited"},{"typeNames":["Lean.Parser.ParserExtension.State"],"name":"Lean.Parser.ParserExtension.instInhabitedState","className":"Inhabited"},{"typeNames":["Lean.Parser.Parser","Lean.Parser.ParserAliasValue"],"name":"Lean.Parser.instCoeParserParserAliasValue","className":"Coe"},{"typeNames":["Lean.Parser.Parser","Lean.Parser.ParserAliasValue"],"name":"Lean.Parser.instCoeForAllParserParserAliasValue","className":"Coe"},{"typeNames":["Lean.Parser.Parser","Lean.Parser.ParserAliasValue"],"name":"Lean.Parser.instCoeForAllParserParserAliasValue_1","className":"Coe"},{"typeNames":["Lean.Parser.ParserName"],"name":"Lean.Parser.instReprParserName","className":"Repr"}],"imports":["Init","Lean.Parser.Basic","Lean.Compiler.InitAttr","Lean.ScopedEnvExtension","Lean.DocString"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L684-L685","name":"Lean.Parser.parserOfStack","line":684,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserOfStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserOfStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserOfStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(offset : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prec : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L660-L682","name":"Lean.Parser.parserOfStackFn","line":660,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserOfStackFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserOfStackFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserOfStackFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(offset : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L657-L658","name":"Lean.Parser.resolveParserName","line":657,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.resolveParserName","doc":"Resolve the given parser name and return a list of candidates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.resolveParserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">resolveParserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserName\">Lean.Parser.ParserName</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L653-L654","name":"Lean.Parser.ParserContext.resolveParserName","line":653,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserContext.resolveParserName","doc":"Resolve the given parser name and return a list of candidates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserContext.resolveParserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContext</span>.<span class=\"name\">resolveParserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserName\">Lean.Parser.ParserName</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L631-L636","name":"Lean.Parser.resolveParserNameCore.isParser","line":631,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.resolveParserNameCore.isParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.resolveParserNameCore.isParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">resolveParserNameCore</span>.<span class=\"name\">isParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L627-L650","name":"Lean.Parser.resolveParserNameCore","line":627,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.resolveParserNameCore","doc":"Resolve the given parser name and return a list of candidates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.resolveParserNameCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">resolveParserNameCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(currNamespace : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(openDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">Lean.OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ident : <a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserName\">Lean.Parser.ParserName</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L624-L624","name":"Lean.Parser.instReprParserName","line":624,"kind":"instance","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instReprParserName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instReprParserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instReprParserName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserName\">Lean.Parser.ParserName</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L622-L622","name":"Lean.Parser.ParserName.parser","line":622,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserName.parser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserName.parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserName</span>.<span class=\"name\">parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isDescr : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserName\">Lean.Parser.ParserName</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L621-L621","name":"Lean.Parser.ParserName.category","line":621,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserName.category","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserName.category\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserName</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cat : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserName\">Lean.Parser.ParserName</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L620-L624","name":"Lean.Parser.ParserName","line":620,"kind":"inductive","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L618-L618","name":"Lean.Parser.withOpenDecl","line":618,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L611-L616","name":"Lean.Parser.withOpenDeclFn","line":611,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFn","doc":"If the parsing stack is of the form `#[.., openDecl]`, we process the open declaration, and execute `p` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenDeclFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L608-L608","name":"Lean.Parser.withOpen","line":608,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpen\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L597-L605","name":"Lean.Parser.withOpenFn","line":597,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenFn","doc":"If the parsing stack is of the form `#[.., openCommand]`, we process the open command, and execute `p` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L582-L594","name":"Lean.Parser.withOpenDeclFnCore","line":582,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFnCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFnCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenDeclFnCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(openDeclStx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L568-L569","name":"Lean.Parser.commandParser","line":568,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.commandParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.commandParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">commandParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rbp : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L552-L555","name":"Lean.Parser.registerParserCategory","line":552,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerParserCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.default\">Lean.Parser.LeadingIdentBehavior.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Parser/Extension.html#_auto._@.Lean.Parser.Extension._hyg.7079\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L543-L544","name":"Lean.Parser.registerBuiltinDynamicParserAttribute","line":543,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinDynamicParserAttribute","doc":"A builtin parser attribute that can be extended by users. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinDynamicParserAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerBuiltinDynamicParserAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(attrName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Parser/Extension.html#_auto._@.Lean.Parser.Extension._hyg.6942\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L535-L540","name":"Lean.Parser.mkParserAttributeImpl","line":535,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserAttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(attrName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Parser/Extension.html#_auto._@.Lean.Parser.Extension._hyg.6870\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L499-L511","name":"Lean.Parser.registerBuiltinParserAttribute","line":499,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinParserAttribute","doc":"The parsing tables for builtin parsers are \"stored\" in the extracted source code.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinParserAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerBuiltinParserAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(attrName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.default\">Lean.Parser.LeadingIdentBehavior.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L471-L477","name":"Lean.Parser.getParserPriority","line":471,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getParserPriority","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getParserPriority\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getParserPriority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L468-L469","name":"Lean.Parser.declareTrailingBuiltinParser","line":468,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareTrailingBuiltinParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.declareTrailingBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">declareTrailingBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L465-L466","name":"Lean.Parser.declareLeadingBuiltinParser","line":465,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareLeadingBuiltinParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.declareLeadingBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">declareLeadingBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L461-L463","name":"Lean.Parser.declareBuiltinParser","line":461,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareBuiltinParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.declareBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">declareBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(addFnName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L450-L459","name":"Lean.Parser.runParserCategory","line":450,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.runParserCategory","doc":"convenience function for testing "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.runParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">runParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fileName : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quot&ltinput&gt&quot</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L446-L447","name":"Lean.Parser.mkParserState","line":446,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L440-L444","name":"Lean.Parser.mkInputContext","line":440,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkInputContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkInputContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fileName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L437-L438","name":"Lean.Parser.getTokenTable","line":437,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getTokenTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getTokenTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getTokenTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L433-L435","name":"Lean.Parser.getSyntaxNodeKinds","line":433,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxNodeKinds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxNodeKinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getSyntaxNodeKinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L427-L431","name":"Lean.Parser.isValidSyntaxNodeKind","line":427,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isValidSyntaxNodeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.isValidSyntaxNodeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isValidSyntaxNodeKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L424-L425","name":"Lean.Parser.addSyntaxNodeKind","line":424,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addSyntaxNodeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addSyntaxNodeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addSyntaxNodeKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L418-L422","name":"Lean.Parser.addToken","line":418,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addToken","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addToken\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addToken</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tk : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L407-L413","name":"Lean.Parser.categoryParserFnImpl","line":407,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.categoryParserFnImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.categoryParserFnImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">categoryParserFnImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L400-L401","name":"Lean.Parser.mkCategoryAntiquotParser","line":400,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkCategoryAntiquotParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkCategoryAntiquotParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkCategoryAntiquotParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L397-L398","name":"Lean.Parser.addBuiltinTrailingParser","line":397,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinTrailingParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinTrailingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addBuiltinTrailingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\">Lean.Parser.TrailingParser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L394-L395","name":"Lean.Parser.addBuiltinLeadingParser","line":394,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinLeadingParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinLeadingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addBuiltinLeadingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L386-L392","name":"Lean.Parser.addBuiltinParser","line":386,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(leading : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L380-L384","name":"Lean.Parser.evalInsideQuot","line":380,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalInsideQuot","doc":"Run `declName` if possible and inside a quotation, or else `p`. The `ParserInfo` will always be taken from `p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.evalInsideQuot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">evalInsideQuot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L373-L377","name":"Lean.Parser.internal.parseQuotWithCurrentStage","line":373,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.internal.parseQuotWithCurrentStage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.internal.parseQuotWithCurrentStage\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">internal</span>.<span class=\"name\">parseQuotWithCurrentStage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L371-L371","name":"Lean.Parser.evalParserConst","line":371,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalParserConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.evalParserConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">evalParserConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L362-L368","name":"Lean.Parser.evalParserConstUnsafe","line":362,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalParserConstUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.evalParserConstUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">evalParserConstUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L357-L360","name":"Lean.Parser.leadingIdentBehavior","line":357,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.leadingIdentBehavior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.leadingIdentBehavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">leadingIdentBehavior</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L351-L355","name":"Lean.Parser.addParserCategory","line":351,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParserCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L348-L349","name":"Lean.Parser.isParserCategory","line":348,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isParserCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.isParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L340-L346","name":"Lean.Parser.parserExtension","line":340,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension\">Lean.Parser.ParserExtension</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L310-L312","name":"Lean.Parser.runParserAttributeHooks","line":310,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.runParserAttributeHooks","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.runParserAttributeHooks\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">runParserAttributeHooks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(builtin : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L307-L308","name":"Lean.Parser.registerParserAttributeHook","line":307,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerParserAttributeHook","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerParserAttributeHook\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerParserAttributeHook</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(hook : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">Lean.Parser.ParserAttributeHook</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L305-L305","name":"Lean.Parser.parserAttributeHooks","line":305,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAttributeHooks","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAttributeHooks\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAttributeHooks</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">Lean.Parser.ParserAttributeHook</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L303-L303","name":"Lean.Parser.ParserAttributeHook.postAdd","line":303,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.postAdd","doc":"Called after a parser attribute is applied to a declaration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.postAdd\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAttributeHook</span>.<span class=\"name\">postAdd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">Lean.Parser.ParserAttributeHook</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(builtin : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L301-L303","name":"Lean.Parser.ParserAttributeHook","line":301,"kind":"structure","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAttributeHook</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L298-L299","name":"Lean.Parser.mkParserOfConstant","line":298,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstant\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserOfConstant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(categories : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L278-L295","name":"Lean.Parser.compileParserDescr.visit","line":278,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">compileParserDescr</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(categories : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L277-L296","name":"Lean.Parser.compileParserDescr","line":277,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">compileParserDescr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(categories : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L275-L275","name":"Lean.Parser.mkParserOfConstantAux","line":275,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserOfConstantAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(compileParserDescr : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L251-L272","name":"Lean.Parser.mkParserOfConstantUnsafe","line":251,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserOfConstantUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(compileParserDescr : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L248-L249","name":"Lean.Parser.ensureConstantParserAlias","line":248,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureConstantParserAlias","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ensureConstantParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ensureConstantParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L245-L246","name":"Lean.Parser.ensureBinaryParserAlias","line":245,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureBinaryParserAlias","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ensureBinaryParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ensureBinaryParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L242-L243","name":"Lean.Parser.ensureUnaryParserAlias","line":242,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureUnaryParserAlias","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ensureUnaryParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ensureUnaryParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L239-L240","name":"Lean.Parser.getSyntaxKindOfParserAlias?","line":239,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxKindOfParserAlias?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxKindOfParserAlias?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getSyntaxKindOfParserAlias?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L234-L237","name":"Lean.Parser.isParserAlias","line":234,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isParserAlias","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.isParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L232-L232","name":"Lean.Parser.instCoeForAllParserParserAliasValue_1","line":232,"kind":"instance","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeForAllParserParserAliasValue_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instCoeForAllParserParserAliasValue_1\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeForAllParserParserAliasValue_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span>) <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">Lean.Parser.ParserAliasValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L231-L231","name":"Lean.Parser.instCoeForAllParserParserAliasValue","line":231,"kind":"instance","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeForAllParserParserAliasValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instCoeForAllParserParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeForAllParserParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span>) <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">Lean.Parser.ParserAliasValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L230-L230","name":"Lean.Parser.instCoeParserParserAliasValue","line":230,"kind":"instance","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeParserParserAliasValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instCoeParserParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeParserParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">Lean.Parser.ParserAliasValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L224-L228","name":"Lean.Parser.registerAlias","line":224,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerAlias","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">Lean.Parser.ParserAliasValue</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind? : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a></span>) <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(info : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">Lean.Parser.ParserAliasInfo</a>\n  <span class=\"fn\">{ <span class=\"fn\">declName</span> := <a href=\"./Init/Prelude.html#Lean.Name.anonymous\">Lean.Name.anonymous</a>, <span class=\"fn\">stackSz?</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">autoGroupArgs</span> := <span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.isSome\">Option.isSome</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">1</span></span>)</span> }</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L220-L221","name":"Lean.Parser.getParserAliasInfo","line":220,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getParserAliasInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getParserAliasInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getParserAliasInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">Lean.Parser.ParserAliasInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L218-L218","name":"Lean.Parser.parserAliases2infoRef","line":218,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAliases2infoRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAliases2infoRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAliases2infoRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">Lean.Parser.ParserAliasInfo</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L217-L217","name":"Lean.Parser.parserAlias2kindRef","line":217,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAlias2kindRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAlias2kindRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAlias2kindRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L216-L216","name":"Lean.Parser.parserAliasesRef","line":216,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAliasesRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAliasesRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAliasesRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">Lean.Parser.ParserAliasValue</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L214-L214","name":"Lean.Parser.ParserAliasInfo.autoGroupArgs","line":214,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.autoGroupArgs","doc":"Whether arguments should be wrapped in `group(·)` if they do not produce exactly one syntax node. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.autoGroupArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">autoGroupArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">Lean.Parser.ParserAliasInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L212-L212","name":"Lean.Parser.ParserAliasInfo.stackSz?","line":212,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.stackSz?","doc":"Number of syntax nodes produced by this parser. `none` means \"sum of input sizes\". "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.stackSz?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">stackSz?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">Lean.Parser.ParserAliasInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L210-L210","name":"Lean.Parser.ParserAliasInfo.declName","line":210,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.declName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">Lean.Parser.ParserAliasInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L209-L214","name":"Lean.Parser.ParserAliasInfo","line":209,"kind":"structure","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L207-L207","name":"Lean.Parser.ParserAliasValue","line":207,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L201-L205","name":"Lean.Parser.getBinaryAlias","line":201,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getBinaryAlias","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getBinaryAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getBinaryAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mapRef : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">Lean.Parser.AliasTable</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L195-L199","name":"Lean.Parser.getUnaryAlias","line":195,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getUnaryAlias","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getUnaryAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getUnaryAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mapRef : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">Lean.Parser.AliasTable</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L188-L193","name":"Lean.Parser.getConstAlias","line":188,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getConstAlias","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getConstAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getConstAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mapRef : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">Lean.Parser.AliasTable</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L185-L186","name":"Lean.Parser.getAlias","line":185,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getAlias","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mapRef : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">Lean.Parser.AliasTable</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">Lean.Parser.AliasValue</a> <span class=\"fn\">α</span></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L179-L183","name":"Lean.Parser.registerAliasCore","line":179,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerAliasCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerAliasCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerAliasCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mapRef : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">Lean.Parser.AliasTable</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(aliasName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">Lean.Parser.AliasValue</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L177-L177","name":"Lean.Parser.AliasTable","line":177,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L175-L175","name":"Lean.Parser.AliasValue.binary","line":175,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.binary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.binary\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span>.<span class=\"name\">binary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">Lean.Parser.AliasValue</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L174-L174","name":"Lean.Parser.AliasValue.unary","line":174,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.unary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.unary\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span>.<span class=\"name\">unary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">Lean.Parser.AliasValue</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L173-L173","name":"Lean.Parser.AliasValue.const","line":173,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.const\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">Lean.Parser.AliasValue</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L172-L175","name":"Lean.Parser.AliasValue","line":172,"kind":"inductive","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue","doc":"Parser aliases for making `ParserDescr` extensible "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L154-L169","name":"Lean.Parser.ParserExtension.addEntryImpl","line":154,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.addEntryImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.addEntryImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">addEntryImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">Lean.Parser.ParserExtension.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Lean.Parser.ParserExtension.Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">Lean.Parser.ParserExtension.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L144-L146","name":"Lean.Parser.addParserTokens","line":144,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParserTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addParserTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addParserTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tokenTable : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(info : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L138-L142","name":"Lean.Parser.addParser","line":138,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(categories : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(leading : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L130-L136","name":"Lean.Parser.addTrailingParser","line":130,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addTrailingParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addTrailingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addTrailingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(categories : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\">Lean.Parser.TrailingParser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L102-L118","name":"Lean.Parser.addLeadingParser","line":102,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addLeadingParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addLeadingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addLeadingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(categories : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L99-L100","name":"Lean.Parser.getCategory","line":99,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(categories : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">Lean.Parser.ParserCategory</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L96-L97","name":"Lean.Parser.throwUnknownParserCategory","line":96,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.throwUnknownParserCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.throwUnknownParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">throwUnknownParserCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L82-L82","name":"Lean.Parser.ParserExtension","line":82,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L77-L77","name":"Lean.Parser.ParserExtension.instInhabitedState","line":77,"kind":"instance","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">Lean.Parser.ParserExtension.State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L76-L76","name":"Lean.Parser.ParserExtension.State.categories","line":76,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.categories","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.categories\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">categories</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">Lean.Parser.ParserExtension.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L75-L75","name":"Lean.Parser.ParserExtension.State.kinds","line":75,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.kinds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.kinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">kinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">Lean.Parser.ParserExtension.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L74-L74","name":"Lean.Parser.ParserExtension.State.tokens","line":74,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.tokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.tokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">tokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">Lean.Parser.ParserExtension.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L73-L77","name":"Lean.Parser.ParserExtension.State","line":73,"kind":"structure","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L67-L71","name":"Lean.Parser.ParserExtension.Entry.toOLeanEntry","line":67,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.toOLeanEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.toOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">toOLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Lean.Parser.ParserExtension.Entry</a> → <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">Lean.Parser.ParserExtension.OLeanEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L65-L65","name":"Lean.Parser.ParserExtension.instInhabitedEntry","line":65,"kind":"instance","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Lean.Parser.ParserExtension.Entry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L64-L64","name":"Lean.Parser.ParserExtension.Entry.parser","line":64,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.parser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(leading : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Lean.Parser.ParserExtension.Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L63-L63","name":"Lean.Parser.ParserExtension.Entry.category","line":63,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.category","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.category\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Lean.Parser.ParserExtension.Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L62-L62","name":"Lean.Parser.ParserExtension.Entry.kind","line":62,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.kind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Lean.Parser.ParserExtension.Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L61-L61","name":"Lean.Parser.ParserExtension.Entry.token","line":61,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.token","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">token</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Lean.Parser.ParserExtension.Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L60-L65","name":"Lean.Parser.ParserExtension.Entry","line":60,"kind":"inductive","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L58-L58","name":"Lean.Parser.ParserExtension.instInhabitedOLeanEntry","line":58,"kind":"instance","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedOLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">Lean.Parser.ParserExtension.OLeanEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L57-L57","name":"Lean.Parser.ParserExtension.OLeanEntry.parser","line":57,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.parser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">Lean.Parser.ParserExtension.OLeanEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L56-L56","name":"Lean.Parser.ParserExtension.OLeanEntry.category","line":56,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.category","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.category\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">Lean.Parser.ParserExtension.OLeanEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L55-L55","name":"Lean.Parser.ParserExtension.OLeanEntry.kind","line":55,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.kind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">Lean.Parser.ParserExtension.OLeanEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L54-L54","name":"Lean.Parser.ParserExtension.OLeanEntry.token","line":54,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.token","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">token</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">Lean.Parser.ParserExtension.OLeanEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L53-L58","name":"Lean.Parser.ParserExtension.OLeanEntry","line":53,"kind":"inductive","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L33-L33","name":"Lean.Parser.builtinParserCategoriesRef","line":33,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinParserCategoriesRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.builtinParserCategoriesRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">builtinParserCategoriesRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L21-L22","name":"Lean.Parser.registerBuiltinNodeKind","line":21,"kind":"def","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinNodeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinNodeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerBuiltinNodeKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L19-L19","name":"Lean.Parser.builtinSyntaxNodeKindSetRef","line":19,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinSyntaxNodeKindSetRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.builtinSyntaxNodeKindSetRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">builtinSyntaxNodeKindSetRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L16-L16","name":"Lean.Parser.builtinTokenTable","line":16,"kind":"opaque","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinTokenTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.builtinTokenTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">builtinTokenTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L1-L1","name":"Lean.Parser.ParserAliasInfo.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stackSz? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(autoGroupArgs : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">Lean.Parser.ParserAliasInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L1-L1","name":"Lean.Parser.ParserExtension.State.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tokens : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kinds : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(categories : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">Lean.Parser.ParserCategories</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">Lean.Parser.ParserExtension.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Parser/Extension.lean#L1-L1","name":"Lean.Parser.ParserAttributeHook.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAttributeHook</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(postAdd : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">Lean.Parser.ParserAttributeHook</a></div></div>"}]}