{"name":"Lake.Config.LeanConfig","instances":[{"typeNames":["Lake.BuildType"],"name":"Lake.instInhabitedBuildType","className":"Inhabited"},{"typeNames":["Lake.BuildType"],"name":"Lake.instReprBuildType","className":"Repr"},{"typeNames":["Eq","Lake.BuildType"],"name":"Lake.instDecidableEqBuildType","className":"Decidable"},{"typeNames":["Lake.BuildType"],"name":"Lake.instOrdBuildType","className":"Ord"},{"typeNames":["Lake.BuildType"],"name":"Lake.instLTBuildType","className":"LT"},{"typeNames":["Lake.BuildType"],"name":"Lake.instLEBuildType","className":"LE"},{"typeNames":["Lake.BuildType"],"name":"Lake.instMinBuildType","className":"Min"},{"typeNames":["Lake.BuildType"],"name":"Lake.instMaxBuildType","className":"Max"},{"typeNames":["Lake.LeanConfig"],"name":"Lake.instInhabitedLeanConfig","className":"Inhabited"},{"typeNames":["Lake.LeanConfig"],"name":"Lake.instReprLeanConfig","className":"Repr"}],"imports":["Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L103-L103","name":"Lake.instReprLeanConfig","line":103,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprLeanConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprLeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprLeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L103-L103","name":"Lake.instInhabitedLeanConfig","line":103,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instInhabitedLeanConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instInhabitedLeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedLeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L102-L102","name":"Lake.LeanConfig.weakLinkArgs","line":102,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs","doc":"Additional arguments to pass to `leanc` when linking (e.g., for shared\nlibraries or binary executables). These will come *after* the paths of\nexternal libraries.\n\nUnlike `moreLinkArgs`, these arguments do not affect the trace\nof the build result, so they can be changed without triggering a rebuild.\nThey come *before* `moreLinkArgs`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLinkArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L92-L92","name":"Lake.LeanConfig.moreLinkArgs","line":92,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs","doc":"Additional arguments to pass to `leanc` when linking (e.g., for shared\nlibraries or binary executables). These will come *after* the paths of\nexternal libraries.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L86-L86","name":"Lake.LeanConfig.weakLeancArgs","line":86,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs","doc":"Additional arguments to pass to `leanc`\nwhen compiling a module's C source files generated by `lean`.\n\nUnlike `moreLeancArgs`, these arguments do not affect the trace\nof the build result, so they can be changed without triggering a rebuild.\nThey come *before* `moreLeancArgs`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeancArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L77-L77","name":"Lake.LeanConfig.moreLeancArgs","line":77,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs","doc":"Additional arguments to pass to `leanc`\nwhen compiling a module's C source files generated by `lean`.\n\nLake already passes some flags based on the `buildType`,\nbut you can change this by, for example, adding `-O0` and `-UNDEBUG`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeancArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L69-L69","name":"Lake.LeanConfig.weakLeanArgs","line":69,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs","doc":"Additional arguments to pass to `lean`\nwhen compiling a module's Lean source files.\n\nUnlike `moreLeanArgs`, these arguments do not affect the trace\nof the build result, so they can be changed without triggering a rebuild.\nThey come *before* `moreLeanArgs`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeanArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L60-L60","name":"Lake.LeanConfig.moreLeanArgs","line":60,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs","doc":"Additional arguments to pass to `lean`\nwhen compiling a module's Lean source files.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeanArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L55-L55","name":"Lake.LeanConfig.buildType","line":55,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType","doc":"The mode in which the modules should be built (e.g., `debug`, `release`).\nDefaults to `release`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">buildType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L50-L103","name":"Lake.LeanConfig","line":50,"kind":"structure","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig","doc":"Configuration options common to targets that build modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L43-L47","name":"Lake.BuildType.leancArgs","line":43,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.leancArgs","doc":"The arguments to pass to `leanc` based on the build type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.leancArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">leancArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L40-L40","name":"Lake.instMaxBuildType","line":40,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instMaxBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instMaxBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instMaxBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L39-L39","name":"Lake.instMinBuildType","line":39,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instMinBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instMinBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instMinBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L38-L38","name":"Lake.instLEBuildType","line":38,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instLEBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instLEBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instLEBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L37-L37","name":"Lake.instLTBuildType","line":37,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instLTBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instLTBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instLTBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L35-L35","name":"Lake.instOrdBuildType","line":35,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instOrdBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instOrdBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instOrdBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L35-L35","name":"Lake.instDecidableEqBuildType","line":35,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instDecidableEqBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L35-L35","name":"Lake.instReprBuildType","line":35,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L35-L35","name":"Lake.instInhabitedBuildType","line":35,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instInhabitedBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instInhabitedBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L30-L34","name":"Lake.BuildType.release","line":30,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.release","doc":"High optimization level and no debug info, code, or asserts\n(e.g., passes `-O3 -DNDEBUG` when compiling C code).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.release\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">release</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L25-L29","name":"Lake.BuildType.minSizeRel","line":25,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.minSizeRel","doc":"Same as `release` but optimizing for size rather than speed\n(e.g., passes `-Os -DNDEBUG` when compiling C code).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.minSizeRel\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">minSizeRel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L20-L24","name":"Lake.BuildType.relWithDebInfo","line":20,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.relWithDebInfo","doc":"Optimized, *with* debug info, but no debug code or asserts\n(e.g., passes `-O3 -g -DNDEBUG` when compiling C code).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.relWithDebInfo\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">relWithDebInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L13-L19","name":"Lake.BuildType.debug","line":13,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.debug","doc":"Debug optimization, asserts enabled, custom debug code enabled, and\ndebug info included in executable (so you can step through the code with a\ndebugger and have address to source-file:line-number translation).\nFor example, passes `-Og -g` when compiling C code.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.debug\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">debug</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L12-L35","name":"Lake.BuildType","line":12,"kind":"inductive","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType","doc":"Lake equivalent of CMake's\n[`CMAKE_BUILD_TYPE`](https://stackoverflow.com/a/59314670).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Config/LeanConfig.lean#L1-L1","name":"Lake.LeanConfig.mk","line":1,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(buildType : <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">Lake.BuildType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moreLeanArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weakLeanArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moreLeancArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weakLeancArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moreLinkArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weakLinkArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">Lake.LeanConfig</a></div></div>"}]}