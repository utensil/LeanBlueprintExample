{"name":"Lean.Elab.DeclModifiers","instances":[{"typeNames":["Lean.Elab.Visibility"],"name":"Lean.Elab.instInhabitedVisibility","className":"Inhabited"},{"typeNames":["Lean.Elab.Visibility"],"name":"Lean.Elab.instToStringVisibility","className":"ToString"},{"typeNames":["Lean.Elab.RecKind"],"name":"Lean.Elab.instInhabitedRecKind","className":"Inhabited"},{"typeNames":["Lean.Elab.Modifiers"],"name":"Lean.Elab.instInhabitedModifiers","className":"Inhabited"},{"typeNames":["Lean.Elab.Modifiers"],"name":"Lean.Elab.instToFormatModifiers","className":"Std.ToFormat"},{"typeNames":["Lean.Elab.Modifiers"],"name":"Lean.Elab.instToStringModifiers","className":"ToString"}],"imports":["Init","Lean.Structure","Lean.Elab.Attributes"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L237-L254","name":"Lean.Elab.expandDeclId","line":237,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclId","doc":"Given a declaration identifier (e.g., `ident (\".{\" ident,+ \"}\")?`) that may contain explicit universe parameters\n- Ensure the new universe parameters do not shadow universe parameters declared using `universe` command.\n- Create the fully qualified named for the declaration using the current namespace, and given `modifiers`\n- Create a short version for recursively referring to the declaration. Recall that the `protected` modifier affects the generation of the short name.\n\nThe result also contains the universe parameters provided using `universe` command, and the `.{...}` notation.\n\nThis commands also stores the doc string stored in `modifiers`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">expandDeclId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree\">Lean.Elab.MonadInfoTree</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(currNamespace : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(currLevelNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declId : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult\">Lean.Elab.ExpandDeclIdResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L225-L225","name":"Lean.Elab.ExpandDeclIdResult.levelNames","line":225,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.levelNames","doc":"Universe parameter names provided using the `universe` command and `.{...}` notation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.levelNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ExpandDeclIdResult</span>.<span class=\"name\">levelNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult\">Lean.Elab.ExpandDeclIdResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L223-L223","name":"Lean.Elab.ExpandDeclIdResult.declName","line":223,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.declName","doc":"Fully qualified name that will be used to name the declaration in the kernel. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ExpandDeclIdResult</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult\">Lean.Elab.ExpandDeclIdResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L221-L221","name":"Lean.Elab.ExpandDeclIdResult.shortName","line":221,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.shortName","doc":"Short name for recursively referring to the declaration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.shortName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ExpandDeclIdResult</span>.<span class=\"name\">shortName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult\">Lean.Elab.ExpandDeclIdResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L219-L225","name":"Lean.Elab.ExpandDeclIdResult","line":219,"kind":"structure","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult","doc":"`expandDeclId` resulting type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ExpandDeclIdResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L210-L216","name":"Lean.Elab.expandDeclIdCore","line":210,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclIdCore","doc":"`declId` is of the form\n```\nleading_parser ident >> optional (\".{\" >> sepBy1 ident \", \" >> \"}\")\n```\nbut we also accept a single identifier to users to make macro writing more convenient .\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclIdCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">expandDeclIdCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declId : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L178-L201","name":"Lean.Elab.mkDeclName","line":178,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.mkDeclName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.mkDeclName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">mkDeclName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree\">Lean.Elab.MonadInfoTree</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(currNamespace : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(shortName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L168-L176","name":"Lean.Elab.checkIfShadowingStructureField","line":168,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkIfShadowingStructureField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkIfShadowingStructureField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">checkIfShadowingStructureField</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L154-L166","name":"Lean.Elab.applyVisibility","line":154,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.applyVisibility","doc":"Ensure the function has not already been declared, and apply the given visibility setting to `declName`.\nIf `private`, return the updated name using our internal encoding for private names.\nIf `protected`, register `declName` as protected in the environment.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.applyVisibility\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">applyVisibility</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree\">Lean.Elab.MonadInfoTree</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(visibility : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility\">Lean.Elab.Visibility</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L117-L147","name":"Lean.Elab.elabModifiers","line":117,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.elabModifiers","doc":"Elaborate declaration modifiers (i.e., attributes, `partial`, `private`, `proctected`, `unsafe`, `noncomputable`, doc string)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.elabModifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">elabModifiers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ResolveName.html#Lean.MonadResolveName\">Lean.MonadResolveName</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Elab/Util.html#Lean.Elab.MonadMacroAdapter\">Lean.Elab.MonadMacroAdapter</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadRecDepth\">Lean.MonadRecDepth</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Util/Trace.html#Lean.MonadTrace\">Lean.MonadTrace</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.MonadOptions\">Lean.MonadOptions</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.AddMessageContext\">Lean.AddMessageContext</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Log.html#Lean.MonadLog\">Lean.MonadLog</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree\">Lean.Elab.MonadInfoTree</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L105-L110","name":"Lean.Elab.expandOptDocComment?","line":105,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandOptDocComment?","doc":"Retrieve doc string from `stx` of the form `(docComment)?`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandOptDocComment?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">expandOptDocComment?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(optDocComment : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L100-L100","name":"Lean.Elab.instToStringModifiers","line":100,"kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringModifiers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringModifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instToStringModifiers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L85-L98","name":"Lean.Elab.instToFormatModifiers","line":85,"kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToFormatModifiers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToFormatModifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instToFormatModifiers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L82-L83","name":"Lean.Elab.Modifiers.addAttribute","line":82,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.addAttribute","doc":"Store `attr` in `modifiers` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.addAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">addAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attr : <a href=\"./Lean/Elab/Attributes.html#Lean.Elab.Attribute\">Lean.Elab.Attribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L77-L79","name":"Lean.Elab.Modifiers.isNonrec","line":77,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isNonrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isNonrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">isNonrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L73-L75","name":"Lean.Elab.Modifiers.isPartial","line":73,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPartial\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">isPartial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L69-L71","name":"Lean.Elab.Modifiers.isProtected","line":69,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isProtected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isProtected\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">isProtected</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L65-L67","name":"Lean.Elab.Modifiers.isPrivate","line":65,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPrivate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPrivate\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">isPrivate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L63-L63","name":"Lean.Elab.instInhabitedModifiers","line":63,"kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedModifiers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedModifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedModifiers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L62-L62","name":"Lean.Elab.Modifiers.attrs","line":62,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.attrs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.attrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">attrs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Attributes.html#Lean.Elab.Attribute\">Lean.Elab.Attribute</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L61-L61","name":"Lean.Elab.Modifiers.isUnsafe","line":61,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">isUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L60-L60","name":"Lean.Elab.Modifiers.recKind","line":60,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.recKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.recKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">recKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind\">Lean.Elab.RecKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L59-L59","name":"Lean.Elab.Modifiers.isNoncomputable","line":59,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isNoncomputable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isNoncomputable\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">isNoncomputable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L58-L58","name":"Lean.Elab.Modifiers.visibility","line":58,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.visibility","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.visibility\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">visibility</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility\">Lean.Elab.Visibility</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L57-L57","name":"Lean.Elab.Modifiers.docString?","line":57,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.docString?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.docString?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">docString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L56-L63","name":"Lean.Elab.Modifiers","line":56,"kind":"structure","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers","doc":"Flags and data added to declarations (eg docstrings, attributes, `private`, `unsafe`, `partial`, ...). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L53-L53","name":"Lean.Elab.instInhabitedRecKind","line":53,"kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedRecKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedRecKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedRecKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind\">Lean.Elab.RecKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L52-L52","name":"Lean.Elab.RecKind.default","line":52,"kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind.default","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">RecKind</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind\">Lean.Elab.RecKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L52-L52","name":"Lean.Elab.RecKind.nonrec","line":52,"kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind.nonrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind.nonrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">RecKind</span>.<span class=\"name\">nonrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind\">Lean.Elab.RecKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L52-L52","name":"Lean.Elab.RecKind.partial","line":52,"kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind.partial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind.partial\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">RecKind</span>.<span class=\"name\">partial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind\">Lean.Elab.RecKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L51-L53","name":"Lean.Elab.RecKind","line":51,"kind":"inductive","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind","doc":"Whether a declaration is default, partial or nonrec. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">RecKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L44-L48","name":"Lean.Elab.instToStringVisibility","line":44,"kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringVisibility","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringVisibility\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instToStringVisibility</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility\">Lean.Elab.Visibility</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L42-L42","name":"Lean.Elab.instInhabitedVisibility","line":42,"kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedVisibility","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedVisibility\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedVisibility</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility\">Lean.Elab.Visibility</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L41-L41","name":"Lean.Elab.Visibility.private","line":41,"kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility.private","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility.private\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">private</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility\">Lean.Elab.Visibility</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L41-L41","name":"Lean.Elab.Visibility.protected","line":41,"kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility.protected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility.protected\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">protected</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility\">Lean.Elab.Visibility</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L41-L41","name":"Lean.Elab.Visibility.regular","line":41,"kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility.regular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility.regular\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Visibility</span>.<span class=\"name\">regular</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility\">Lean.Elab.Visibility</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L40-L42","name":"Lean.Elab.Visibility","line":40,"kind":"inductive","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility","doc":"Declaration visibility modifier. That is, whether a declaration is regular, protected or private. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Visibility</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L16-L37","name":"Lean.Elab.checkNotAlreadyDeclared","line":16,"kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkNotAlreadyDeclared","doc":"Ensure the environment does not contain a declaration with name `declName`.\nRecall that a private declaration cannot shadow a non-private one and vice-versa, although\nthey internally have different names.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkNotAlreadyDeclared\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">checkNotAlreadyDeclared</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree\">Lean.Elab.MonadInfoTree</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L1-L1","name":"Lean.Elab.ExpandDeclIdResult.mk","line":1,"kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ExpandDeclIdResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(shortName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(levelNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult\">Lean.Elab.ExpandDeclIdResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/DeclModifiers.lean#L1-L1","name":"Lean.Elab.Modifiers.mk","line":1,"kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Modifiers</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(docString? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(visibility : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility\">Lean.Elab.Visibility</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isNoncomputable : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(recKind : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind\">Lean.Elab.RecKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isUnsafe : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Attributes.html#Lean.Elab.Attribute\">Lean.Elab.Attribute</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a></div></div>"}]}