{"name":"Lean.ParserCompiler.Attribute","instances":[{"typeNames":["Lean.ParserCompiler.CombinatorAttribute"],"name":"Lean.ParserCompiler.instInhabitedCombinatorAttribute","className":"Inhabited"}],"imports":["Init","Lean.Attributes","Lean.Compiler.InitAttr","Lean.ToExpr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ParserCompiler/Attribute.lean#L47-L50","name":"Lean.ParserCompiler.CombinatorAttribute.runDeclFor","line":47,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.runDeclFor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.runDeclFor\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">runDeclFor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">Lean.ParserCompiler.CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserDecl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ParserCompiler/Attribute.lean#L44-L45","name":"Lean.ParserCompiler.CombinatorAttribute.setDeclFor","line":44,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.setDeclFor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.setDeclFor\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">setDeclFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">Lean.ParserCompiler.CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserDecl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ParserCompiler/Attribute.lean#L41-L42","name":"Lean.ParserCompiler.CombinatorAttribute.getDeclFor?","line":41,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.getDeclFor?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.getDeclFor?\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">getDeclFor?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">Lean.ParserCompiler.CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserDecl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ParserCompiler/Attribute.lean#L20-L37","name":"Lean.ParserCompiler.registerCombinatorAttribute","line":20,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.registerCombinatorAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.registerCombinatorAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">registerCombinatorAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(descr : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/ParserCompiler/Attribute.html#_auto._@.Lean.ParserCompiler.Attribute._hyg.113\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">Lean.ParserCompiler.CombinatorAttribute</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ParserCompiler/Attribute.lean#L17-L17","name":"Lean.ParserCompiler.instInhabitedCombinatorAttribute","line":17,"kind":"instance","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.instInhabitedCombinatorAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.instInhabitedCombinatorAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">instInhabitedCombinatorAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">Lean.ParserCompiler.CombinatorAttribute</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ParserCompiler/Attribute.lean#L16-L16","name":"Lean.ParserCompiler.CombinatorAttribute.ext","line":16,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">Lean.ParserCompiler.CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>) (<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ParserCompiler/Attribute.lean#L15-L15","name":"Lean.ParserCompiler.CombinatorAttribute.impl","line":15,"kind":"def","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.impl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.impl\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">impl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">Lean.ParserCompiler.CombinatorAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ParserCompiler/Attribute.lean#L14-L17","name":"Lean.ParserCompiler.CombinatorAttribute","line":14,"kind":"structure","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ParserCompiler/Attribute.lean#L1-L1","name":"Lean.ParserCompiler.CombinatorAttribute.mk","line":1,"kind":"ctor","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ParserCompiler</span>.<span class=\"name\">CombinatorAttribute</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(impl : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>) (<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute\">Lean.ParserCompiler.CombinatorAttribute</a></div></div>"}]}