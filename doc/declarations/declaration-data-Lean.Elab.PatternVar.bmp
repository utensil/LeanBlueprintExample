{"name":"Lean.Elab.PatternVar","instances":[{"typeNames":["Lean.Elab.Term.CollectPatternVars.State"],"name":"Lean.Elab.Term.CollectPatternVars.instInhabitedState","className":"Inhabited"},{"typeNames":["Lean.Elab.Term.CollectPatternVars.Context"],"name":"Lean.Elab.Term.CollectPatternVars.instInhabitedContext","className":"Inhabited"}],"imports":["Init","Lean.Meta.Match.MatchPatternAttr","Lean.Elab.Arg","Lean.Elab.MatchAltView"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L349-L350","name":"Lean.Elab.Term.getPatternVarNames","line":349,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVarNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVarNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">getPatternVarNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pvars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">Lean.Elab.Term.PatternVar</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L342-L347","name":"Lean.Elab.Term.getPatternsVars","line":342,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternsVars","doc":"Return the pattern variables occurring in the given patterns.\nThis method is used in the `match` and `do` notation elaborators\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternsVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">getPatternsVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(patterns : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">Lean.Elab.Term.PatternVar</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L333-L336","name":"Lean.Elab.Term.getPatternVars","line":333,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVars","doc":"Return the pattern variables in the given pattern.\nRemark: this method is not used by the main `match` elaborator, but in the precheck hook and other macros (e.g., at `Do.lean`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">getPatternVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(patternStx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">Lean.Elab.Term.PatternVar</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L325-L327","name":"Lean.Elab.Term.collectPatternVars","line":325,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.collectPatternVars","doc":"Collect pattern variables occurring in the `match`-alternative object views.\nIt also returns the updated views.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.collectPatternVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">collectPatternVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(alt : <a href=\"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.MatchAltView\">Lean.Elab.Term.MatchAltView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">Lean.Elab.Term.PatternVar</a></span> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.MatchAltView\">Lean.Elab.Term.MatchAltView</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L313-L317","name":"Lean.Elab.Term.CollectPatternVars.main","line":313,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.main","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.main\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(alt : <a href=\"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.MatchAltView\">Lean.Elab.Term.MatchAltView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.MatchAltView\">Lean.Elab.Term.MatchAltView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L291-L311","name":"Lean.Elab.Term.CollectPatternVars.collect.processCtorAppCore","line":291,"kind":"opaque","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtorAppCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtorAppCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span>.<span class=\"name\">processCtorAppCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(namedArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg\">Lean.Elab.Term.NamedArg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg\">Lean.Elab.Term.Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ellipsis : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L271-L289","name":"Lean.Elab.Term.CollectPatternVars.collect.processCtorAppContext","line":271,"kind":"opaque","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtorAppContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtorAppContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span>.<span class=\"name\">processCtorAppContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L265-L269","name":"Lean.Elab.Term.CollectPatternVars.collect.processImplicitArg","line":265,"kind":"opaque","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processImplicitArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processImplicitArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span>.<span class=\"name\">processImplicitArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(accessible : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L255-L263","name":"Lean.Elab.Term.CollectPatternVars.collect.processExplicitArg","line":255,"kind":"opaque","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processExplicitArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processExplicitArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span>.<span class=\"name\">processExplicitArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(accessible : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L248-L253","name":"Lean.Elab.Term.CollectPatternVars.collect.pushNewArg","line":248,"kind":"opaque","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.pushNewArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.pushNewArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span>.<span class=\"name\">pushNewArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(accessible : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arg : <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg\">Lean.Elab.Term.Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L233-L246","name":"Lean.Elab.Term.CollectPatternVars.collect.processId","line":233,"kind":"opaque","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processId","doc":"Check whether `stx` is a pattern variable or constructor-like (i.e., constructor or constant tagged with `[match_pattern]` attribute) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span>.<span class=\"name\">processId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L229-L230","name":"Lean.Elab.Term.CollectPatternVars.collect.processCtor","line":229,"kind":"opaque","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span>.<span class=\"name\">processCtor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L216-L227","name":"Lean.Elab.Term.CollectPatternVars.collect.processCtorApp","line":216,"kind":"opaque","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtorApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtorApp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span>.<span class=\"name\">processCtorApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L122-L311","name":"Lean.Elab.Term.CollectPatternVars.collect","line":122,"kind":"opaque","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">collect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\">Lean.Elab.Term.CollectPatternVars.M</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L75-L75","name":"Lean.Elab.Term.CollectPatternVars.instInhabitedContext","line":75,"kind":"instance","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">instInhabitedContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L74-L74","name":"Lean.Elab.Term.CollectPatternVars.Context.newArgs","line":74,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.newArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.newArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">newArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L73-L73","name":"Lean.Elab.Term.CollectPatternVars.Context.args","line":73,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.args","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.args\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">args</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg\">Lean.Elab.Term.Arg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L72-L72","name":"Lean.Elab.Term.CollectPatternVars.Context.namedArgs","line":72,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.namedArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.namedArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">namedArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg\">Lean.Elab.Term.NamedArg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L71-L71","name":"Lean.Elab.Term.CollectPatternVars.Context.paramDeclIdx","line":71,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.paramDeclIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.paramDeclIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">paramDeclIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L70-L70","name":"Lean.Elab.Term.CollectPatternVars.Context.paramDecls","line":70,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.paramDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.paramDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">paramDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L69-L69","name":"Lean.Elab.Term.CollectPatternVars.Context.ellipsis","line":69,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.ellipsis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.ellipsis\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">ellipsis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L68-L68","name":"Lean.Elab.Term.CollectPatternVars.Context.explicit","line":68,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.explicit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.explicit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">explicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L67-L67","name":"Lean.Elab.Term.CollectPatternVars.Context.ctorVal?","line":67,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.ctorVal?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.ctorVal?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">ctorVal?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">Lean.ConstructorVal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L66-L66","name":"Lean.Elab.Term.CollectPatternVars.Context.funId","line":66,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.funId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.funId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">funId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L65-L75","name":"Lean.Elab.Term.CollectPatternVars.Context","line":65,"kind":"structure","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L47-L47","name":"Lean.Elab.Term.CollectPatternVars.M","line":47,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Î± : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L45-L45","name":"Lean.Elab.Term.CollectPatternVars.instInhabitedState","line":45,"kind":"instance","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\">Lean.Elab.Term.CollectPatternVars.State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L44-L44","name":"Lean.Elab.Term.CollectPatternVars.State.vars","line":44,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.vars","doc":"Pattern variables found so far as an array. It contains the order they were found. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">State</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\">Lean.Elab.Term.CollectPatternVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">Lean.Elab.Term.PatternVar</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L42-L42","name":"Lean.Elab.Term.CollectPatternVars.State.found","line":42,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.found","doc":"Pattern variables found so far. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.found\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">State</span>.<span class=\"name\">found</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\">Lean.Elab.Term.CollectPatternVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L40-L45","name":"Lean.Elab.Term.CollectPatternVars.State","line":40,"kind":"structure","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State","doc":"State for the pattern variable collector monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L14-L14","name":"Lean.Elab.Term.PatternVar","line":14,"kind":"def","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">PatternVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L1-L1","name":"Lean.Elab.Term.CollectPatternVars.Context.mk","line":1,"kind":"ctor","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(funId : <a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctorVal? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">Lean.ConstructorVal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(explicit : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ellipsis : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(paramDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(paramDeclIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(namedArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg\">Lean.Elab.Term.NamedArg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg\">Lean.Elab.Term.Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context\">Lean.Elab.Term.CollectPatternVars.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PatternVar.lean#L1-L1","name":"Lean.Elab.Term.CollectPatternVars.State.mk","line":1,"kind":"ctor","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">CollectPatternVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(found : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar\">Lean.Elab.Term.PatternVar</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State\">Lean.Elab.Term.CollectPatternVars.State</a></div></div>"}]}