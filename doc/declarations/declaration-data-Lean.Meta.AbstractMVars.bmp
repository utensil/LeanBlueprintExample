{"name":"Lean.Meta.AbstractMVars","instances":[{"typeNames":["Lean.Meta.AbstractMVarsResult"],"name":"Lean.Meta.instInhabitedAbstractMVarsResult","className":"Inhabited"},{"typeNames":["Lean.Meta.AbstractMVarsResult"],"name":"Lean.Meta.instBEqAbstractMVarsResult","className":"BEq"},{"typeNames":["Lean.Meta.AbstractMVars.M"],"name":"Lean.Meta.AbstractMVars.instMonadMCtxM","className":"Lean.MonadMCtx"}],"imports":["Init","Lean.Meta.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L136-L139","name":"Lean.Meta.openAbstractMVarsResult","line":136,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.openAbstractMVarsResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.openAbstractMVarsResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">openAbstractMVarsResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult\">Lean.Meta.AbstractMVarsResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L128-L134","name":"Lean.Meta.abstractMVars","line":128,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.abstractMVars","doc":"Abstract (current depth) metavariables occurring in `e`.\nThe result contains\n- An array of universe level parameters that replaced universe metavariables occurring in `e`.\n- The number of (expr) metavariables abstracted.\n- And an expression of the form `fun (m_1 : A_1) ... (m_k : A_k) => e'`, where\n  `k` equal to the number of (expr) metavariables abstracted, and `e'` is `e` after we\n  replace the metavariables.\n\nExample: given `f.{?u} ?m1` where `?m1 : ?m2 Nat`, `?m2 : Type -> Type`. This function returns\n`{ levels := #[u], size := 2, expr := (fun (m2 : Type -> Type) (m1 : m2 Nat) => f.{u} m1) }`\n\nThis API can be used to \"transport\" to a different metavariable context.\nGiven a new metavariable context, we replace the `AbstractMVarsResult.levels` with\nnew fresh universe metavariables, and instantiate the `(m_i : A_i)` in the lambda-expression\nwith new fresh metavariables.\n\nApplication: we use this method to cache the results of type class resolution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.abstractMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">abstractMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult\">Lean.Meta.AbstractMVarsResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L68-L106","name":"Lean.Meta.AbstractMVars.abstractExprMVars","line":68,"kind":"opaque","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.abstractExprMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.abstractExprMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">abstractExprMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\">Lean.Meta.AbstractMVars.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L41-L42","name":"Lean.Meta.AbstractMVars.mkFreshFVarId","line":41,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">mkFreshFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\">Lean.Meta.AbstractMVars.M</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L35-L39","name":"Lean.Meta.AbstractMVars.mkFreshId","line":35,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">mkFreshId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\">Lean.Meta.AbstractMVars.M</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L31-L33","name":"Lean.Meta.AbstractMVars.instMonadMCtxM","line":31,"kind":"instance","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.instMonadMCtxM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.instMonadMCtxM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">instMonadMCtxM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/MetavarContext.html#Lean.MonadMCtx\">Lean.MonadMCtx</a> <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\">Lean.Meta.AbstractMVars.M</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L28-L28","name":"Lean.Meta.AbstractMVars.M","line":28,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L26-L26","name":"Lean.Meta.AbstractMVars.State.emap","line":26,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.emap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.emap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">emap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">Lean.Meta.AbstractMVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L25-L25","name":"Lean.Meta.AbstractMVars.State.lmap","line":25,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.lmap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.lmap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">lmap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">Lean.Meta.AbstractMVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Lean/Level.html#Lean.LMVarId\">Lean.LMVarId</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L24-L24","name":"Lean.Meta.AbstractMVars.State.fvars","line":24,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.fvars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.fvars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">fvars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">Lean.Meta.AbstractMVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L23-L23","name":"Lean.Meta.AbstractMVars.State.paramNames","line":23,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.paramNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.paramNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">paramNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">Lean.Meta.AbstractMVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L22-L22","name":"Lean.Meta.AbstractMVars.State.nextParamIdx","line":22,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.nextParamIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.nextParamIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">nextParamIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">Lean.Meta.AbstractMVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L21-L21","name":"Lean.Meta.AbstractMVars.State.mctx","line":21,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mctx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mctx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">Lean.Meta.AbstractMVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L20-L20","name":"Lean.Meta.AbstractMVars.State.lctx","line":20,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.lctx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.lctx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">lctx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">Lean.Meta.AbstractMVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L19-L19","name":"Lean.Meta.AbstractMVars.State.ngen","line":19,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.ngen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.ngen\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">ngen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">Lean.Meta.AbstractMVars.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta.html#Lean.NameGenerator\">Lean.NameGenerator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L18-L26","name":"Lean.Meta.AbstractMVars.State","line":18,"kind":"structure","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L14-L14","name":"Lean.Meta.instBEqAbstractMVarsResult","line":14,"kind":"instance","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.instBEqAbstractMVarsResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.instBEqAbstractMVarsResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instBEqAbstractMVarsResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult\">Lean.Meta.AbstractMVarsResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L14-L14","name":"Lean.Meta.instInhabitedAbstractMVarsResult","line":14,"kind":"instance","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.instInhabitedAbstractMVarsResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.instInhabitedAbstractMVarsResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedAbstractMVarsResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult\">Lean.Meta.AbstractMVarsResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L13-L13","name":"Lean.Meta.AbstractMVarsResult.expr","line":13,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult.expr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVarsResult</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult\">Lean.Meta.AbstractMVarsResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L12-L12","name":"Lean.Meta.AbstractMVarsResult.numMVars","line":12,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult.numMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult.numMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVarsResult</span>.<span class=\"name\">numMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult\">Lean.Meta.AbstractMVarsResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L11-L11","name":"Lean.Meta.AbstractMVarsResult.paramNames","line":11,"kind":"def","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult.paramNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult.paramNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVarsResult</span>.<span class=\"name\">paramNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult\">Lean.Meta.AbstractMVarsResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L10-L14","name":"Lean.Meta.AbstractMVarsResult","line":10,"kind":"structure","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVarsResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L1-L1","name":"Lean.Meta.AbstractMVars.State.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ngen : <a href=\"./Init/Meta.html#Lean.NameGenerator\">Lean.NameGenerator</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mctx : <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nextParamIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(paramNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lmap : <span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Lean/Level.html#Lean.LMVarId\">Lean.LMVarId</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(emap : <span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State\">Lean.Meta.AbstractMVars.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/AbstractMVars.lean#L1-L1","name":"Lean.Meta.AbstractMVarsResult.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractMVarsResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(paramNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(numMVars : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult\">Lean.Meta.AbstractMVarsResult</a></div></div>"}]}