{"name":"Lean.Meta.DecLevel","instances":[],"imports":["Init","Lean.Meta.Basic","Lean.Meta.InferType"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/DecLevel.lean#L69-L70","name":"Lean.Meta.getDecLevel","line":69,"kind":"def","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.getDecLevel","doc":"This method is useful for inferring universe level parameters for function that take arguments such as `{α : Type u}`.\nRecall that `Type u` is `Sort (u+1)` in Lean. Thus, given `α`, we must infer its universe level,\nand then decrement 1 to obtain `u`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.getDecLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getDecLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/DecLevel.lean#L61-L64","name":"Lean.Meta.decLevel","line":61,"kind":"def","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">decLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(u : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/DecLevel.lean#L53-L59","name":"Lean.Meta.decLevel?","line":53,"kind":"def","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">decLevel?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(u : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/DecLevel.lean#L16-L16","name":"Lean.Meta.DecLevelContext.canAssignMVars","line":16,"kind":"def","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext.canAssignMVars","doc":"If `true`, then `decAux? ?m` returns a fresh metavariable `?n` s.t.\n`?m := ?n+1`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext.canAssignMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DecLevelContext</span>.<span class=\"name\">canAssignMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext\">Lean.Meta.DecLevelContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/DecLevel.lean#L11-L16","name":"Lean.Meta.DecLevelContext","line":11,"kind":"structure","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DecLevelContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/DecLevel.lean#L1-L1","name":"Lean.Meta.DecLevelContext.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">DecLevelContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(canAssignMVars : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext\">Lean.Meta.DecLevelContext</a></div></div>"}]}