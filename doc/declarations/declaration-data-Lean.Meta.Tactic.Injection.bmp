{"name":"Lean.Meta.Tactic.Injection","instances":[],"imports":["Init","Lean.Meta.AppBuilder","Lean.Meta.MatchUtil","Lean.Meta.Tactic.Clear","Lean.Meta.Tactic.Subst","Lean.Meta.Tactic.Assert","Lean.Meta.Tactic.Intro"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L104-L121","name":"Lean.Meta.injections.go","line":104,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injections.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injections.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">injections</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult\">Lean.Meta.InjectionsResult</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L99-L121","name":"Lean.Meta.injections","line":99,"kind":"def","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injections","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injections\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">injections</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>) <span class=\"fn\">[]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(maxDepth : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult\">Lean.Meta.InjectionsResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L97-L97","name":"Lean.Meta.InjectionsResult.subgoal","line":97,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult.subgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult.subgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InjectionsResult</span>.<span class=\"name\">subgoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(remainingNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult\">Lean.Meta.InjectionsResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L96-L96","name":"Lean.Meta.InjectionsResult.solved","line":96,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult.solved","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult.solved\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InjectionsResult</span>.<span class=\"name\">solved</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult\">Lean.Meta.InjectionsResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L95-L97","name":"Lean.Meta.InjectionsResult","line":95,"kind":"inductive","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionsResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InjectionsResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L90-L93","name":"Lean.Meta.injection","line":90,"kind":"def","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injection\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">injection</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>) <span class=\"fn\">[]</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult\">Lean.Meta.InjectionResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L77-L87","name":"Lean.Meta.injectionIntro.go","line":77,"kind":"def","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injectionIntro.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injectionIntro.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">injectionIntro</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tryToClear : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult\">Lean.Meta.InjectionResult</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L76-L88","name":"Lean.Meta.injectionIntro","line":76,"kind":"def","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injectionIntro","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injectionIntro\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">injectionIntro</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(numEqs : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tryToClear : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult\">Lean.Meta.InjectionResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L73-L73","name":"Lean.Meta.InjectionResult.subgoal","line":73,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult.subgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult.subgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InjectionResult</span>.<span class=\"name\">subgoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newEqs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(remainingNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult\">Lean.Meta.InjectionResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L72-L72","name":"Lean.Meta.InjectionResult.solved","line":72,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult.solved","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult.solved\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InjectionResult</span>.<span class=\"name\">solved</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult\">Lean.Meta.InjectionResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L71-L73","name":"Lean.Meta.InjectionResult","line":71,"kind":"inductive","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InjectionResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L27-L69","name":"Lean.Meta.injectionCore","line":27,"kind":"def","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injectionCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injectionCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">injectionCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore\">Lean.Meta.InjectionResultCore</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L25-L25","name":"Lean.Meta.InjectionResultCore.subgoal","line":25,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore.subgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore.subgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InjectionResultCore</span>.<span class=\"name\">subgoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(numNewEqs : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore\">Lean.Meta.InjectionResultCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L24-L24","name":"Lean.Meta.InjectionResultCore.solved","line":24,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore.solved","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore.solved\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InjectionResultCore</span>.<span class=\"name\">solved</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore\">Lean.Meta.InjectionResultCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L23-L25","name":"Lean.Meta.InjectionResultCore","line":23,"kind":"inductive","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InjectionResultCore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Injection.lean#L15-L21","name":"Lean.Meta.getCtorNumPropFields","line":15,"kind":"def","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.getCtorNumPropFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Injection.html#Lean.Meta.getCtorNumPropFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getCtorNumPropFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctorInfo : <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">Lean.ConstructorVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"}]}