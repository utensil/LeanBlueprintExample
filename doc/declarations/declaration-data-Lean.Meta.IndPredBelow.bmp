{"name":"Lean.Meta.IndPredBelow","instances":[{"typeNames":["Lean.Meta.IndPredBelow.Variables"],"name":"Lean.Meta.IndPredBelow.instInhabitedVariables","className":"Inhabited"}],"imports":["Init","Lean.Meta.Constructions","Lean.Meta.Match.Match"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L577-L592","name":"Lean.Meta.IndPredBelow.mkBelow","line":577,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelow","doc":"Generates the auxiliary lemmas `below` and `brecOn` for a recursive inductive predicate.\nThe current generator doesn't support nested predicates, but pattern-matching on them still works\nthanks to well-founded recursion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelow\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBelow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L553-L572","name":"Lean.Meta.IndPredBelow.findBelowIdx","line":553,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.findBelowIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.findBelowIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">findBelowIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L545-L551","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.newMotive","line":545,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.newMotive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.newMotive\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBelowMatcher</span>.<span class=\"name\">newMotive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(matcherApp : <a href=\"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.MatcherApp\">Lean.Meta.MatcherApp</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L540-L543","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.toInaccessible","line":540,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.toInaccessible","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.toInaccessible\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBelowMatcher</span>.<span class=\"name\">toInaccessible</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern\">Lean.Meta.Match.Pattern</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern\">Lean.Meta.Match.Pattern</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L510-L537","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields.loop","line":510,"kind":"opaque","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBelowMatcher</span>.<span class=\"name\">transformFields</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(belowMotive : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowCtor : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowFieldOpts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern\">Lean.Meta.Match.Pattern</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowFields : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern\">Lean.Meta.Match.Pattern</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(additionalFVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern\">Lean.Meta.Match.Pattern</a></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L509-L538","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields","line":509,"kind":"opaque","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBelowMatcher</span>.<span class=\"name\">transformFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(belowMotive : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowCtor : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowFieldOpts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern\">Lean.Meta.Match.Pattern</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern\">Lean.Meta.Match.Pattern</a></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L469-L507","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.convertToBelow","line":469,"kind":"opaque","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.convertToBelow","doc":"this function changes the type of the pattern from the original type to the `below` version thereof.\nMost of the cases don't apply. In order to change the type and the pattern to be type correct, we don't\nsimply recursively change all occurrences, but rather, we recursively change occurences of the constructor.\nAs such there are only a few cases:\n- the pattern is a constructor from the original type. Here we need to:\n  - replace the constructor\n  - copy original recursive patterns and convert them to below and reintroduce them in the correct position\n  - turn original recursive patterns inaccessible\n  - introduce free variables as needed.\n- it is an `as` pattern. Here the contstructor could be hidden inside of it.\n- it is a variable. Here you we need to introduce a fresh variable of a different type.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.convertToBelow\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBelowMatcher</span>.<span class=\"name\">convertToBelow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(belowMotive : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(originalPattern : <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern\">Lean.Meta.Match.Pattern</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern\">Lean.Meta.Match.Pattern</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L446-L454","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.addBelowPattern","line":446,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.addBelowPattern","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.addBelowPattern\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBelowMatcher</span>.<span class=\"name\">addBelowPattern</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(belowMotive : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(idx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhs : <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.AltLHS\">Lean.Meta.Match.AltLHS</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.AltLHS\">Lean.Meta.Match.AltLHS</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L399-L551","name":"Lean.Meta.IndPredBelow.mkBelowMatcher","line":399,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher","doc":"This function adds an additional `below` discriminant to a matcher application.\nIt is used for modifying the patterns, such that the structural recursion can use the new\n`below` predicate instead of the original one and thus be used prove structural recursion.\n\nIt takes as parameters:\n- matcherApp: a matcher application\n- belowMotive: the motive, that the `below` type should carry\n- below: an expression from the local context that is the `below` version of a predicate\n         and can be used for structural recursion\n- idx: the index of the original predicate discriminant.\n\nIt returns:\n- A matcher application as an expression\n- A side-effect for adding the matcher to the environment "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBelowMatcher</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(matcherApp : <a href=\"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.MatcherApp\">Lean.Meta.MatcherApp</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowMotive : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(below : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(idx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L361-L375","name":"Lean.Meta.IndPredBelow.getBelowIndices.loop","line":361,"kind":"opaque","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.getBelowIndices.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.getBelowIndices.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">getBelowIndices</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rest : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowIndices : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(yIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L354-L375","name":"Lean.Meta.IndPredBelow.getBelowIndices","line":354,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.getBelowIndices","doc":"Given a constructor name, find the indices of the corresponding `below` version thereof. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.getBelowIndices\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">getBelowIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctorName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L331-L351","name":"Lean.Meta.IndPredBelow.mkBrecOnDecl.mkIH","line":331,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBrecOnDecl.mkIH","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBrecOnDecl.mkIH\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBrecOnDecl</span>.<span class=\"name\">mkIH</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motives : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(idx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\"><span class=\"fn\">ctx</span>.motives</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L323-L330","name":"Lean.Meta.IndPredBelow.mkBrecOnDecl.mkType","line":323,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBrecOnDecl.mkType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBrecOnDecl.mkType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBrecOnDecl</span>.<span class=\"name\">mkType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(idx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L313-L351","name":"Lean.Meta.IndPredBelow.mkBrecOnDecl","line":313,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBrecOnDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBrecOnDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBrecOnDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(idx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Declaration.html#Lean.Declaration\">Lean.Declaration</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L306-L311","name":"Lean.Meta.IndPredBelow.proveBrecOn.closeGoal","line":306,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.closeGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.closeGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">proveBrecOn</span>.<span class=\"name\">closeGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(maxDepth : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L303-L304","name":"Lean.Meta.IndPredBelow.proveBrecOn.introNPRec","line":303,"kind":"opaque","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.introNPRec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.introNPRec\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">proveBrecOn</span>.<span class=\"name\">introNPRec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L289-L301","name":"Lean.Meta.IndPredBelow.proveBrecOn.applyCtors","line":289,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.applyCtors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.applyCtors\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">proveBrecOn</span>.<span class=\"name\">applyCtors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ms : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L273-L287","name":"Lean.Meta.IndPredBelow.proveBrecOn.induction","line":273,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.induction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.induction\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">proveBrecOn</span>.<span class=\"name\">induction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\">Lean.Meta.IndPredBelow.BrecOnVariables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L267-L271","name":"Lean.Meta.IndPredBelow.proveBrecOn.applyIH","line":267,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.applyIH","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.applyIH\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">proveBrecOn</span>.<span class=\"name\">applyIH</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\">Lean.Meta.IndPredBelow.BrecOnVariables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L259-L265","name":"Lean.Meta.IndPredBelow.proveBrecOn.intros","line":259,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.intros","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.intros\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">proveBrecOn</span>.<span class=\"name\">intros</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\">Lean.Meta.IndPredBelow.BrecOnVariables</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L248-L311","name":"Lean.Meta.IndPredBelow.proveBrecOn","line":248,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">proveBrecOn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L230-L246","name":"Lean.Meta.IndPredBelow.backwardsChaining","line":230,"kind":"opaque","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.backwardsChaining","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.backwardsChaining\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">backwardsChaining</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(depth : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L222-L228","name":"Lean.Meta.IndPredBelow.mkBelowDecl","line":222,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkBelowDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Declaration.html#Lean.Declaration\">Lean.Declaration</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L212-L220","name":"Lean.Meta.IndPredBelow.mkInductiveType","line":212,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkInductiveType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkInductiveType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkInductiveType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\"><span class=\"fn\">ctx</span>.typeInfos</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Declaration.html#Lean.InductiveType\">Lean.InductiveType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L204-L210","name":"Lean.Meta.IndPredBelow.mkConstructor","line":204,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkConstructor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkConstructor\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkConstructor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctor : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Declaration.html#Lean.Constructor\">Lean.Constructor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L200-L202","name":"Lean.Meta.IndPredBelow.mkCtorType.copyVarName","line":200,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.copyVarName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.copyVarName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span>.<span class=\"name\">copyVarName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(oldName : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L186-L198","name":"Lean.Meta.IndPredBelow.mkCtorType.mkMotiveBinder","line":186,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.mkMotiveBinder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.mkMotiveBinder\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span>.<span class=\"name\">mkMotiveBinder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indValIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(binder : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(domain : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L163-L184","name":"Lean.Meta.IndPredBelow.mkCtorType.mkBelowBinder","line":163,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.mkBelowBinder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.mkBelowBinder\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span>.<span class=\"name\">mkBelowBinder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(binder : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(domain : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L150-L161","name":"Lean.Meta.IndPredBelow.mkCtorType.checkCount","line":150,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.checkCount","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.checkCount\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span>.<span class=\"name\">checkCount</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(domain : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L143-L148","name":"Lean.Meta.IndPredBelow.mkCtorType.replaceTempVars","line":143,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.replaceTempVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.replaceTempVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span>.<span class=\"name\">replaceTempVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctor : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L132-L141","name":"Lean.Meta.IndPredBelow.mkCtorType.rebuild","line":132,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.rebuild","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.rebuild\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span>.<span class=\"name\">rebuild</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(originalCtor : <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">Lean.ConstructorVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L120-L130","name":"Lean.Meta.IndPredBelow.mkCtorType.modifyBinders","line":120,"kind":"opaque","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.modifyBinders","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.modifyBinders\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span>.<span class=\"name\">modifyBinders</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(originalCtor : <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">Lean.ConstructorVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L113-L118","name":"Lean.Meta.IndPredBelow.mkCtorType.addMotives","line":113,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.addMotives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.addMotives\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span>.<span class=\"name\">addMotives</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(originalCtor : <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">Lean.ConstructorVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L106-L111","name":"Lean.Meta.IndPredBelow.mkCtorType.addHeaderVars","line":106,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.addHeaderVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.addHeaderVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span>.<span class=\"name\">addHeaderVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(originalCtor : <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">Lean.ConstructorVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L94-L202","name":"Lean.Meta.IndPredBelow.mkCtorType","line":94,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkCtorType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(originalCtor : <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">Lean.ConstructorVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L91-L92","name":"Lean.Meta.IndPredBelow.mkContext.mkIndValConst","line":91,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.mkIndValConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.mkIndValConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkContext</span>.<span class=\"name\">mkIndValConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L87-L89","name":"Lean.Meta.IndPredBelow.mkContext.motiveType","line":87,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.motiveType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.motiveType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkContext</span>.<span class=\"name\">motiveType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L80-L85","name":"Lean.Meta.IndPredBelow.mkContext.addMotives","line":80,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.addMotives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.addMotives\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkContext</span>.<span class=\"name\">addMotives</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(motives : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(numParams : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L71-L78","name":"Lean.Meta.IndPredBelow.mkContext.mkHeader","line":71,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.mkHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.mkHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkContext</span>.<span class=\"name\">mkHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(motives : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(numParams : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L66-L69","name":"Lean.Meta.IndPredBelow.mkContext.motiveName","line":66,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.motiveName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.motiveName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkContext</span>.<span class=\"name\">motiveName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(motiveTypes : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L51-L92","name":"Lean.Meta.IndPredBelow.mkContext","line":51,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">mkContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L49-L49","name":"Lean.Meta.IndPredBelow.BrecOnVariables.indHyps","line":49,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.indHyps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.indHyps\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">BrecOnVariables</span>.<span class=\"name\">indHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\">Lean.Meta.IndPredBelow.BrecOnVariables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L48-L48","name":"Lean.Meta.IndPredBelow.BrecOnVariables.witness","line":48,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.witness","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.witness\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">BrecOnVariables</span>.<span class=\"name\">witness</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\">Lean.Meta.IndPredBelow.BrecOnVariables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L47-L47","name":"Lean.Meta.IndPredBelow.BrecOnVariables.indices","line":47,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.indices","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.indices\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">BrecOnVariables</span>.<span class=\"name\">indices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\">Lean.Meta.IndPredBelow.BrecOnVariables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L46-L46","name":"Lean.Meta.IndPredBelow.BrecOnVariables.motives","line":46,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.motives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.motives\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">BrecOnVariables</span>.<span class=\"name\">motives</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\">Lean.Meta.IndPredBelow.BrecOnVariables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L45-L45","name":"Lean.Meta.IndPredBelow.BrecOnVariables.params","line":45,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.params","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">BrecOnVariables</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\">Lean.Meta.IndPredBelow.BrecOnVariables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L44-L49","name":"Lean.Meta.IndPredBelow.BrecOnVariables","line":44,"kind":"structure","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables","doc":"Collection of variables used to keep track of the local context used in the `brecOn` proof.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">BrecOnVariables</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L39-L39","name":"Lean.Meta.IndPredBelow.instInhabitedVariables","line":39,"kind":"instance","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.instInhabitedVariables","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.instInhabitedVariables\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">instInhabitedVariables</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L38-L38","name":"Lean.Meta.IndPredBelow.Variables.innerType","line":38,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.innerType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.innerType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Variables</span>.<span class=\"name\">innerType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L37-L37","name":"Lean.Meta.IndPredBelow.Variables.motives","line":37,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.motives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.motives\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Variables</span>.<span class=\"name\">motives</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L36-L36","name":"Lean.Meta.IndPredBelow.Variables.args","line":36,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.args","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.args\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Variables</span>.<span class=\"name\">args</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L35-L35","name":"Lean.Meta.IndPredBelow.Variables.params","line":35,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.params","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Variables</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L34-L34","name":"Lean.Meta.IndPredBelow.Variables.indVal","line":34,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.indVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.indVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Variables</span>.<span class=\"name\">indVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L33-L33","name":"Lean.Meta.IndPredBelow.Variables.target","line":33,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.target","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.target\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Variables</span>.<span class=\"name\">target</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L32-L39","name":"Lean.Meta.IndPredBelow.Variables","line":32,"kind":"structure","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables","doc":"Collection of variables used to keep track of the positions of binders in the construction\nof `below` motives and constructors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Variables</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L26-L26","name":"Lean.Meta.IndPredBelow.Context.numParams","line":26,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.numParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.numParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Context</span>.<span class=\"name\">numParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L25-L25","name":"Lean.Meta.IndPredBelow.Context.headers","line":25,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.headers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.headers\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Context</span>.<span class=\"name\">headers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L24-L24","name":"Lean.Meta.IndPredBelow.Context.belowNames","line":24,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.belowNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.belowNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Context</span>.<span class=\"name\">belowNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L23-L23","name":"Lean.Meta.IndPredBelow.Context.typeInfos","line":23,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.typeInfos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.typeInfos\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Context</span>.<span class=\"name\">typeInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L22-L22","name":"Lean.Meta.IndPredBelow.Context.motives","line":22,"kind":"def","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.motives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.motives\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Context</span>.<span class=\"name\">motives</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L21-L26","name":"Lean.Meta.IndPredBelow.Context","line":21,"kind":"structure","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context","doc":"The context used in the creation of the `below` scheme for inductive predicates.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L13-L16","name":"Lean.Meta.IndPredBelow.maxBackwardChainingDepth","line":13,"kind":"opaque","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.maxBackwardChainingDepth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.maxBackwardChainingDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">maxBackwardChainingDepth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L1-L1","name":"Lean.Meta.IndPredBelow.Context.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(motives : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(typeInfos : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(belowNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(headers : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(numParams : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context\">Lean.Meta.IndPredBelow.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L1-L1","name":"Lean.Meta.IndPredBelow.Variables.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">Variables</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motives : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(innerType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables\">Lean.Meta.IndPredBelow.Variables</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/IndPredBelow.lean#L1-L1","name":"Lean.Meta.IndPredBelow.BrecOnVariables.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">IndPredBelow</span>.<span class=\"name\">BrecOnVariables</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motives : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indices : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(witness : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indHyps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables\">Lean.Meta.IndPredBelow.BrecOnVariables</a></div></div>"}]}