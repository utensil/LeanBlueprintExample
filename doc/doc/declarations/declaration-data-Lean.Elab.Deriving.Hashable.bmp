{"name":"Lean.Elab.Deriving.Hashable","instances":[],"imports":["Init","Lean.Meta.Inductive","Lean.Elab.Deriving.Basic","Lean.Elab.Deriving.Util"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Deriving/Hashable.lean#L84-L90","name":"Lean.Elab.Deriving.Hashable.mkHashableHandler","line":84,"kind":"def","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkHashableHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkHashableHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">Hashable</span>.<span class=\"name\">mkHashableHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Deriving/Hashable.lean#L72-L76","name":"Lean.Elab.Deriving.Hashable.mkHashFuncs","line":72,"kind":"def","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkHashFuncs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkHashFuncs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">Hashable</span>.<span class=\"name\">mkHashFuncs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Lean.Elab.Deriving.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Deriving/Hashable.lean#L57-L70","name":"Lean.Elab.Deriving.Hashable.mkAuxFunction","line":57,"kind":"def","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkAuxFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkAuxFunction\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">Hashable</span>.<span class=\"name\">mkAuxFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Lean.Elab.Deriving.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Command\">Lean.Command</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Deriving/Hashable.lean#L24-L55","name":"Lean.Elab.Deriving.Hashable.mkMatch.mkAlts","line":24,"kind":"def","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkMatch.mkAlts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkMatch.mkAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">Hashable</span>.<span class=\"name\">mkMatch</span>.<span class=\"name\">mkAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Lean.Elab.Deriving.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Term.matchAlt</span></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Deriving/Hashable.lean#L18-L55","name":"Lean.Elab.Deriving.Hashable.mkMatch","line":18,"kind":"def","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkMatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkMatch\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">Hashable</span>.<span class=\"name\">mkMatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Lean.Elab.Deriving.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(header : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header\">Lean.Elab.Deriving.Header</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Deriving/Hashable.lean#L15-L16","name":"Lean.Elab.Deriving.Hashable.mkHashableHeader","line":15,"kind":"def","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkHashableHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkHashableHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">Hashable</span>.<span class=\"name\">mkHashableHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header\">Lean.Elab.Deriving.Header</a></span></div></div>"}]}