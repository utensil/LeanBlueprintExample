{"name":"Lean.Compiler.IR.Format","instances":[{"typeNames":["Lean.IR.Arg"],"name":"Lean.IR.instToFormatArg","className":"Std.ToFormat"},{"typeNames":["Lean.IR.LitVal"],"name":"Lean.IR.instToFormatLitVal","className":"Std.ToFormat"},{"typeNames":["Lean.IR.CtorInfo"],"name":"Lean.IR.instToFormatCtorInfo","className":"Std.ToFormat"},{"typeNames":["Lean.IR.Expr"],"name":"Lean.IR.instToFormatExpr","className":"Std.ToFormat"},{"typeNames":["Lean.IR.Expr"],"name":"Lean.IR.instToStringExpr","className":"ToString"},{"typeNames":["Lean.IR.IRType"],"name":"Lean.IR.instToFormatIRType","className":"Std.ToFormat"},{"typeNames":["Lean.IR.IRType"],"name":"Lean.IR.instToStringIRType","className":"ToString"},{"typeNames":["Lean.IR.Param"],"name":"Lean.IR.instToFormatParam","className":"Std.ToFormat"},{"typeNames":["Lean.IR.FnBody"],"name":"Lean.IR.instToFormatFnBody","className":"Std.ToFormat"},{"typeNames":["Lean.IR.FnBody"],"name":"Lean.IR.instToStringFnBody","className":"ToString"},{"typeNames":["Lean.IR.Decl"],"name":"Lean.IR.instToFormatDecl","className":"Std.ToFormat"},{"typeNames":["Lean.IR.Decl"],"name":"Lean.IR.instToStringDecl","className":"ToString"}],"imports":["Init","Lean.Compiler.IR.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L139-L139","name":"Lean.IR.instToStringDecl","line":139,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Lean.IR.Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L136-L137","name":"Lean.IR.declToString","line":136,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.declToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.declToString\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">declToString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Lean.IR.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L133-L133","name":"Lean.IR.instToFormatDecl","line":133,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Lean.IR.Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L128-L131","name":"Lean.IR.formatDecl","line":128,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Lean.IR.Decl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indent : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L126-L126","name":"Lean.IR.instToStringFnBody","line":126,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L125-L125","name":"Lean.IR.instToFormatFnBody","line":125,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatFnBody</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L108-L122","name":"Lean.IR.formatFnBody.loop","line":108,"kind":"opaque","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatFnBody</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(indent : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L107-L123","name":"Lean.IR.formatFnBody","line":107,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fnBody : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indent : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L87-L101","name":"Lean.IR.formatFnBodyHead","line":87,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBodyHead","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBodyHead\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatFnBodyHead</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L84-L85","name":"Lean.IR.formatParams","line":84,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatParams\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Lean.IR.Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L80-L82","name":"Lean.IR.formatAlt","line":80,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatAlt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatAlt\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatAlt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fmt : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">Lean.IR.FnBody</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indent : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Lean.IR.Alt</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L78-L78","name":"Lean.IR.instToFormatParam","line":78,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatParam\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatParam</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Lean.IR.Param</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L73-L73","name":"Lean.IR.instToStringIRType","line":73,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringIRType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringIRType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringIRType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">Lean.IR.IRType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L72-L72","name":"Lean.IR.instToFormatIRType","line":72,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatIRType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatIRType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatIRType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">Lean.IR.IRType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L53-L53","name":"Lean.IR.instToStringExpr","line":53,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToStringExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Lean.IR.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L52-L52","name":"Lean.IR.instToFormatExpr","line":52,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Lean.IR.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L35-L35","name":"Lean.IR.instToFormatCtorInfo","line":35,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatCtorInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatCtorInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatCtorInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">Lean.IR.CtorInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L24-L24","name":"Lean.IR.instToFormatLitVal","line":24,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatLitVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatLitVal\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatLitVal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal\">Lean.IR.LitVal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L17-L18","name":"Lean.IR.formatArray","line":17,"kind":"def","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.formatArray\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">formatArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/IR/Format.lean#L15-L15","name":"Lean.IR.instToFormatArg","line":15,"kind":"instance","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">instToFormatArg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Lean.IR.Arg</a></span></div></div>"}]}