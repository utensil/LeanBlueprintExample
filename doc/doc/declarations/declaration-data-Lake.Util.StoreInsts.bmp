{"name":"Lake.Util.StoreInsts","instances":[{"typeNames":["StateT","Lake.DRBMap"],"name":"Lake.instMonadDStoreStateTDRBMap","className":"Lake.MonadDStore"},{"typeNames":["StateT","Lean.RBMap"],"name":"Lake.instMonadStoreStateTRBMap","className":"Lake.MonadDStore"},{"typeNames":["StateT","Lake.RBArray"],"name":"Lake.instMonadStoreStateTRBArray","className":"Lake.MonadDStore"},{"typeNames":["Lean.Name","StateT","Lean.NameMap"],"name":"Lake.instMonadStoreNameStateTNameMap","className":"Lake.MonadDStore"},{"typeNames":[],"name":"Lake.instMonadStore1_1","className":"Lake.MonadStore1"}],"imports":["Init","Lake.Util.DRBMap","Lake.Util.RBArray","Lake.Util.Family","Lake.Util.Store"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/StoreInsts.lean#L29-L31","name":"Lake.instMonadStore1_1","line":29,"kind":"instance","docLink":"./Lake/Util/StoreInsts.html#Lake.instMonadStore1_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/StoreInsts.html#Lake.instMonadStore1_1\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadStore1_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">κ</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_2 → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">κ</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Store.html#Lake.MonadDStore\">Lake.MonadDStore</a> <span class=\"fn\">κ</span> <span class=\"fn\">β</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[t : <span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">Lake.FamilyOut</a> <span class=\"fn\">β</span> <span class=\"fn\">k</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Store.html#Lake.MonadStore1\">Lake.MonadStore1</a> <span class=\"fn\">k</span> <span class=\"fn\">α</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/StoreInsts.lean#L26-L27","name":"Lake.instMonadStoreNameStateTNameMap","line":26,"kind":"instance","docLink":"./Lake/Util/StoreInsts.html#Lake.instMonadStoreNameStateTNameMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/StoreInsts.html#Lake.instMonadStoreNameStateTNameMap\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadStoreNameStateTNameMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Store.html#Lake.MonadStore\">Lake.MonadStore</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <span class=\"fn\">α</span> (<span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> (<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <span class=\"fn\">α</span></span>) <span class=\"fn\">m</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/StoreInsts.lean#L22-L24","name":"Lake.instMonadStoreStateTRBArray","line":22,"kind":"instance","docLink":"./Lake/Util/StoreInsts.html#Lake.instMonadStoreStateTRBArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/StoreInsts.html#Lake.instMonadStoreStateTRBArray\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadStoreStateTRBArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2) → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> (max u_2 u_1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cmp : <span class=\"fn\"><span class=\"fn\">κ</span> → <span class=\"fn\">κ</span> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Store.html#Lake.MonadStore\">Lake.MonadStore</a> <span class=\"fn\">κ</span> <span class=\"fn\">α</span> (<span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> (<span class=\"fn\"><a href=\"./Lake/Util/RBArray.html#Lake.RBArray\">Lake.RBArray</a> <span class=\"fn\">κ</span> <span class=\"fn\">α</span> <span class=\"fn\">cmp</span></span>) <span class=\"fn\">m</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/StoreInsts.lean#L18-L20","name":"Lake.instMonadStoreStateTRBMap","line":18,"kind":"instance","docLink":"./Lake/Util/StoreInsts.html#Lake.instMonadStoreStateTRBMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/StoreInsts.html#Lake.instMonadStoreStateTRBMap\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadStoreStateTRBMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2) → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> (max u_2 u_1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cmp : <span class=\"fn\"><span class=\"fn\">κ</span> → <span class=\"fn\">κ</span> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Store.html#Lake.MonadStore\">Lake.MonadStore</a> <span class=\"fn\">κ</span> <span class=\"fn\">α</span> (<span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> (<span class=\"fn\"><a href=\"./Lean/Data/RBMap.html#Lean.RBMap\">Lean.RBMap</a> <span class=\"fn\">κ</span> <span class=\"fn\">α</span> <span class=\"fn\">cmp</span></span>) <span class=\"fn\">m</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/StoreInsts.lean#L14-L16","name":"Lake.instMonadDStoreStateTDRBMap","line":14,"kind":"instance","docLink":"./Lake/Util/StoreInsts.html#Lake.instMonadDStoreStateTDRBMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/StoreInsts.html#Lake.instMonadDStoreStateTDRBMap\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadDStoreStateTDRBMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2) → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">κ</span> → <a href=\"./foundational_types.html\">Type</a> (max u_2 u_1)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cmp : <span class=\"fn\"><span class=\"fn\">κ</span> → <span class=\"fn\">κ</span> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Compare.html#Lake.EqOfCmpWrt\">Lake.EqOfCmpWrt</a> <span class=\"fn\">κ</span> <span class=\"fn\">β</span> <span class=\"fn\">cmp</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Store.html#Lake.MonadDStore\">Lake.MonadDStore</a> <span class=\"fn\">κ</span> <span class=\"fn\">β</span> (<span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> (<span class=\"fn\"><a href=\"./Lake/Util/DRBMap.html#Lake.DRBMap\">Lake.DRBMap</a> <span class=\"fn\">κ</span> <span class=\"fn\">β</span> <span class=\"fn\">cmp</span></span>) <span class=\"fn\">m</span></span>)</span></div></div>"}]}