{"name":"Lean.Meta.Match.MatchEqsExt","instances":[{"typeNames":["Lean.Meta.Match.MatchEqns"],"name":"Lean.Meta.Match.instInhabitedMatchEqns","className":"Inhabited"},{"typeNames":["Lean.Meta.Match.MatchEqns"],"name":"Lean.Meta.Match.instReprMatchEqns","className":"Repr"},{"typeNames":["Lean.Meta.Match.MatchEqnsExtState"],"name":"Lean.Meta.Match.instInhabitedMatchEqnsExtState","className":"Inhabited"}],"imports":["Init","Lean.Meta.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L34-L34","name":"Lean.Meta.Match.getEquationsFor","line":34,"kind":"opaque","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.getEquationsFor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.getEquationsFor\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">getEquationsFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(matchDeclName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L27-L28","name":"Lean.Meta.Match.registerMatchEqns","line":27,"kind":"def","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.registerMatchEqns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.registerMatchEqns\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">registerMatchEqns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(matchDeclName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(matchEqns : <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L24-L25","name":"Lean.Meta.Match.matchEqnsExt","line":24,"kind":"opaque","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.matchEqnsExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.matchEqnsExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">matchEqnsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState\">Lean.Meta.Match.MatchEqnsExtState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L21-L21","name":"Lean.Meta.Match.instInhabitedMatchEqnsExtState","line":21,"kind":"instance","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.instInhabitedMatchEqnsExtState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.instInhabitedMatchEqnsExtState\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">instInhabitedMatchEqnsExtState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState\">Lean.Meta.Match.MatchEqnsExtState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L20-L20","name":"Lean.Meta.Match.MatchEqnsExtState.map","line":20,"kind":"def","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState.map\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">MatchEqnsExtState</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState\">Lean.Meta.Match.MatchEqnsExtState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L19-L21","name":"Lean.Meta.Match.MatchEqnsExtState","line":19,"kind":"structure","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">MatchEqnsExtState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L16-L17","name":"Lean.Meta.Match.MatchEqns.size","line":16,"kind":"def","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.size\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">MatchEqns</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L14-L14","name":"Lean.Meta.Match.instReprMatchEqns","line":14,"kind":"instance","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.instReprMatchEqns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.instReprMatchEqns\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">instReprMatchEqns</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L14-L14","name":"Lean.Meta.Match.instInhabitedMatchEqns","line":14,"kind":"instance","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.instInhabitedMatchEqns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.instInhabitedMatchEqns\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">instInhabitedMatchEqns</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L13-L13","name":"Lean.Meta.Match.MatchEqns.splitterAltNumParams","line":13,"kind":"def","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.splitterAltNumParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.splitterAltNumParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">MatchEqns</span>.<span class=\"name\">splitterAltNumParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L12-L12","name":"Lean.Meta.Match.MatchEqns.splitterName","line":12,"kind":"def","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.splitterName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.splitterName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">MatchEqns</span>.<span class=\"name\">splitterName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L11-L11","name":"Lean.Meta.Match.MatchEqns.eqnNames","line":11,"kind":"def","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.eqnNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.eqnNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">MatchEqns</span>.<span class=\"name\">eqnNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L10-L14","name":"Lean.Meta.Match.MatchEqns","line":10,"kind":"structure","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">MatchEqns</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L1-L1","name":"Lean.Meta.Match.MatchEqns.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">MatchEqns</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(eqnNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(splitterName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(splitterAltNumParams : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/MatchEqsExt.lean#L1-L1","name":"Lean.Meta.Match.MatchEqnsExtState.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Match</span>.<span class=\"name\">MatchEqnsExtState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns\">Lean.Meta.Match.MatchEqns</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState\">Lean.Meta.Match.MatchEqnsExtState</a></div></div>"}]}