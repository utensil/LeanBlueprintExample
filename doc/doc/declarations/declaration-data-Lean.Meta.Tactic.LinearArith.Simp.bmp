{"name":"Lean.Meta.Tactic.LinearArith.Simp","instances":[],"imports":["Init","Lean.Meta.Tactic.LinearArith.Basic","Lean.Meta.Tactic.LinearArith.Nat.Simp"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Simp.lean#L16-L24","name":"Lean.Meta.Linear.simp?","line":16,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Simp.html#Lean.Meta.Linear.simp?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Simp.html#Lean.Meta.Linear.simp?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">simp?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parent? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span>)</span></div></div>"}]}