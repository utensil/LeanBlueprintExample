{"name":"Lean.ScopedEnvExtension","instances":[{"typeNames":["Lean.ScopedEnvExtension.ScopedEntries"],"name":"Lean.ScopedEnvExtension.instInhabitedScopedEntries","className":"Inhabited"},{"typeNames":["Lean.ScopedEnvExtension.StateStack"],"name":"Lean.ScopedEnvExtension.instInhabitedStateStack","className":"Inhabited"},{"typeNames":["Lean.ScopedEnvExtension.Descr"],"name":"Lean.ScopedEnvExtension.instInhabitedDescr","className":"Inhabited"},{"typeNames":["Lean.ScopedEnvExtension"],"name":"Lean.instInhabitedScopedEnvExtension","className":"Inhabited"}],"imports":["Init","Lean.Environment","Lean.Data.NameTrie","Lean.Attributes"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L205-L213","name":"Lean.registerSimpleScopedEnvExtension","line":205,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.registerSimpleScopedEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.registerSimpleScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerSimpleScopedEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Lean.SimpleScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension\">Lean.SimpleScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L203-L203","name":"Lean.SimpleScopedEnvExtension.Descr.finalizeImport","line":203,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.finalizeImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.finalizeImport\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">finalizeImport</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Lean.SimpleScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L202-L202","name":"Lean.SimpleScopedEnvExtension.Descr.initial","line":202,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.initial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.initial\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">initial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Lean.SimpleScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L201-L201","name":"Lean.SimpleScopedEnvExtension.Descr.addEntry","line":201,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.addEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">addEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Lean.SimpleScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L200-L200","name":"Lean.SimpleScopedEnvExtension.Descr.name","line":200,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.name\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Lean.SimpleScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L199-L199","name":"Lean.SimpleScopedEnvExtension.Descr.mk","line":199,"kind":"ctor","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/ScopedEnvExtension.html#_auto._@.Lean.ScopedEnvExtension._hyg.2719\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addEntry : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(initial : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(finalizeImport : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\">Lean.SimpleScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L199-L203","name":"Lean.SimpleScopedEnvExtension.Descr","line":199,"kind":"structure","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span>.<span class=\"name\">Descr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L197-L197","name":"Lean.SimpleScopedEnvExtension","line":197,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">SimpleScopedEnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L193-L195","name":"Lean.activateScoped","line":193,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.activateScoped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.activateScoped\"><span class=\"name\">Lean</span>.<span class=\"name\">activateScoped</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> (<span class=\"fn\"><a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a></span>) <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(namespaceName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L189-L191","name":"Lean.popScope","line":189,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.popScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.popScope\"><span class=\"name\">Lean</span>.<span class=\"name\">popScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> (<span class=\"fn\"><a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a></span>) <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L185-L187","name":"Lean.pushScope","line":185,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.pushScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.pushScope\"><span class=\"name\">Lean</span>.<span class=\"name\">pushScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> (<span class=\"fn\"><a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a></span>) <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L179-L183","name":"Lean.ScopedEnvExtension.modifyState","line":179,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.modifyState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L159-L177","name":"Lean.ScopedEnvExtension.activateScoped","line":159,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.activateScoped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.activateScoped\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">activateScoped</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(namespaceName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L154-L157","name":"Lean.ScopedEnvExtension.getState","line":154,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.getState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L148-L152","name":"Lean.ScopedEnvExtension.add","line":148,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.add\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ResolveName.html#Lean.MonadResolveName\">Lean.MonadResolveName</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind.global\">Lean.AttributeKind.global</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L140-L146","name":"Lean.ScopedEnvExtension.addLocalEntry","line":140,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addLocalEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addLocalEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addLocalEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L137-L138","name":"Lean.ScopedEnvExtension.addScopedEntry","line":137,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addScopedEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addScopedEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addScopedEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(namespaceName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L134-L135","name":"Lean.ScopedEnvExtension.addEntry","line":134,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L128-L132","name":"Lean.ScopedEnvExtension.popScope","line":128,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.popScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.popScope\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">popScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L122-L126","name":"Lean.ScopedEnvExtension.pushScope","line":122,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.pushScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.pushScope\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">pushScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L120-L120","name":"Lean.registerScopedEnvExtension","line":120,"kind":"opaque","docLink":"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerScopedEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L106-L117","name":"Lean.registerScopedEnvExtensionUnsafe","line":106,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtensionUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtensionUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">registerScopedEnvExtensionUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L104-L104","name":"Lean.scopedEnvExtensionsRef","line":104,"kind":"opaque","docLink":"./Lean/ScopedEnvExtension.html#Lean.scopedEnvExtensionsRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.scopedEnvExtensionsRef\"><span class=\"name\">Lean</span>.<span class=\"name\">scopedEnvExtensionsRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L102-L102","name":"Lean.instInhabitedScopedEnvExtension","line":102,"kind":"instance","docLink":"./Lean/ScopedEnvExtension.html#Lean.instInhabitedScopedEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.instInhabitedScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedScopedEnvExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a</span></span>] → <span class=\"fn\">{<span class=\"fn\">a_1 </span>a_2 : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span> <span class=\"fn\">a_2</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L101-L101","name":"Lean.ScopedEnvExtension.ext","line":101,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">β</span></span>)\n  (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L100-L100","name":"Lean.ScopedEnvExtension.descr","line":100,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.descr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.descr\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">descr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L99-L99","name":"Lean.ScopedEnvExtension.mk","line":99,"kind":"ctor","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">β</span></span>)\n  (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\">Lean.ScopedEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L99-L102","name":"Lean.ScopedEnvExtension","line":99,"kind":"structure","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L92-L93","name":"Lean.ScopedEnvExtension.exportEntriesFn","line":92,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.exportEntriesFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.exportEntriesFn\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">exportEntriesFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L72-L90","name":"Lean.ScopedEnvExtension.addEntryFn","line":72,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntryFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addEntryFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L57-L70","name":"Lean.ScopedEnvExtension.addImportedFn","line":57,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addImportedFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addImportedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">addImportedFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(as : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">α</span></span>)</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L52-L55","name":"Lean.ScopedEnvExtension.ScopedEntries.insert","line":52,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ScopedEntries</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(scopedEntries : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">Lean.ScopedEnvExtension.ScopedEntries</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ns : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">Lean.ScopedEnvExtension.ScopedEntries</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L49-L50","name":"Lean.ScopedEnvExtension.mkInitial","line":49,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.mkInitial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.mkInitial\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">mkInitial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L40-L47","name":"Lean.ScopedEnvExtension.instInhabitedDescr","line":40,"kind":"instance","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">instInhabitedDescr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L38-L38","name":"Lean.ScopedEnvExtension.Descr.finalizeImport","line":38,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.finalizeImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.finalizeImport\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">finalizeImport</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L37-L37","name":"Lean.ScopedEnvExtension.Descr.addEntry","line":37,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.addEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">addEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L36-L36","name":"Lean.ScopedEnvExtension.Descr.toOLeanEntry","line":36,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.toOLeanEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.toOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">toOLeanEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L35-L35","name":"Lean.ScopedEnvExtension.Descr.ofOLeanEntry","line":35,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.ofOLeanEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.ofOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">ofOLeanEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">β</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L34-L34","name":"Lean.ScopedEnvExtension.Descr.mkInitial","line":34,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.mkInitial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.mkInitial\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">mkInitial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L33-L33","name":"Lean.ScopedEnvExtension.Descr.name","line":33,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.name\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L32-L32","name":"Lean.ScopedEnvExtension.Descr.mk","line":32,"kind":"ctor","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/ScopedEnvExtension.html#_auto._@.Lean.ScopedEnvExtension._hyg.261\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ofOLeanEntry : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toOLeanEntry : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addEntry : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(finalizeImport : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\">Lean.ScopedEnvExtension.Descr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L32-L38","name":"Lean.ScopedEnvExtension.Descr","line":32,"kind":"structure","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Descr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L30-L30","name":"Lean.ScopedEnvExtension.instInhabitedStateStack","line":30,"kind":"instance","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedStateStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedStateStack\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">instInhabitedStateStack</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a </span>a_1 a_2 : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span> <span class=\"fn\">a_2</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L29-L29","name":"Lean.ScopedEnvExtension.StateStack.newEntries","line":29,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.newEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.newEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span>.<span class=\"name\">newEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L28-L28","name":"Lean.ScopedEnvExtension.StateStack.scopedEntries","line":28,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.scopedEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.scopedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span>.<span class=\"name\">scopedEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">Lean.ScopedEnvExtension.ScopedEntries</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L27-L27","name":"Lean.ScopedEnvExtension.StateStack.stateStack","line":27,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.stateStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.stateStack\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span>.<span class=\"name\">stateStack</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">Lean.ScopedEnvExtension.State</a> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L26-L26","name":"Lean.ScopedEnvExtension.StateStack.mk","line":26,"kind":"ctor","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stateStack : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">Lean.ScopedEnvExtension.State</a> <span class=\"fn\">σ</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(scopedEntries : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">Lean.ScopedEnvExtension.ScopedEntries</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newEntries : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\">Lean.ScopedEnvExtension.StateStack</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L26-L30","name":"Lean.ScopedEnvExtension.StateStack","line":26,"kind":"structure","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">StateStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L24-L24","name":"Lean.ScopedEnvExtension.instInhabitedScopedEntries","line":24,"kind":"instance","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedScopedEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedScopedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">instInhabitedScopedEntries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">Lean.ScopedEnvExtension.ScopedEntries</a> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L23-L23","name":"Lean.ScopedEnvExtension.ScopedEntries.map","line":23,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.map\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ScopedEntries</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">Lean.ScopedEnvExtension.ScopedEntries</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/SMap.html#Lean.SMap\">Lean.SMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> (<span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">Lean.PArray</a> <span class=\"fn\">β</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L22-L22","name":"Lean.ScopedEnvExtension.ScopedEntries.mk","line":22,"kind":"ctor","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ScopedEntries</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./Lean/Data/SMap.html#Lean.SMap\">Lean.SMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> (<span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">Lean.PArray</a> <span class=\"fn\">β</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\">Lean.ScopedEnvExtension.ScopedEntries</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L22-L24","name":"Lean.ScopedEnvExtension.ScopedEntries","line":22,"kind":"structure","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">ScopedEntries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L20-L20","name":"Lean.ScopedEnvExtension.State.activeScopes","line":20,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.activeScopes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.activeScopes\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">activeScopes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">Lean.ScopedEnvExtension.State</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L19-L19","name":"Lean.ScopedEnvExtension.State.state","line":19,"kind":"def","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.state","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.state\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">state</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">Lean.ScopedEnvExtension.State</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L18-L18","name":"Lean.ScopedEnvExtension.State.mk","line":18,"kind":"ctor","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(state : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(activeScopes : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\">Lean.ScopedEnvExtension.State</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L18-L20","name":"Lean.ScopedEnvExtension.State","line":18,"kind":"structure","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L16-L16","name":"Lean.ScopedEnvExtension.Entry.scoped","line":16,"kind":"ctor","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry.scoped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry.scoped\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">scoped</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L15-L15","name":"Lean.ScopedEnvExtension.Entry.global","line":15,"kind":"ctor","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry.global","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry.global\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">global</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\">Lean.ScopedEnvExtension.Entry</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/ScopedEnvExtension.lean#L14-L16","name":"Lean.ScopedEnvExtension.Entry","line":14,"kind":"inductive","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry\"><span class=\"name\">Lean</span>.<span class=\"name\">ScopedEnvExtension</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}