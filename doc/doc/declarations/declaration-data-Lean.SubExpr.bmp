{"name":"Lean.SubExpr","instances":[{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instInhabitedPos","className":"Inhabited"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instOrdPos","className":"Ord"},{"typeNames":["Eq","Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instDecidableEqPos","className":"Decidable"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instToStringPos","className":"ToString"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instEmptyCollectionPos","className":"EmptyCollection"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instReprPos","className":"Repr"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instToJsonPos","className":"Lean.ToJson"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instFromJsonPos","className":"Lean.FromJson"},{"typeNames":["Lean.SubExpr"],"name":"Lean.instInhabitedSubExpr","className":"Inhabited"},{"typeNames":["Lean.FVarId"],"name":"Lean.SubExpr.instToJsonFVarId","className":"Lean.ToJson"},{"typeNames":["Lean.MVarId"],"name":"Lean.SubExpr.instToJsonMVarId","className":"Lean.ToJson"},{"typeNames":["Lean.FVarId"],"name":"Lean.SubExpr.instFromJsonFVarId","className":"Lean.FromJson"},{"typeNames":["Lean.MVarId"],"name":"Lean.SubExpr.instFromJsonMVarId","className":"Lean.FromJson"},{"typeNames":["Lean.SubExpr.GoalLocation"],"name":"Lean.SubExpr.instFromJsonGoalLocation","className":"Lean.FromJson"},{"typeNames":["Lean.SubExpr.GoalLocation"],"name":"Lean.SubExpr.instToJsonGoalLocation","className":"Lean.ToJson"},{"typeNames":["Lean.SubExpr.GoalsLocation"],"name":"Lean.SubExpr.instFromJsonGoalsLocation","className":"Lean.FromJson"},{"typeNames":["Lean.SubExpr.GoalsLocation"],"name":"Lean.SubExpr.instToJsonGoalsLocation","className":"Lean.ToJson"}],"imports":["Init","Lean.Meta.Basic","Lean.Data.Json","Lean.Data.RBMap"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L213-L219","name":"Lean.Expr.traverseAppWithPos","line":213,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.Expr.traverseAppWithPos","doc":"Same as `Expr.traverseApp` but also includes a\n`SubExpr.Pos` argument for tracking subexpression position. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.Expr.traverseAppWithPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">traverseAppWithPos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(visit : <span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L206-L206","name":"Lean.SubExpr.instToJsonGoalsLocation","line":206,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalsLocation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalsLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonGoalsLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L206-L206","name":"Lean.SubExpr.instFromJsonGoalsLocation","line":206,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalsLocation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalsLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonGoalsLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L205-L205","name":"Lean.SubExpr.GoalsLocation.loc","line":205,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.loc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.loc\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalsLocation</span>.<span class=\"name\">loc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">Lean.SubExpr.GoalLocation</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L204-L204","name":"Lean.SubExpr.GoalsLocation.mvarId","line":204,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mvarId","doc":"Which goal the location is in. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalsLocation</span>.<span class=\"name\">mvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L202-L206","name":"Lean.SubExpr.GoalsLocation","line":202,"kind":"structure","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation","doc":"A location within a goal state. It identifies a specific goal together with a `GoalLocation`\nwithin it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalsLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L198-L198","name":"Lean.SubExpr.instToJsonGoalLocation","line":198,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalLocation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonGoalLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">Lean.SubExpr.GoalLocation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L198-L198","name":"Lean.SubExpr.instFromJsonGoalLocation","line":198,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalLocation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonGoalLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">Lean.SubExpr.GoalLocation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L196-L197","name":"Lean.SubExpr.GoalLocation.target","line":196,"kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.target","doc":"A subexpression of the goal type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.target\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span>.<span class=\"name\">target</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">Lean.SubExpr.GoalLocation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L194-L195","name":"Lean.SubExpr.GoalLocation.hypValue","line":194,"kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypValue","doc":"A subexpression of the value of one of the let-bound hypotheses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypValue\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span>.<span class=\"name\">hypValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> → <span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">Lean.SubExpr.GoalLocation</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L192-L193","name":"Lean.SubExpr.GoalLocation.hypType","line":192,"kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypType","doc":"A subexpression of the type of one of the hypotheses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypType\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span>.<span class=\"name\">hypType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> → <span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">Lean.SubExpr.GoalLocation</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L190-L191","name":"Lean.SubExpr.GoalLocation.hyp","line":190,"kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hyp","doc":"One of the hypotheses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hyp\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span>.<span class=\"name\">hyp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">Lean.SubExpr.GoalLocation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L189-L198","name":"Lean.SubExpr.GoalLocation","line":189,"kind":"inductive","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation","doc":"A location within a goal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalLocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L186-L186","name":"Lean.SubExpr.instFromJsonMVarId","line":186,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonMVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonMVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonMVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L185-L185","name":"Lean.SubExpr.instFromJsonFVarId","line":185,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instFromJsonFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L184-L184","name":"Lean.SubExpr.instToJsonMVarId","line":184,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonMVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonMVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonMVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L183-L183","name":"Lean.SubExpr.instToJsonFVarId","line":183,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.instToJsonFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">instToJsonFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L178-L181","name":"Lean.SubExpr.bindingDomain!","line":178,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.bindingDomain!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.bindingDomain!\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">bindingDomain!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L173-L176","name":"Lean.SubExpr.bindingBody!","line":173,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.bindingBody!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.bindingBody!\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">bindingBody!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L171-L171","name":"Lean.SubExpr.PosMap","line":171,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.PosMap","doc":"Map from subexpr positions to values. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.PosMap\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">PosMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L168-L168","name":"Lean.SubExpr.isRoot","line":168,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.isRoot","doc":"Returns true if the selected subexpression is the topmost one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.isRoot\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">isRoot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L165-L165","name":"Lean.SubExpr.mkRoot","line":165,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.mkRoot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.mkRoot\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">mkRoot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L161-L161","name":"Lean.instInhabitedSubExpr","line":161,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.instInhabitedSubExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.instInhabitedSubExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedSubExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L160-L160","name":"Lean.SubExpr.pos","line":160,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.pos","doc":"The position of the subexpression within the root expression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L158-L158","name":"Lean.SubExpr.expr","line":158,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.expr","doc":"The subexpression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L156-L161","name":"Lean.SubExpr","line":156,"kind":"structure","docLink":"./Lean/SubExpr.html#Lean.SubExpr","doc":"A subexpression of some root expression. Both its value and its position\nwithin the root are stored. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L150-L150","name":"Lean.SubExpr.Pos.instFromJsonPos","line":150,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instFromJsonPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instFromJsonPos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instFromJsonPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L149-L149","name":"Lean.SubExpr.Pos.instToJsonPos","line":149,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToJsonPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToJsonPos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instToJsonPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L143-L144","name":"Lean.SubExpr.Pos.instReprPos","line":143,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instReprPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instReprPos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instReprPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L142-L142","name":"Lean.SubExpr.Pos.instEmptyCollectionPos","line":142,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instEmptyCollectionPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instEmptyCollectionPos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instEmptyCollectionPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L141-L141","name":"Lean.SubExpr.Pos.instToStringPos","line":141,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToStringPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToStringPos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instToStringPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L140-L140","name":"Lean.SubExpr.Pos.instDecidableEqPos","line":140,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instDecidableEqPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instDecidableEqPos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instDecidableEqPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L139-L139","name":"Lean.SubExpr.Pos.instOrdPos","line":139,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instOrdPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instOrdPos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instOrdPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L134-L137","name":"Lean.SubExpr.Pos.fromString!","line":134,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString!\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">fromString!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L127-L132","name":"Lean.SubExpr.Pos.fromString?","line":127,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString?\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">fromString?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L115-L119","name":"Lean.SubExpr.Pos.toString","line":115,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L111-L113","name":"Lean.SubExpr.Pos.pushNthBindingBody","line":111,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingBody\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushNthBindingBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(numBinders : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L107-L109","name":"Lean.SubExpr.Pos.pushNthBindingDomain","line":107,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingDomain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingDomain\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushNthBindingDomain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(binderIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L104-L105","name":"Lean.SubExpr.Pos.pushNaryArg","line":104,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryArg\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushNaryArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(numArgs : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(argIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L101-L102","name":"Lean.SubExpr.Pos.pushNaryFn","line":101,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushNaryFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(numArgs : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L99-L99","name":"Lean.SubExpr.Pos.pushProj","line":99,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushProj\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushProj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L98-L98","name":"Lean.SubExpr.Pos.pushAppArg","line":98,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppArg\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushAppArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L97-L97","name":"Lean.SubExpr.Pos.pushAppFn","line":97,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushAppFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L96-L96","name":"Lean.SubExpr.Pos.pushLetBody","line":96,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetBody\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushLetBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L95-L95","name":"Lean.SubExpr.Pos.pushLetValue","line":95,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L94-L94","name":"Lean.SubExpr.Pos.pushLetVarType","line":94,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetVarType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetVarType\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushLetVarType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L93-L93","name":"Lean.SubExpr.Pos.pushBindingBody","line":93,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingBody\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushBindingBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L92-L92","name":"Lean.SubExpr.Pos.pushBindingDomain","line":92,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingDomain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingDomain\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">pushBindingDomain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L89-L90","name":"Lean.SubExpr.Pos.toArray","line":89,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.toArray","doc":"Decodes a subexpression `Pos` as a sequence of coordinates `cs : Array Nat`. See `Pos.fromArray` for details.\n`cs[0]` is the coordinate for the root expression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.toArray\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">toArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L84-L85","name":"Lean.SubExpr.Pos.ofArray","line":84,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.ofArray","doc":"Creates a subexpression `Pos` from an array of 'coordinates'.\nEach coordinate is a number {0,1,2} expressing which child subexpression should be explored.\nThe first coordinate in the array corresponds to the root of the expression tree.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.ofArray\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">ofArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L79-L79","name":"Lean.SubExpr.Pos.append","line":79,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.append\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">append</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a> → <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L76-L77","name":"Lean.SubExpr.Pos.all","line":76,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.all","doc":"Returns true if `pred` is true for each coordinate in `p`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.all\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">all</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pred : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L72-L73","name":"Lean.SubExpr.Pos.depth","line":72,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.depth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.depth\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">depth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L69-L70","name":"Lean.SubExpr.Pos.foldrM","line":69,"kind":"opaque","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldrM","doc":"monad-fold over the position starting at the leaf and finishing at the root. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldrM\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">foldrM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L64-L66","name":"Lean.SubExpr.Pos.foldlM","line":64,"kind":"opaque","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldlM","doc":"monad-fold over the position starting at the root and heading to the leaf "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldlM\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">foldlM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L60-L61","name":"Lean.SubExpr.Pos.foldr","line":60,"kind":"opaque","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldr","doc":"Fold over the position starting at the leaf and heading to the root"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldr\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">foldr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L56-L57","name":"Lean.SubExpr.Pos.foldl","line":56,"kind":"opaque","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldl","doc":"Fold over the position starting at the root and heading to the leaf"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldl\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">foldl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L49-L51","name":"Lean.SubExpr.Pos.push","line":49,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.push\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L45-L47","name":"Lean.SubExpr.Pos.tail","line":45,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.tail\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">tail</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L41-L43","name":"Lean.SubExpr.Pos.head","line":41,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.head","doc":"The coordinate deepest in the Pos. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.head\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">head</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L38-L38","name":"Lean.SubExpr.Pos.isRoot","line":38,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.isRoot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.isRoot\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">isRoot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L36-L36","name":"Lean.SubExpr.Pos.instInhabitedPos","line":36,"kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instInhabitedPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.instInhabitedPos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">instInhabitedPos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L34-L34","name":"Lean.SubExpr.Pos.root","line":34,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.root","doc":"The Pos representing the root subexpression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.root\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">root</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L31-L31","name":"Lean.SubExpr.Pos.asNat","line":31,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.asNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.asNat\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">asNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L29-L29","name":"Lean.SubExpr.Pos.typeCoord","line":29,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.typeCoord","doc":"The coordinate `3 = maxChildren - 1` is\nreserved to denote the type of the expression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.typeCoord\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">typeCoord</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L25-L25","name":"Lean.SubExpr.Pos.maxChildren","line":25,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.maxChildren","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos.maxChildren\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span>.<span class=\"name\">maxChildren</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L21-L21","name":"Lean.SubExpr.Pos","line":21,"kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos","doc":"A position of a subexpression in an expression.\n\nWe use a simple encoding scheme for expression positions `Pos`:\nevery `Expr` constructor has at most 3 direct expression children. Considering an expression's type\nto be one extra child as well, we can injectively map a path of `childIdxs` to a natural number\nby computing the value of the 4-ary representation `1 :: childIdxs`, since n-ary representations\nwithout leading zeros are unique. Note that `pos` is initialized to `1` (case `childIdxs == []`).\n\nSee also `SubExpr`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">Pos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L1-L1","name":"Lean.SubExpr.mk","line":1,"kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr\">Lean.SubExpr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/SubExpr.lean#L1-L1","name":"Lean.SubExpr.GoalsLocation.mk","line":1,"kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">SubExpr</span>.<span class=\"name\">GoalsLocation</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(loc : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation\">Lean.SubExpr.GoalLocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></div></div>"}]}