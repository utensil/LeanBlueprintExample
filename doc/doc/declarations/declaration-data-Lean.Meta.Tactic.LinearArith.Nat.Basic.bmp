{"name":"Lean.Meta.Tactic.LinearArith.Nat.Basic","instances":[{"typeNames":["Nat.Linear.Expr"],"name":"Lean.Meta.Linear.Nat.instReprExpr","className":"Repr"},{"typeNames":["Nat.Linear.ExprCnstr"],"name":"Lean.Meta.Linear.Nat.instReprExprCnstr","className":"Repr"},{"typeNames":["Nat.Linear.PolyCnstr"],"name":"Lean.Meta.Linear.Nat.instReprPolyCnstr","className":"Repr"},{"typeNames":["Lean.Meta.Linear.Nat.LinearExpr"],"name":"Lean.Meta.Linear.Nat.instToExprLinearExpr","className":"Lean.ToExpr"},{"typeNames":["Lean.Meta.Linear.Nat.LinearCnstr"],"name":"Lean.Meta.Linear.Nat.instToExprLinearCnstr","className":"Lean.ToExpr"}],"imports":["Init","Lean.Meta.Check","Lean.Meta.Offset","Lean.Meta.KExprMap"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L158-L159","name":"Lean.Meta.Linear.Nat.reflTrue","line":158,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.reflTrue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.reflTrue\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">reflTrue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L155-L156","name":"Lean.Meta.Linear.Nat.toContextExpr","line":155,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.toContextExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.toContextExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">toContextExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L147-L149","name":"Lean.Meta.Linear.Nat.ToLinear.run","line":147,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L113-L145","name":"Lean.Meta.Linear.Nat.ToLinear.toLinearCnstr?","line":113,"kind":"opaque","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearCnstr?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearCnstr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">toLinearCnstr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\">Lean.Meta.Linear.Nat.LinearCnstr</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L83-L111","name":"Lean.Meta.Linear.Nat.ToLinear.toLinearExpr.visit","line":83,"kind":"opaque","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">toLinearExpr</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L74-L111","name":"Lean.Meta.Linear.Nat.ToLinear.toLinearExpr","line":74,"kind":"opaque","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">toLinearExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L65-L72","name":"Lean.Meta.Linear.Nat.ToLinear.addAsVar","line":65,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.addAsVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.addAsVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">addAsVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L61-L61","name":"Lean.Meta.Linear.Nat.ToLinear.M","line":61,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L59-L59","name":"Lean.Meta.Linear.Nat.ToLinear.State.vars","line":59,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State\">Lean.Meta.Linear.Nat.ToLinear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L58-L58","name":"Lean.Meta.Linear.Nat.ToLinear.State.varMap","line":58,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.varMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.varMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span>.<span class=\"name\">varMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State\">Lean.Meta.Linear.Nat.ToLinear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/KExprMap.html#Lean.Meta.KExprMap\">Lean.Meta.KExprMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L57-L59","name":"Lean.Meta.Linear.Nat.ToLinear.State","line":57,"kind":"structure","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L49-L53","name":"Lean.Meta.Linear.Nat.LinearCnstr.toArith","line":49,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toArith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toArith\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearCnstr</span>.<span class=\"name\">toArith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\">Lean.Meta.Linear.Nat.LinearCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L41-L47","name":"Lean.Meta.Linear.Nat.LinearExpr.toArith","line":41,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toArith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toArith\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearExpr</span>.<span class=\"name\">toArith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L36-L38","name":"Lean.Meta.Linear.Nat.instToExprLinearCnstr","line":36,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instToExprLinearCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\">Lean.Meta.Linear.Nat.LinearCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L33-L34","name":"Lean.Meta.Linear.Nat.LinearCnstr.toExpr","line":33,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearCnstr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\">Lean.Meta.Linear.Nat.LinearCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L29-L31","name":"Lean.Meta.Linear.Nat.instToExprLinearExpr","line":29,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instToExprLinearExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L20-L27","name":"Lean.Meta.Linear.Nat.LinearExpr.toExpr","line":20,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearExpr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L18-L18","name":"Lean.Meta.Linear.Nat.PolyExpr","line":18,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.PolyExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.PolyExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">PolyExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L17-L17","name":"Lean.Meta.Linear.Nat.LinearCnstr","line":17,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L16-L16","name":"Lean.Meta.Linear.Nat.LinearExpr","line":16,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L14-L14","name":"Lean.Meta.Linear.Nat.instReprPolyCnstr","line":14,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprPolyCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprPolyCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L13-L13","name":"Lean.Meta.Linear.Nat.instReprExprCnstr","line":13,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExprCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExprCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprExprCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L12-L12","name":"Lean.Meta.Linear.Nat.instReprExpr","line":12,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L1-L1","name":"Lean.Meta.Linear.Nat.ToLinear.State.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(varMap : <span class=\"fn\"><a href=\"./Lean/Meta/KExprMap.html#Lean.Meta.KExprMap\">Lean.Meta.KExprMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State\">Lean.Meta.Linear.Nat.ToLinear.State</a></div></div>"}]}