{"name":"Lean.Meta.Match.Value","instances":[],"imports":["Init","Lean.Expr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/Value.lean#L44-L45","name":"Lean.Meta.isMatchValue","line":44,"kind":"def","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.isMatchValue","doc":"Return true is `e` is a term that should be processed by the `match`-compiler using `casesValues` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/Value.html#Lean.Meta.isMatchValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">isMatchValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/Value.lean#L37-L40","name":"Lean.Meta.foldPatValue","line":37,"kind":"def","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.foldPatValue","doc":"The frontend expands uint numerals occurring in patterns into `UInt*.mk ..` contructor applications.\nThis method convert them back into `UInt*.ofNat ..` applications.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/Value.html#Lean.Meta.foldPatValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">foldPatValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/Value.lean#L30-L31","name":"Lean.Meta.isUIntPatLit","line":30,"kind":"def","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.isUIntPatLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/Value.html#Lean.Meta.isUIntPatLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">isUIntPatLit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/Value.lean#L21-L28","name":"Lean.Meta.isUIntPatLit?","line":21,"kind":"def","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.isUIntPatLit?","doc":"Return `some (typeName, numLit)` if `v` is of the form `UInt*.mk (Fin.ofNat _ numLit)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/Value.html#Lean.Meta.isUIntPatLit?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">isUIntPatLit?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/Value.lean#L17-L18","name":"Lean.Meta.isFinPatLit","line":17,"kind":"def","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.isFinPatLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/Value.html#Lean.Meta.isFinPatLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">isFinPatLit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}