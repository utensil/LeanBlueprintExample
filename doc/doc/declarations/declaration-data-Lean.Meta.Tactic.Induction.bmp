{"name":"Lean.Meta.Tactic.Induction","instances":[{"typeNames":["Lean.Meta.InductionSubgoal"],"name":"Lean.Meta.instInhabitedInductionSubgoal","className":"Inhabited"},{"typeNames":["Lean.Meta.AltVarNames"],"name":"Lean.Meta.instInhabitedAltVarNames","className":"Inhabited"}],"imports":["Init","Lean.Meta.RecursorInfo","Lean.Meta.SynthInstance","Lean.Meta.Tactic.Util","Lean.Meta.Tactic.Revert","Lean.Meta.Tactic.Intro","Lean.Meta.Tactic.Clear","Lean.Meta.Tactic.FVarSubst"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L210-L211","name":"Lean.Meta.induction","line":210,"kind":"def","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.induction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.induction\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">induction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(majorFVarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(recursorName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(givenNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames\">Lean.Meta.AltVarNames</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal\">Lean.Meta.InductionSubgoal</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L125-L207","name":"Lean.MVarId.induction","line":125,"kind":"def","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.MVarId.induction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.MVarId.induction\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">induction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(majorFVarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(recursorName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(givenNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames\">Lean.Meta.AltVarNames</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal\">Lean.Meta.InductionSubgoal</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L53-L53","name":"Lean.Meta.instInhabitedAltVarNames","line":53,"kind":"instance","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.instInhabitedAltVarNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.instInhabitedAltVarNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedAltVarNames</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames\">Lean.Meta.AltVarNames</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L52-L52","name":"Lean.Meta.AltVarNames.varNames","line":52,"kind":"def","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames.varNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames.varNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AltVarNames</span>.<span class=\"name\">varNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames\">Lean.Meta.AltVarNames</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L51-L51","name":"Lean.Meta.AltVarNames.explicit","line":51,"kind":"def","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames.explicit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames.explicit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AltVarNames</span>.<span class=\"name\">explicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames\">Lean.Meta.AltVarNames</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L50-L53","name":"Lean.Meta.AltVarNames","line":50,"kind":"structure","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AltVarNames</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L42-L42","name":"Lean.Meta.instInhabitedInductionSubgoal","line":42,"kind":"instance","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.instInhabitedInductionSubgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.instInhabitedInductionSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedInductionSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal\">Lean.Meta.InductionSubgoal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L41-L41","name":"Lean.Meta.InductionSubgoal.subst","line":41,"kind":"def","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal.subst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal.subst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InductionSubgoal</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal\">Lean.Meta.InductionSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">Lean.Meta.FVarSubst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L40-L40","name":"Lean.Meta.InductionSubgoal.fields","line":40,"kind":"def","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal.fields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal.fields\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InductionSubgoal</span>.<span class=\"name\">fields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal\">Lean.Meta.InductionSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L39-L39","name":"Lean.Meta.InductionSubgoal.mvarId","line":39,"kind":"def","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal.mvarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal.mvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InductionSubgoal</span>.<span class=\"name\">mvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal\">Lean.Meta.InductionSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L38-L42","name":"Lean.Meta.InductionSubgoal","line":38,"kind":"structure","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InductionSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L1-L1","name":"Lean.Meta.AltVarNames.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AltVarNames</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(explicit : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(varNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames\">Lean.Meta.AltVarNames</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Tactic/Induction.lean#L1-L1","name":"Lean.Meta.InductionSubgoal.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">InductionSubgoal</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fields : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subst : <a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">Lean.Meta.FVarSubst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal\">Lean.Meta.InductionSubgoal</a></div></div>"}]}