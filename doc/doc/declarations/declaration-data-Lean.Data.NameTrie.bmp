{"name":"Lean.Data.NameTrie","instances":[{"typeNames":["Lean.NamePart"],"name":"Lean.instToStringNamePart","className":"ToString"},{"typeNames":["Lean.NameTrie"],"name":"Lean.instInhabitedNameTrie","className":"Inhabited"},{"typeNames":["Lean.NameTrie"],"name":"Lean.instEmptyCollectionNameTrie","className":"EmptyCollection"}],"imports":["Init","Lean.Data.PrefixTree"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L69-L70","name":"Lean.NameTrie.forM","line":69,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.forM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NameTrie.forM\"><span class=\"name\">Lean</span>.<span class=\"name\">NameTrie</span>.<span class=\"name\">forM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L65-L66","name":"Lean.NameTrie.forMatchingM","line":65,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.forMatchingM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NameTrie.forMatchingM\"><span class=\"name\">Lean</span>.<span class=\"name\">NameTrie</span>.<span class=\"name\">forMatchingM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L61-L62","name":"Lean.NameTrie.foldM","line":61,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.foldM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NameTrie.foldM\"><span class=\"name\">Lean</span>.<span class=\"name\">NameTrie</span>.<span class=\"name\">foldM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L57-L58","name":"Lean.NameTrie.foldMatchingM","line":57,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.foldMatchingM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NameTrie.foldMatchingM\"><span class=\"name\">Lean</span>.<span class=\"name\">NameTrie</span>.<span class=\"name\">foldMatchingM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L53-L54","name":"Lean.NameTrie.find?","line":53,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.find?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NameTrie.find?\"><span class=\"name\">Lean</span>.<span class=\"name\">NameTrie</span>.<span class=\"name\">find?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L50-L51","name":"Lean.instEmptyCollectionNameTrie","line":50,"kind":"instance","docLink":"./Lean/Data/NameTrie.html#Lean.instEmptyCollectionNameTrie","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.instEmptyCollectionNameTrie\"><span class=\"name\">Lean</span>.<span class=\"name\">instEmptyCollectionNameTrie</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> (<span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L47-L48","name":"Lean.instInhabitedNameTrie","line":47,"kind":"instance","docLink":"./Lean/Data/NameTrie.html#Lean.instInhabitedNameTrie","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.instInhabitedNameTrie\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedNameTrie</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L44-L45","name":"Lean.NameTrie.empty","line":44,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NameTrie.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">NameTrie</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L41-L42","name":"Lean.NameTrie.insert","line":41,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NameTrie.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">NameTrie</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\">Lean.NameTrie</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L31-L31","name":"Lean.NameTrie","line":31,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NameTrie\"><span class=\"name\">Lean</span>.<span class=\"name\">NameTrie</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L25-L29","name":"Lean.NamePart.lt","line":25,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NamePart.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NamePart.lt\"><span class=\"name\">Lean</span>.<span class=\"name\">NamePart</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NamePart\">Lean.NamePart</a> → <a href=\"./Lean/Data/NameTrie.html#Lean.NamePart\">Lean.NamePart</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L19-L23","name":"Lean.NamePart.cmp","line":19,"kind":"def","docLink":"./Lean/Data/NameTrie.html#Lean.NamePart.cmp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NamePart.cmp\"><span class=\"name\">Lean</span>.<span class=\"name\">NamePart</span>.<span class=\"name\">cmp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameTrie.html#Lean.NamePart\">Lean.NamePart</a> → <a href=\"./Lean/Data/NameTrie.html#Lean.NamePart\">Lean.NamePart</a> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L14-L17","name":"Lean.instToStringNamePart","line":14,"kind":"instance","docLink":"./Lean/Data/NameTrie.html#Lean.instToStringNamePart","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.instToStringNamePart\"><span class=\"name\">Lean</span>.<span class=\"name\">instToStringNamePart</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Data/NameTrie.html#Lean.NamePart\">Lean.NamePart</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L12-L12","name":"Lean.NamePart.num","line":12,"kind":"ctor","docLink":"./Lean/Data/NameTrie.html#Lean.NamePart.num","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NamePart.num\"><span class=\"name\">Lean</span>.<span class=\"name\">NamePart</span>.<span class=\"name\">num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameTrie.html#Lean.NamePart\">Lean.NamePart</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L11-L11","name":"Lean.NamePart.str","line":11,"kind":"ctor","docLink":"./Lean/Data/NameTrie.html#Lean.NamePart.str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NamePart.str\"><span class=\"name\">Lean</span>.<span class=\"name\">NamePart</span>.<span class=\"name\">str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameTrie.html#Lean.NamePart\">Lean.NamePart</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Data/NameTrie.lean#L10-L12","name":"Lean.NamePart","line":10,"kind":"inductive","docLink":"./Lean/Data/NameTrie.html#Lean.NamePart","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameTrie.html#Lean.NamePart\"><span class=\"name\">Lean</span>.<span class=\"name\">NamePart</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}