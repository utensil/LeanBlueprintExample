{"name":"Lake.Build.Common","instances":[],"imports":["Init","Lake.Build.Monad","Lake.Build.Actions"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L181-L192","name":"Lake.computeDynlibOfShared","line":181,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.computeDynlibOfShared","doc":"Construct a `Dynlib` object for a shared library target. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.computeDynlibOfShared\"><span class=\"name\">Lake</span>.<span class=\"name\">computeDynlibOfShared</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sharedLibTarget : <span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Lake/Build/Facets.html#Lake.Dynlib\">Lake.Dynlib</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L163-L178","name":"Lake.buildLeanSharedLibOfStatic","line":163,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanSharedLibOfStatic","doc":"Build a shared library from a static library using `leanc`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanSharedLibOfStatic\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanSharedLibOfStatic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(staticLibJob : <span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weakArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L154-L160","name":"Lake.buildLeanExe","line":154,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanExe","doc":"Build an executable by linking the results of `linkJobs` using `leanc`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanExe\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanExe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(exeFile : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(linkJobs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weakArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L145-L151","name":"Lake.buildLeanSharedLib","line":145,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanSharedLib","doc":"Build a shared library by linking the results of `linkJobs` using `leanc`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanSharedLib\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanSharedLib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(libFile : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(linkJobs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weakArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L138-L142","name":"Lake.buildStaticLib","line":138,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildStaticLib","doc":"Build a static library from object file jobs using the `ar` packaged with Lean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildStaticLib\"><span class=\"name\">Lake</span>.<span class=\"name\">buildStaticLib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(libFile : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oFileJobs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L130-L135","name":"Lake.buildLeanO","line":130,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanO","doc":"Build an object file from a source fie job (i.e, a `lean -c` output) using `leanc`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanO\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oFile : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(srcJob : <span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weakArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L121-L127","name":"Lake.buildO","line":121,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildO","doc":"Build an object file from a source file job using `compiler`. The invocation is:\n\n```\ncompiler -c -o oFile srcFile weakArgs... traceArgs...\n```\n\nThe `traceArgs` are included as part of the dependency trace hash, whereas\nthe `weakArgs` are not. Thus, system-dependent options like `-I` or `-L` should\nbe `weakArgs` to avoid build artifact incompatibility between systems\n(i.e., a change in the file path should not cause a rebuild).\n\nYou can add more components to the trace via `extraDepTrace`,\nwhich will be computed in the resulting `BuildJob` before building.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildO\"><span class=\"name\">Lake</span>.<span class=\"name\">buildO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oFile : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(srcJob : <span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weakArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(compiler : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> <span class=\"fn\">{ <span class=\"fn\">toString</span> := <span class=\"fn\">&quotcc&quot</span> }</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraDepTrace : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a></span>) (<span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">Lake.BuildTrace.nil</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L103-L104","name":"Lake.inputFile","line":103,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.inputFile","doc":"A build job for file that is expected to already exist (e.g., a source file). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.inputFile\"><span class=\"name\">Lake</span>.<span class=\"name\">inputFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(path : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L95-L98","name":"Lake.buildFileAfterDepArray","line":95,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileAfterDepArray","doc":"Build `file` using `build` after `deps` have built if any of their traces change. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileAfterDepArray\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileAfterDepArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(file : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(deps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(build : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraDepTrace : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a></span>) (<span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">Lake.BuildTrace.nil</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L89-L92","name":"Lake.buildFileAfterDepList","line":89,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileAfterDepList","doc":"Build `file` using `build` after `deps` have built if any of their traces change. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileAfterDepList\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileAfterDepList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(file : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(deps : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(build : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraDepTrace : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a></span>) (<span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">Lake.BuildTrace.nil</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L80-L86","name":"Lake.buildFileAfterDep","line":80,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileAfterDep","doc":"Build `file` using `build` after `dep` completes if the dependency's\ntrace (and/or `extraDepTrace`) has changed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileAfterDep\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileAfterDep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(file : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(dep : <span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(build : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraDepTrace : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a></span>) (<span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">Lake.BuildTrace.nil</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.SchedulerM\">Lake.SchedulerM</a> (<span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L66-L74","name":"Lake.buildFileUnlessUpToDate","line":66,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate","doc":"Build `file` using `build` unless it already exists and `depTrace` matches\nthe trace stored in the `.trace` file. If built, save the new `depTrace` and\ncache `file`'s hash in a `.hash` file. Otherwise, try to fetch the hash from\nthe `.hash` file using `fetchFileTrace`.\n\nBy example, for `file := \"foo.c\"`, compare `depTrace` with that in `foo.c.trace`\nand cache the hash using `foo.c.hash`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileUnlessUpToDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(file : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(depTrace : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(build : <span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L51-L55","name":"Lake.cacheFileHash","line":51,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.cacheFileHash","doc":"Compute the hash of a file and save it to a `.hash` file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.cacheFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">cacheFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(file : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Lake.Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L38-L48","name":"Lake.fetchFileTrace","line":38,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.fetchFileTrace","doc":"Fetch the trace of a file that may have its hash already cached in a `.hash` file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.fetchFileTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">fetchFileTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(file : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildM\">Lake.BuildM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L31-L35","name":"Lake.buildUnlessUpToDate","line":31,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildUnlessUpToDate","doc":"Build `info` unless it already exists and `depTrace` matches that\nof the `traceFile`. If rebuilt, save the new `depTrace` to the `tracefile`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildUnlessUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">buildUnlessUpToDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">Lake.CheckExists</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">Lake.GetMTime</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(info : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(depTrace : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceFile : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(build : <span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.JobM\">Lake.JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.JobM\">Lake.JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Common.lean#L20-L25","name":"Lake.BuildTrace.checkUpToDate","line":20,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildTrace.checkUpToDate","doc":"Check if the `info` is up-to-date by comparing `depTrace` with `traceFile`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildTrace.checkUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">checkUpToDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">Lake.CheckExists</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">Lake.GetMTime</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(info : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(depTrace : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceFile : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.JobM\">Lake.JobM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}