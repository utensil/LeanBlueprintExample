{"name":"Lean.Compiler.LCNF.CSE","instances":[{"typeNames":["Lean.Compiler.LCNF.CSE.M","Bool.false"],"name":"Lean.Compiler.LCNF.CSE.instMonadFVarSubstMFalse","className":"Lean.Compiler.LCNF.MonadFVarSubst"},{"typeNames":["Lean.Compiler.LCNF.CSE.M"],"name":"Lean.Compiler.LCNF.CSE.instMonadFVarSubstStateM","className":"Lean.Compiler.LCNF.MonadFVarSubstState"}],"imports":["Init","Lean.Compiler.LCNF.CompilerM","Lean.Compiler.LCNF.ToExpr","Lean.Compiler.LCNF.PassManager"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L107-L108","name":"Lean.Compiler.LCNF.cse","line":107,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.cse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.cse\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">cse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(phase : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase\">Lean.Compiler.LCNF.Phase</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.Phase.base\">Lean.Compiler.LCNF.Phase.base</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(occurrence : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PassManager.html#Lean.Compiler.LCNF.Pass\">Lean.Compiler.LCNF.Pass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L103-L105","name":"Lean.Compiler.LCNF.Decl.cse","line":103,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Decl.cse","doc":"Common sub-expression elimination\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Decl.cse\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">cse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">Lean.Compiler.LCNF.CompilerM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L55-L96","name":"Lean.Compiler.LCNF.Code.cse.go","line":55,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Code</span>.<span class=\"name\">cse</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(code : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L49-L53","name":"Lean.Compiler.LCNF.Code.cse.goFunDecl","line":49,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse.goFunDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse.goFunDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Code</span>.<span class=\"name\">cse</span>.<span class=\"name\">goFunDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">Lean.Compiler.LCNF.FunDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">Lean.Compiler.LCNF.FunDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L46-L96","name":"Lean.Compiler.LCNF.Code.cse","line":46,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.Code.cse\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Code</span>.<span class=\"name\">cse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(code : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">Lean.Compiler.LCNF.CompilerM</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L42-L44","name":"Lean.Compiler.LCNF.CSE.replaceFun","line":42,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.replaceFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.replaceFun\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">replaceFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">Lean.Compiler.LCNF.FunDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L38-L40","name":"Lean.Compiler.LCNF.CSE.replaceLet","line":38,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.replaceLet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.replaceLet\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">replaceLet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">Lean.Compiler.LCNF.LetDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L34-L36","name":"Lean.Compiler.LCNF.CSE.withNewScope","line":34,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.withNewScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.withNewScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">withNewScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Î± : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a> <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L31-L32","name":"Lean.Compiler.LCNF.CSE.addEntry","line":31,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.addEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">addEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L28-L29","name":"Lean.Compiler.LCNF.CSE.getSubst","line":28,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.getSubst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.getSubst\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">getSubst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a> <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.FVarSubst\">Lean.Compiler.LCNF.FVarSubst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L25-L26","name":"Lean.Compiler.LCNF.CSE.instMonadFVarSubstStateM","line":25,"kind":"instance","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.instMonadFVarSubstStateM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.instMonadFVarSubstStateM\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">instMonadFVarSubstStateM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.MonadFVarSubstState\">Lean.Compiler.LCNF.MonadFVarSubstState</a> <a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L22-L23","name":"Lean.Compiler.LCNF.CSE.instMonadFVarSubstMFalse","line":22,"kind":"instance","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.instMonadFVarSubstMFalse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.instMonadFVarSubstMFalse\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">instMonadFVarSubstMFalse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.MonadFVarSubst\">Lean.Compiler.LCNF.MonadFVarSubst</a> <a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\">Lean.Compiler.LCNF.CSE.M</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L20-L20","name":"Lean.Compiler.LCNF.CSE.M","line":20,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Î± : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L18-L18","name":"Lean.Compiler.LCNF.CSE.State.subst","line":18,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.subst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.subst\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">State</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State\">Lean.Compiler.LCNF.CSE.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.FVarSubst\">Lean.Compiler.LCNF.FVarSubst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L17-L17","name":"Lean.Compiler.LCNF.CSE.State.map","line":17,"kind":"def","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.map\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">State</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State\">Lean.Compiler.LCNF.CSE.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L16-L18","name":"Lean.Compiler.LCNF.CSE.State","line":16,"kind":"structure","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Compiler/LCNF/CSE.lean#L1-L1","name":"Lean.Compiler.LCNF.CSE.State.mk","line":1,"kind":"ctor","docLink":"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">CSE</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subst : <a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.FVarSubst\">Lean.Compiler.LCNF.FVarSubst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/CSE.html#Lean.Compiler.LCNF.CSE.State\">Lean.Compiler.LCNF.CSE.State</a></div></div>"}]}