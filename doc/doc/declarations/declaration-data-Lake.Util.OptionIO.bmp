{"name":"Lake.Util.OptionIO","instances":[{"typeNames":["Lake.OptionIO"],"name":"Lake.instMonadOptionIO","className":"Monad"},{"typeNames":["BaseIO","Lake.OptionIO"],"name":"Lake.instMonadLiftBaseIOOptionIO","className":"MonadLift"},{"typeNames":["Lake.OptionIO"],"name":"Lake.OptionIO.instAlternativeOptionIO","className":"Alternative"},{"typeNames":["Lake.OptionIO"],"name":"Lake.OptionIO.OptionIO.finally","className":"MonadFinally"}],"imports":["Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L49-L50","name":"Lake.OptionIO.asTask","line":49,"kind":"def","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.asTask","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.asTask\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.dedicated\">Task.Priority.dedicated</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> (<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L43-L47","name":"Lake.OptionIO.OptionIO.finally","line":43,"kind":"instance","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.OptionIO.finally","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.OptionIO.finally\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">finally</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L39-L41","name":"Lake.OptionIO.instAlternativeOptionIO","line":39,"kind":"instance","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.instAlternativeOptionIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.instAlternativeOptionIO\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">instAlternativeOptionIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Basic.html#Alternative\">Alternative</a> <a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L36-L37","name":"Lake.OptionIO.orElse","line":36,"kind":"def","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.orElse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.orElse\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">orElse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L33-L34","name":"Lake.OptionIO.failure","line":33,"kind":"def","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.failure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.failure\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">failure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L30-L31","name":"Lake.OptionIO.catchFailure","line":30,"kind":"def","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.catchFailure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.catchFailure\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">catchFailure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L27-L28","name":"Lake.OptionIO.toIO","line":27,"kind":"def","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.toIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.toIO\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">toIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L24-L25","name":"Lake.OptionIO.toEIO","line":24,"kind":"def","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.toEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.toEIO\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">toEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L19-L22","name":"Lake.OptionIO.toBaseIO","line":19,"kind":"def","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.toBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.toBaseIO\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">toBaseIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L16-L17","name":"Lake.OptionIO.mk","line":16,"kind":"def","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L12-L12","name":"Lake.instMonadLiftBaseIOOptionIO","line":12,"kind":"instance","docLink":"./Lake/Util/OptionIO.html#Lake.instMonadLiftBaseIOOptionIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.instMonadLiftBaseIOOptionIO\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadLiftBaseIOOptionIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L11-L11","name":"Lake.instMonadOptionIO","line":11,"kind":"instance","docLink":"./Lake/Util/OptionIO.html#Lake.instMonadOptionIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.instMonadOptionIO\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadOptionIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <a href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\">Lake.OptionIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Util/OptionIO.lean#L9-L9","name":"Lake.OptionIO","line":9,"kind":"def","docLink":"./Lake/Util/OptionIO.html#Lake.OptionIO","doc":"Conceptually identical to `OptionT BaseIO`, but practically more efficient. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Util/OptionIO.html#Lake.OptionIO\"><span class=\"name\">Lake</span>.<span class=\"name\">OptionIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"}]}