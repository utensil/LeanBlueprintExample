{"name":"Lean.Elab.PreDefinition.Main","instances":[{"typeNames":["Lean.Elab.TerminationHints"],"name":"Lean.Elab.instInhabitedTerminationHints","className":"Inhabited"}],"imports":["Init","Lean.Util.SCC","Lean.Elab.PreDefinition.Basic","Lean.Elab.PreDefinition.Structural","Lean.Elab.PreDefinition.WF.Main","Lean.Elab.PreDefinition.MkInhabitant"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PreDefinition/Main.lean#L97-L164","name":"Lean.Elab.addPreDefinitions","line":97,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.addPreDefinitions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.addPreDefinitions\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">addPreDefinitions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hints : <a href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints\">Lean.Elab.TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PreDefinition/Main.lean#L19-L19","name":"Lean.Elab.instInhabitedTerminationHints","line":19,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.instInhabitedTerminationHints","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.instInhabitedTerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedTerminationHints</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints\">Lean.Elab.TerminationHints</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PreDefinition/Main.lean#L18-L18","name":"Lean.Elab.TerminationHints.decreasingBy?","line":18,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints.decreasingBy?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints.decreasingBy?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">decreasingBy?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints\">Lean.Elab.TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PreDefinition/Main.lean#L17-L17","name":"Lean.Elab.TerminationHints.terminationBy?","line":17,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints.terminationBy?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints.terminationBy?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">terminationBy?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints\">Lean.Elab.TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PreDefinition/Main.lean#L16-L19","name":"Lean.Elab.TerminationHints","line":16,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/PreDefinition/Main.lean#L1-L1","name":"Lean.Elab.TerminationHints.mk","line":1,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(terminationBy? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decreasingBy? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints\">Lean.Elab.TerminationHints</a></div></div>"}]}