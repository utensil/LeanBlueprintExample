{"name":"Lean.Elab.Command","instances":[{"typeNames":["Lean.Elab.Command.Scope"],"name":"Lean.Elab.Command.instInhabitedScope","className":"Inhabited"},{"typeNames":["Lean.Elab.Command.State"],"name":"Lean.Elab.Command.instNonemptyState","className":"Nonempty"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadCommandElabM","className":"Monad"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadInfoTreeCommandElabM","className":"Lean.Elab.MonadInfoTree"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadEnvCommandElabM","className":"Lean.MonadEnv"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadOptionsCommandElabM","className":"Lean.MonadOptions"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instAddMessageContextCommandElabM","className":"Lean.AddMessageContext"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadRefCommandElabM","className":"Lean.MonadRef"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadTraceCommandElabM","className":"Lean.MonadTrace"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instAddErrorMessageContextCommandElabM","className":"Lean.AddErrorMessageContext"},{"typeNames":["IO","Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadLiftTIOCommandElabM","className":"MonadLiftT"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadResolveNameCommandElabM","className":"Lean.MonadResolveName"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadLogCommandElabM","className":"Lean.MonadLog"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadQuotationCommandElabM","className":"Lean.MonadQuotation"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadMacroAdapterCommandElabM","className":"Lean.Elab.MonadMacroAdapter"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instMonadRecDepthCommandElabM","className":"Lean.MonadRecDepth"},{"typeNames":["Lean.Elab.Command.CommandElabM"],"name":"Lean.Elab.Command.instInhabitedCommandElabM","className":"Inhabited"}],"imports":["Init","Lean.Elab.Binders","Lean.Elab.SyntheticMVars"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L494-L501","name":"Lean.Elab.Command.expandDeclId","line":494,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.expandDeclId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.expandDeclId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">expandDeclId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declId : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult\">Lean.Elab.ExpandDeclIdResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L486-L492","name":"Lean.Elab.Command.addUnivLevel","line":486,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.addUnivLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.addUnivLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">addUnivLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(idStx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L483-L484","name":"Lean.Elab.Command.getLevelNames","line":483,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getLevelNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.getLevelNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">getLevelNames</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L473-L481","name":"Lean.Elab.Command.withScope","line":473,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.withScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.withScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">withScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a> → <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L466-L471","name":"Lean.Elab.Command.modifyScope","line":466,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.modifyScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.modifyScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">modifyScope</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a> → <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L463-L464","name":"Lean.Elab.Command.getScopes","line":463,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getScopes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.getScopes\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">getScopes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L457-L458","name":"Lean.Elab.Command.catchExceptions","line":457,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.catchExceptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.catchExceptions\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">catchExceptions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabCoreM\">Lean.Elab.Command.CommandElabCoreM</a> <a href=\"./Init/Prelude.html#Empty\">Empty</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L438-L455","name":"Lean.Elab.Command.runTermElabM","line":438,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.runTermElabM","doc":"Execute the monadic action `elabFn xs` as a `CommandElabM` monadic action, where `xs` are free variables\ncorresponding to all active scoped variables declared using the `variable` command.\n\nThis method is similar to `liftTermElabM`, but it elaborates all scoped variables declared using the `variable`\ncommand.\n\nExample:\n```\nimport Lean\n\nopen Lean Elab Command Meta\n\nvariable {α : Type u} {f : α → α}\nvariable (n : Nat)\n\n#eval\n  runTermElabM fun xs => do\n    for x in xs do\n      IO.println s!\"{← ppExpr x} : {← ppExpr (← inferType x)}\"\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.runTermElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">runTermElabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(elabFn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span> → <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L391-L414","name":"Lean.Elab.Command.liftTermElabM","line":391,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftTermElabM","doc":"Lift the `TermElabM` monadic action `x` into a `CommandElabM` monadic action.\n\nNote that `x` is executed with an empty message log. Thus, `x` cannot modify/view messages produced by\nprevious commands.\n\nIf you need to access the free variables corresponding to the ones declared using the `variable` command,\nconsider using `runTermElabM`.\n\nRecall that `TermElabM` actions can automatically lift `MetaM` and `CoreM` actions.\nExample:\n```\nimport Lean\n\nopen Lean Elab Command Meta\n\ndef printExpr (e : Expr) : MetaM Unit := do\n  IO.println s!\"{← ppExpr e} : {← ppExpr (← inferType e)}\"\n\n#eval\n  liftTermElabM do\n    printExpr (mkConst ``Nat)\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.liftTermElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">liftTermElabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L350-L355","name":"Lean.Elab.Command.getBracketedBinderIds","line":350,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getBracketedBinderIds","doc":"Return identifier names in the given bracketed binder. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.getBracketedBinderIds\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">getBracketedBinderIds</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L341-L342","name":"Lean.Elab.Command.instInhabitedCommandElabM","line":341,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instInhabitedCommandElabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L334-L336","name":"Lean.Elab.Command.adaptExpander","line":334,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.adaptExpander","doc":"Adapt a syntax transformation to a regular, command-producing elaborator. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.adaptExpander\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">adaptExpander</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(exp : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L307-L331","name":"Lean.Elab.Command.elabCommandTopLevel","line":307,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.elabCommandTopLevel","doc":"`elabCommand` wrapper that should be used for the initial invocation, not for recursive calls after\nmacro expansion etc.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.elabCommandTopLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabCommandTopLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L275-L299","name":"Lean.Elab.Command.elabCommand","line":275,"kind":"opaque","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.elabCommand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.elabCommand\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabCommand</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L268-L271","name":"Lean.Elab.Command.showPartialSyntaxErrors","line":268,"kind":"opaque","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.showPartialSyntaxErrors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.showPartialSyntaxErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">showPartialSyntaxErrors</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L263-L266","name":"Lean.Elab.Command.instMonadRecDepthCommandElabM","line":263,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadRecDepthCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadRecDepthCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadRecDepthCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadRecDepth\">Lean.MonadRecDepth</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L258-L261","name":"Lean.Elab.Command.instMonadMacroAdapterCommandElabM","line":258,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadMacroAdapterCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadMacroAdapterCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadMacroAdapterCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Util.html#Lean.Elab.MonadMacroAdapter\">Lean.Elab.MonadMacroAdapter</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L254-L256","name":"Lean.Elab.Command.withMacroExpansion","line":254,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.withMacroExpansion","doc":"Elaborate `x` with `stx` on the macro stack "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.withMacroExpansion\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">withMacroExpansion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(beforeStx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(afterStx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L234-L234","name":"Lean.Elab.Command.commandElabAttribute","line":234,"kind":"opaque","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.commandElabAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.commandElabAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">commandElabAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">Lean.KeyedDeclsAttribute</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L232-L232","name":"Lean.Elab.Command.mkCommandElabAttribute","line":232,"kind":"opaque","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkCommandElabAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.mkCommandElabAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkCommandElabAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">Lean.KeyedDeclsAttribute</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L228-L229","name":"Lean.Elab.Command.mkCommandElabAttributeUnsafe","line":228,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkCommandElabAttributeUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.mkCommandElabAttributeUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkCommandElabAttributeUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute\">Lean.KeyedDeclsAttribute</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L223-L226","name":"Lean.Elab.Command.instMonadQuotationCommandElabM","line":223,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadQuotationCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadQuotationCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadQuotationCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L219-L221","name":"Lean.Elab.Command.withFreshMacroScope","line":219,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.withFreshMacroScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.withFreshMacroScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">withFreshMacroScope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L217-L217","name":"Lean.Elab.Command.getMainModule","line":217,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getMainModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.getMainModule\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">getMainModule</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L216-L216","name":"Lean.Elab.Command.getCurrMacroScope","line":216,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getCurrMacroScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.getCurrMacroScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">getCurrMacroScope</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L201-L214","name":"Lean.Elab.Command.runLinters","line":201,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.runLinters","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.runLinters\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">runLinters</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L190-L199","name":"Lean.Elab.Command.instMonadLogCommandElabM","line":190,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadLogCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadLogCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadLogCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Log.html#Lean.MonadLog\">Lean.MonadLog</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L186-L188","name":"Lean.Elab.Command.instMonadResolveNameCommandElabM","line":186,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadResolveNameCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadResolveNameCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadResolveNameCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ResolveName.html#Lean.MonadResolveName\">Lean.MonadResolveName</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L184-L184","name":"Lean.Elab.Command.getScope","line":184,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.getScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">getScope</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L181-L182","name":"Lean.Elab.Command.instMonadLiftTIOCommandElabM","line":181,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadLiftTIOCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadLiftTIOCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadLiftTIOCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L177-L179","name":"Lean.Elab.Command.liftIO","line":177,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.liftIO\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">liftIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L175-L175","name":"Lean.Elab.Command.liftEIO","line":175,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.liftEIO\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">liftEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L152-L169","name":"Lean.Elab.Command.liftCoreM","line":152,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftCoreM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.liftCoreM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">liftCoreM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L113-L116","name":"Lean.Elab.Command.mkMessageAux","line":113,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkMessageAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.mkMessageAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkMessageAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msgData : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(severity : <a href=\"./Lean/Message.html#Lean.MessageSeverity\">Lean.MessageSeverity</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.Message\">Lean.Message</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L105-L111","name":"Lean.Elab.Command.instAddErrorMessageContextCommandElabM","line":105,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instAddErrorMessageContextCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instAddErrorMessageContextCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instAddErrorMessageContextCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.AddErrorMessageContext\">Lean.AddErrorMessageContext</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L101-L103","name":"Lean.Elab.Command.instMonadTraceCommandElabM","line":101,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadTraceCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadTraceCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadTraceCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/Trace.html#Lean.MonadTrace\">Lean.MonadTrace</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L97-L99","name":"Lean.Elab.Command.instMonadRefCommandElabM","line":97,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadRefCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadRefCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadRefCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadRef\">Lean.MonadRef</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L94-L95","name":"Lean.Elab.Command.instAddMessageContextCommandElabM","line":94,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instAddMessageContextCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instAddMessageContextCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instAddMessageContextCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.AddMessageContext\">Lean.AddMessageContext</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L91-L92","name":"Lean.Elab.Command.getRef","line":91,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.getRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">getRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L88-L89","name":"Lean.Elab.Command.instMonadOptionsCommandElabM","line":88,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadOptionsCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadOptionsCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadOptionsCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.MonadOptions\">Lean.MonadOptions</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L83-L85","name":"Lean.Elab.Command.instMonadEnvCommandElabM","line":83,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadEnvCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadEnvCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadEnvCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L79-L81","name":"Lean.Elab.Command.instMonadInfoTreeCommandElabM","line":79,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadInfoTreeCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadInfoTreeCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadInfoTreeCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree\">Lean.Elab.MonadInfoTree</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L75-L77","name":"Lean.Elab.Command.addLinter","line":75,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.addLinter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.addLinter\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">addLinter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L72-L72","name":"Lean.Elab.Command.lintersRef","line":72,"kind":"opaque","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.lintersRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.lintersRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">lintersRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L63-L68","name":"Lean.Elab.Command.mkState","line":63,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.mkState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(messages : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>\n  <span class=\"fn\">{\n    <span class=\"fn\">msgs</span> :=\n      <span class=\"fn\">{ <span class=\"fn\">root</span> := <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArrayNode.node\">Lean.PersistentArrayNode.node</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array.mkEmpty\">Array.mkEmpty</a> (<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.toNat\">USize.toNat</a> <a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray.branching\">Lean.PersistentArray.branching</a></span>)</span>)</span>,\n        <span class=\"fn\">tail</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Array.mkEmpty\">Array.mkEmpty</a> (<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.toNat\">USize.toNat</a> <a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray.branching\">Lean.PersistentArray.branching</a></span>)</span>, <span class=\"fn\">size</span> := <span class=\"fn\">0</span>,\n        <span class=\"fn\">shift</span> := <a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray.initShift\">Lean.PersistentArray.initShift</a>, <span class=\"fn\">tailOff</span> := <span class=\"fn\">0</span> }</span> }</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a> <span class=\"fn\">{ <span class=\"fn\">entries</span> := <span class=\"fn\">[]</span> }</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L61-L61","name":"Lean.Elab.Command.instMonadCommandElabM","line":61,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instMonadCommandElabM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L52-L52","name":"Lean.Elab.Command.Linter.name","line":52,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Linter.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Linter</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L51-L51","name":"Lean.Elab.Command.Linter.run","line":51,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Linter.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Linter</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L50-L52","name":"Lean.Elab.Command.Linter","line":50,"kind":"structure","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Linter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Linter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L49-L49","name":"Lean.Elab.Command.CommandElab","line":49,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">CommandElab</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L48-L48","name":"Lean.Elab.Command.CommandElabM","line":48,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">CommandElabM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L47-L47","name":"Lean.Elab.Command.CommandElabCoreM","line":47,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabCoreM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabCoreM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">CommandElabCoreM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ε : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L45-L45","name":"Lean.Elab.Command.Context.tacticCache?","line":45,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context.tacticCache?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context.tacticCache?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span>.<span class=\"name\">tacticCache?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.Cache\">Lean.Elab.Tactic.Cache</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L44-L44","name":"Lean.Elab.Command.Context.ref","line":44,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L43-L43","name":"Lean.Elab.Command.Context.currMacroScope","line":43,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context.currMacroScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context.currMacroScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span>.<span class=\"name\">currMacroScope</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.MacroScope\">Lean.MacroScope</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L42-L42","name":"Lean.Elab.Command.Context.macroStack","line":42,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context.macroStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context.macroStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span>.<span class=\"name\">macroStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Util.html#Lean.Elab.MacroStack\">Lean.Elab.MacroStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L41-L41","name":"Lean.Elab.Command.Context.cmdPos","line":41,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context.cmdPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context.cmdPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span>.<span class=\"name\">cmdPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L40-L40","name":"Lean.Elab.Command.Context.currRecDepth","line":40,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context.currRecDepth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context.currRecDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span>.<span class=\"name\">currRecDepth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L39-L39","name":"Lean.Elab.Command.Context.fileMap","line":39,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context.fileMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context.fileMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span>.<span class=\"name\">fileMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L38-L38","name":"Lean.Elab.Command.Context.fileName","line":38,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context.fileName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context.fileName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span>.<span class=\"name\">fileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L37-L45","name":"Lean.Elab.Command.Context","line":37,"kind":"structure","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L35-L35","name":"Lean.Elab.Command.instNonemptyState","line":35,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instNonemptyState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instNonemptyState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instNonemptyState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L34-L34","name":"Lean.Elab.Command.State.traceState","line":34,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.traceState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.traceState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">traceState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/Trace.html#Lean.TraceState\">Lean.TraceState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L33-L33","name":"Lean.Elab.Command.State.infoState","line":33,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.infoState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.infoState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">infoState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoState\">Lean.Elab.InfoState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L32-L32","name":"Lean.Elab.Command.State.ngen","line":32,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.ngen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.ngen\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">ngen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta.html#Lean.NameGenerator\">Lean.NameGenerator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L31-L31","name":"Lean.Elab.Command.State.nextInstIdx","line":31,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.nextInstIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.nextInstIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">nextInstIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L30-L30","name":"Lean.Elab.Command.State.maxRecDepth","line":30,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.maxRecDepth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.maxRecDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">maxRecDepth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L29-L29","name":"Lean.Elab.Command.State.nextMacroScope","line":29,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.nextMacroScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.nextMacroScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">nextMacroScope</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L28-L28","name":"Lean.Elab.Command.State.scopes","line":28,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.scopes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.scopes\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">scopes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L27-L27","name":"Lean.Elab.Command.State.messages","line":27,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.messages","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.messages\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">messages</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L26-L26","name":"Lean.Elab.Command.State.env","line":26,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.env","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.env\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L25-L35","name":"Lean.Elab.Command.State","line":25,"kind":"structure","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L23-L23","name":"Lean.Elab.Command.instInhabitedScope","line":23,"kind":"instance","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">instInhabitedScope</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L22-L22","name":"Lean.Elab.Command.Scope.isNoncomputable","line":22,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.isNoncomputable","doc":"noncomputable sections automatically add the `noncomputable` modifier to any declaration we cannot generate code for. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.isNoncomputable\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span>.<span class=\"name\">isNoncomputable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L20-L20","name":"Lean.Elab.Command.Scope.varUIds","line":20,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.varUIds","doc":"Globally unique internal identifiers for the `varDecls` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.varUIds\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span>.<span class=\"name\">varUIds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L18-L18","name":"Lean.Elab.Command.Scope.varDecls","line":18,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.varDecls","doc":"section variables "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.varDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span>.<span class=\"name\">varDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Term.bracketedBinder</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L16-L16","name":"Lean.Elab.Command.Scope.levelNames","line":16,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.levelNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.levelNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span>.<span class=\"name\">levelNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L15-L15","name":"Lean.Elab.Command.Scope.openDecls","line":15,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.openDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.openDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span>.<span class=\"name\">openDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">Lean.OpenDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L14-L14","name":"Lean.Elab.Command.Scope.currNamespace","line":14,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.currNamespace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.currNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span>.<span class=\"name\">currNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L13-L13","name":"Lean.Elab.Command.Scope.opts","line":13,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.opts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.opts\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span>.<span class=\"name\">opts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L12-L12","name":"Lean.Elab.Command.Scope.header","line":12,"kind":"def","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.header","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.header\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span>.<span class=\"name\">header</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L11-L23","name":"Lean.Elab.Command.Scope","line":11,"kind":"structure","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L1-L1","name":"Lean.Elab.Command.Context.mk","line":1,"kind":"ctor","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fileName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fileMap : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(currRecDepth : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cmdPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(macroStack : <a href=\"./Lean/Elab/Util.html#Lean.Elab.MacroStack\">Lean.Elab.MacroStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(currMacroScope : <a href=\"./Init/Prelude.html#Lean.MacroScope\">Lean.MacroScope</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticCache? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.Cache\">Lean.Elab.Tactic.Cache</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Context\">Lean.Elab.Command.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L1-L1","name":"Lean.Elab.Command.State.mk","line":1,"kind":"ctor","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(messages : <a href=\"./Lean/Message.html#Lean.MessageLog\">Lean.MessageLog</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(scopes : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nextMacroScope : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(maxRecDepth : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nextInstIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ngen : <a href=\"./Init/Meta.html#Lean.NameGenerator\">Lean.NameGenerator</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(infoState : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoState\">Lean.Elab.InfoState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceState : <a href=\"./Lean/Util/Trace.html#Lean.TraceState\">Lean.TraceState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L1-L1","name":"Lean.Elab.Command.Linter.mk","line":1,"kind":"ctor","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Linter.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Linter</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(run : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Elab/Command.html#_auto._@.Lean.Elab.Command._hyg.448\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Elab/Command.lean#L1-L1","name":"Lean.Elab.Command.Scope.mk","line":1,"kind":"ctor","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">Scope</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(header : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(currNamespace : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(openDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">Lean.OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(levelNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(varDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Term.bracketedBinder</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(varUIds : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isNoncomputable : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Scope\">Lean.Elab.Command.Scope</a></div></div>"}]}