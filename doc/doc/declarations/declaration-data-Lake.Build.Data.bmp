{"name":"Lake.Build.Data","instances":[{"typeNames":["Lean.Name","Lake.TargetData","HAppend.hAppend","Lean.Name","instHAppend","Lean.instAppendName","Lean.Name.mkStr1"],"name":"Lake.instFamilyDefNameTargetDataHAppendInstHAppendInstAppendNameMkStr1","className":"Lake.FamilyDef"},{"typeNames":["Lean.Name","Lake.LibraryData"],"name":"Lake.instFamilyDefNameLibraryData","className":"Lake.FamilyDef"},{"typeNames":["Lake.BuildKey","Lake.BuildData","Lake.BuildKey.moduleFacet","Lake.ModuleData"],"name":"Lake.instFamilyDefBuildKeyBuildDataModuleFacetModuleData","className":"Lake.FamilyDef"},{"typeNames":["Lake.BuildKey","Lake.BuildData","Lake.BuildKey.packageFacet","Lake.PackageData"],"name":"Lake.instFamilyDefBuildKeyBuildDataPackageFacetPackageData","className":"Lake.FamilyDef"},{"typeNames":["Lake.BuildKey","Lake.BuildData","Lake.BuildKey.targetFacet","Lake.TargetData"],"name":"Lake.instFamilyDefBuildKeyBuildDataTargetFacetTargetData","className":"Lake.FamilyDef"},{"typeNames":["Lake.BuildKey","Lake.BuildData","Lake.BuildKey.customTarget","Lake.CustomData","Prod.mk","Lean.Name"],"name":"Lake.instFamilyDefBuildKeyBuildDataCustomTargetCustomDataMkName","className":"Lake.FamilyDef"}],"imports":["Init","Lake.Build.Key","Lake.Util.Family"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L125-L131","name":"Lake.customDataDecl","line":125,"kind":"def","docLink":"./Lake/Build/Data.html#Lake.customDataDecl","doc":"Macro for declaring new `CustomData`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.customDataDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">customDataDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L118-L122","name":"Lake.targetDataDecl","line":118,"kind":"def","docLink":"./Lake/Build/Data.html#Lake.targetDataDecl","doc":"Macro for declaring new `TargetData`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.targetDataDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">targetDataDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L110-L115","name":"Lake.libraryDataDecl","line":110,"kind":"def","docLink":"./Lake/Build/Data.html#Lake.libraryDataDecl","doc":"Macro for declaring new `TargetData` for libraries. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.libraryDataDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">libraryDataDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L103-L107","name":"Lake.moduleDataDecl","line":103,"kind":"def","docLink":"./Lake/Build/Data.html#Lake.moduleDataDecl","doc":"Macro for declaring new `ModuleData`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.moduleDataDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">moduleDataDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L96-L100","name":"Lake.packageDataDecl","line":96,"kind":"def","docLink":"./Lake/Build/Data.html#Lake.packageDataDecl","doc":"Macro for declaring new `PackageData`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.packageDataDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">packageDataDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L89-L89","name":"Lake.instFamilyDefBuildKeyBuildDataCustomTargetCustomDataMkName","line":89,"kind":"instance","docLink":"./Lake/Build/Data.html#Lake.instFamilyDefBuildKeyBuildDataCustomTargetCustomDataMkName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.instFamilyDefBuildKeyBuildDataCustomTargetCustomDataMkName\"><span class=\"name\">Lake</span>.<span class=\"name\">instFamilyDefBuildKeyBuildDataCustomTargetCustomDataMkName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.BuildData\">Lake.BuildData</a> (<span class=\"fn\"><a href=\"./Lake/Build/Key.html#Lake.BuildKey.customTarget\">Lake.BuildKey.customTarget</a> <span class=\"fn\">p</span> <span class=\"fn\">t</span></span>) (<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.CustomData\">Lake.CustomData</a> <span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">t</span>)</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L88-L88","name":"Lake.instFamilyDefBuildKeyBuildDataTargetFacetTargetData","line":88,"kind":"instance","docLink":"./Lake/Build/Data.html#Lake.instFamilyDefBuildKeyBuildDataTargetFacetTargetData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.instFamilyDefBuildKeyBuildDataTargetFacetTargetData\"><span class=\"name\">Lake</span>.<span class=\"name\">instFamilyDefBuildKeyBuildDataTargetFacetTargetData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.BuildData\">Lake.BuildData</a> (<span class=\"fn\"><a href=\"./Lake/Build/Key.html#Lake.BuildKey.targetFacet\">Lake.BuildKey.targetFacet</a> <span class=\"fn\">p</span> <span class=\"fn\">t</span> <span class=\"fn\">f</span></span>) (<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.TargetData\">Lake.TargetData</a> <span class=\"fn\">f</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L87-L87","name":"Lake.instFamilyDefBuildKeyBuildDataPackageFacetPackageData","line":87,"kind":"instance","docLink":"./Lake/Build/Data.html#Lake.instFamilyDefBuildKeyBuildDataPackageFacetPackageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.instFamilyDefBuildKeyBuildDataPackageFacetPackageData\"><span class=\"name\">Lake</span>.<span class=\"name\">instFamilyDefBuildKeyBuildDataPackageFacetPackageData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.BuildData\">Lake.BuildData</a> (<span class=\"fn\"><a href=\"./Lake/Build/Key.html#Lake.BuildKey.packageFacet\">Lake.BuildKey.packageFacet</a> <span class=\"fn\">p</span> <span class=\"fn\">f</span></span>) (<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.PackageData\">Lake.PackageData</a> <span class=\"fn\">f</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L86-L86","name":"Lake.instFamilyDefBuildKeyBuildDataModuleFacetModuleData","line":86,"kind":"instance","docLink":"./Lake/Build/Data.html#Lake.instFamilyDefBuildKeyBuildDataModuleFacetModuleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.instFamilyDefBuildKeyBuildDataModuleFacetModuleData\"><span class=\"name\">Lake</span>.<span class=\"name\">instFamilyDefBuildKeyBuildDataModuleFacetModuleData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.BuildData\">Lake.BuildData</a> (<span class=\"fn\"><a href=\"./Lake/Build/Key.html#Lake.BuildKey.moduleFacet\">Lake.BuildKey.moduleFacet</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span></span>) (<span class=\"fn\"><a href=\"./Lake/Build/Data.html#Lake.ModuleData\">Lake.ModuleData</a> <span class=\"fn\">f</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L80-L84","name":"Lake.BuildData","line":80,"kind":"def","docLink":"./Lake/Build/Data.html#Lake.BuildData","doc":"A mapping between a build key and its associated build data in the store.\nIt is a simple type function composed of the separate open type families for\nmodules facets, package facets, Lake target facets, and custom targets.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.BuildData\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Key.html#Lake.BuildKey\">Lake.BuildKey</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L69-L69","name":"Lake.CustomData","line":69,"kind":"opaque","docLink":"./Lake/Build/Data.html#Lake.CustomData","doc":"The open type family which maps a custom target (package × target name) to\nits build data in the Lake build store.\n\nIt is an open type, meaning additional mappings can be add lazily\nas needed (via `custom_data`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.CustomData\"><span class=\"name\">Lake</span>.<span class=\"name\">CustomData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L59-L60","name":"Lake.instFamilyDefNameLibraryData","line":59,"kind":"instance","docLink":"./Lake/Build/Data.html#Lake.instFamilyDefNameLibraryData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.instFamilyDefNameLibraryData\"><span class=\"name\">Lake</span>.<span class=\"name\">instFamilyDefNameLibraryData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">Lake.FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.TargetData\">Lake.TargetData</a> (<span class=\"fn\"><span class=\"fn\">`leanLib</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">facet</span></span>) <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.LibraryData\">Lake.LibraryData</a> <span class=\"fn\">facet</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L56-L57","name":"Lake.instFamilyDefNameTargetDataHAppendInstHAppendInstAppendNameMkStr1","line":56,"kind":"instance","docLink":"./Lake/Build/Data.html#Lake.instFamilyDefNameTargetDataHAppendInstHAppendInstAppendNameMkStr1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.instFamilyDefNameTargetDataHAppendInstHAppendInstAppendNameMkStr1\"><span class=\"name\">Lake</span>.<span class=\"name\">instFamilyDefNameTargetDataHAppendInstHAppendInstAppendNameMkStr1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">Lake.FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.LibraryData\">Lake.LibraryData</a> <span class=\"fn\">facet</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.TargetData\">Lake.TargetData</a> (<span class=\"fn\"><span class=\"fn\">`leanLib</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">facet</span></span>) <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L54-L54","name":"Lake.LibraryData","line":54,"kind":"def","docLink":"./Lake/Build/Data.html#Lake.LibraryData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.LibraryData\"><span class=\"name\">Lake</span>.<span class=\"name\">LibraryData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L44-L44","name":"Lake.TargetData","line":44,"kind":"opaque","docLink":"./Lake/Build/Data.html#Lake.TargetData","doc":"The open type family which maps a (builtin) Lake target's (e.g., `extern_lib`)\nfacet to its associated build data. For example, an active build target for\nthe `externLib.static` facet.\n\nIt is an open type, meaning additional mappings can be add lazily\nas needed (via `target_data`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.TargetData\"><span class=\"name\">Lake</span>.<span class=\"name\">TargetData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L34-L34","name":"Lake.PackageData","line":34,"kind":"opaque","docLink":"./Lake/Build/Data.html#Lake.PackageData","doc":"The open type family which maps a package facet's name to its build data\nin the Lake build store. For example, a transitive dependencies of the package\nfor the facet `deps`.\n\nIt is an open type, meaning additional mappings can be add lazily\nas needed (via `package_data`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.PackageData\"><span class=\"name\">Lake</span>.<span class=\"name\">PackageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/lake/Lake/Build/Data.lean#L24-L24","name":"Lake.ModuleData","line":24,"kind":"opaque","docLink":"./Lake/Build/Data.html#Lake.ModuleData","doc":"The open type family which maps a module facet's name to its build data\nin the Lake build store. For example, a transitive × direct import pair\nfor the `lean.imports` facet or an active build target for `lean.c`.\n\nIt is an open type, meaning additional mappings can be add lazily\nas needed (via `module_data`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Data.html#Lake.ModuleData\"><span class=\"name\">Lake</span>.<span class=\"name\">ModuleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}