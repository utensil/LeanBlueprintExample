{"name":"Lean.Meta.Match.CaseValues","instances":[{"typeNames":["Lean.Meta.CaseValueSubgoal"],"name":"Lean.Meta.instInhabitedCaseValueSubgoal","className":"Inhabited"},{"typeNames":["Lean.Meta.CaseValuesSubgoal"],"name":"Lean.Meta.instInhabitedCaseValuesSubgoal","className":"Inhabited"}],"imports":["Init","Lean.Meta.Tactic.Subst","Lean.Meta.Tactic.Clear","Lean.Meta.Match.Value"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L83-L102","name":"Lean.Meta.caseValues.loop","line":83,"kind":"def","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValues.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValues.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">caseValues</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNamePrefix : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <span class=\"fn\">`h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(substNewEqs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> →\n  <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span> →\n      <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">Lean.Meta.CaseValuesSubgoal</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">Lean.Meta.CaseValuesSubgoal</a></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L82-L103","name":"Lean.Meta.caseValues","line":82,"kind":"def","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValues","doc":"Split goal `... |- C x` into values.size + 1 subgoals\n1) `..., (h_1 : x = value[0])  |- C value[0]`\n...\nn) `..., (h_n : x = value[n - 1])  |- C value[n - 1]`\nn+1) `..., (h_1 : x != value[0]) ... (h_n : x != value[n-1]) |- C x`\nwhere `n = values.size`\nwhere `fvarId` is `x`s id.\nThe type of `x` must have decidable equality.\n\nRemark: the last subgoal is for the \"else\" catchall case, and its `subst` is `{}`.\nRemark: the fiels `newHs` has size 1 forall but the last subgoal.\n\nIf `substNewEqs = true`, then the new `h_i` equality hypotheses are substituted in the first `n` cases.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValues\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">caseValues</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(values : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNamePrefix : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <span class=\"fn\">`h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(substNewEqs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">Lean.Meta.CaseValuesSubgoal</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L65-L65","name":"Lean.Meta.instInhabitedCaseValuesSubgoal","line":65,"kind":"instance","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValuesSubgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValuesSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedCaseValuesSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">Lean.Meta.CaseValuesSubgoal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L64-L64","name":"Lean.Meta.CaseValuesSubgoal.subst","line":64,"kind":"def","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.subst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.subst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">Lean.Meta.CaseValuesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">Lean.Meta.FVarSubst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L63-L63","name":"Lean.Meta.CaseValuesSubgoal.newHs","line":63,"kind":"def","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.newHs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.newHs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span>.<span class=\"name\">newHs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">Lean.Meta.CaseValuesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L62-L62","name":"Lean.Meta.CaseValuesSubgoal.mvarId","line":62,"kind":"def","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.mvarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.mvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span>.<span class=\"name\">mvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">Lean.Meta.CaseValuesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L61-L65","name":"Lean.Meta.CaseValuesSubgoal","line":61,"kind":"structure","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L55-L59","name":"Lean.Meta.caseValue","line":55,"kind":"def","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">caseValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">Lean.Meta.CaseValueSubgoal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">Lean.Meta.CaseValueSubgoal</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L16-L16","name":"Lean.Meta.instInhabitedCaseValueSubgoal","line":16,"kind":"instance","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValueSubgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValueSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedCaseValueSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">Lean.Meta.CaseValueSubgoal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L15-L15","name":"Lean.Meta.CaseValueSubgoal.subst","line":15,"kind":"def","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.subst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.subst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">Lean.Meta.CaseValueSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">Lean.Meta.FVarSubst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L14-L14","name":"Lean.Meta.CaseValueSubgoal.newH","line":14,"kind":"def","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.newH","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.newH\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span>.<span class=\"name\">newH</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">Lean.Meta.CaseValueSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L13-L13","name":"Lean.Meta.CaseValueSubgoal.mvarId","line":13,"kind":"def","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.mvarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.mvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span>.<span class=\"name\">mvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">Lean.Meta.CaseValueSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L12-L16","name":"Lean.Meta.CaseValueSubgoal","line":12,"kind":"structure","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L1-L1","name":"Lean.Meta.CaseValueSubgoal.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValueSubgoal</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newH : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subst : <a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">Lean.Meta.FVarSubst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal\">Lean.Meta.CaseValueSubgoal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseValues.lean#L1-L1","name":"Lean.Meta.CaseValuesSubgoal.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseValuesSubgoal</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newHs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subst : <a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">Lean.Meta.FVarSubst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal\">Lean.Meta.CaseValuesSubgoal</a></div></div>"}]}