{"name":"Lean.Meta.Match.CaseArraySizes","instances":[{"typeNames":["Lean.Meta.CaseArraySizesSubgoal"],"name":"Lean.Meta.instInhabitedCaseArraySizesSubgoal","className":"Inhabited"}],"imports":["Init","Lean.Meta.Tactic.Assert","Lean.Meta.Match.CaseValues"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseArraySizes.lean#L60-L87","name":"Lean.Meta.caseArraySizes","line":60,"kind":"def","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.caseArraySizes","doc":"Split goal `... |- C a` into sizes.size + 1 subgoals\n1) `..., x_1 ... x_{sizes[0]} |- C #[x_1, ... x_{sizes[0]}]`\n...\nn) `..., x_1 ... x_{sizes[n-1]}  |- C #[x_1, ..., x_{sizes[n-1]}]`\nn+1) `..., (h_1 : a.size != sizes[0]), ..., (h_n : a.size != sizes[n-1]) |- C a`\nwhere `n = sizes.size` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.caseArraySizes\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">caseArraySizes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sizes : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xNamePrefix : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <span class=\"fn\">`x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNamePrefix : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <span class=\"fn\">`h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal\">Lean.Meta.CaseArraySizesSubgoal</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseArraySizes.lean#L18-L23","name":"Lean.Meta.getArrayArgType","line":18,"kind":"def","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.getArrayArgType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.getArrayArgType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">getArrayArgType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseArraySizes.lean#L16-L16","name":"Lean.Meta.instInhabitedCaseArraySizesSubgoal","line":16,"kind":"instance","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.instInhabitedCaseArraySizesSubgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.instInhabitedCaseArraySizesSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instInhabitedCaseArraySizesSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal\">Lean.Meta.CaseArraySizesSubgoal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseArraySizes.lean#L15-L15","name":"Lean.Meta.CaseArraySizesSubgoal.subst","line":15,"kind":"def","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.subst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.subst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseArraySizesSubgoal</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal\">Lean.Meta.CaseArraySizesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">Lean.Meta.FVarSubst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseArraySizes.lean#L14-L14","name":"Lean.Meta.CaseArraySizesSubgoal.diseqs","line":14,"kind":"def","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.diseqs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.diseqs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseArraySizesSubgoal</span>.<span class=\"name\">diseqs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal\">Lean.Meta.CaseArraySizesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseArraySizes.lean#L13-L13","name":"Lean.Meta.CaseArraySizesSubgoal.elems","line":13,"kind":"def","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.elems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.elems\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseArraySizesSubgoal</span>.<span class=\"name\">elems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal\">Lean.Meta.CaseArraySizesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseArraySizes.lean#L12-L12","name":"Lean.Meta.CaseArraySizesSubgoal.mvarId","line":12,"kind":"def","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.mvarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.mvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseArraySizesSubgoal</span>.<span class=\"name\">mvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal\">Lean.Meta.CaseArraySizesSubgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseArraySizes.lean#L11-L16","name":"Lean.Meta.CaseArraySizesSubgoal","line":11,"kind":"structure","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseArraySizesSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a62d2fd4979671b76b8ab13ccbe4fdf410ec0d9d/src/Lean/Meta/Match/CaseArraySizes.lean#L1-L1","name":"Lean.Meta.CaseArraySizesSubgoal.mk","line":1,"kind":"ctor","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">CaseArraySizesSubgoal</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(elems : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(diseqs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subst : <a href=\"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst\">Lean.Meta.FVarSubst</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal\">Lean.Meta.CaseArraySizesSubgoal</a></div></div>"}]}